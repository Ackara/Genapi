﻿/// <summary>
/// List all pets.
/// </summary>
// <param name="limit">How many items to return at one time (max 100).</param>
public async Task<ApiResponse<IEnumerable<Pet>>> listPets(int limit)
{
	var request = new HttpRequestMessage(HttpMethod.Get, GetEndpoint($"/pets?limit={limit}"));
	HttpClient client = _factory.CreateClient();
	using (HttpResponseMessage response = await client.SendAsync(request))
	{
		switch ((int)response.StatusCode)
		{
			case 200:
				return new ApiResponse<IEnumerable<Pet>>(JsonSerializer.Deserialize<IEnumerable<Pet>>(await response.Content.ReadAsStringAsync(), _serializerOptions), (int)response.StatusCode);
			default:
				return new ApiResponse<Error>(JsonSerializer.Deserialize<Error>(await response.Content.ReadAsStringAsync(), _serializerOptions), (int)response.StatusCode);
		}
	}
}
