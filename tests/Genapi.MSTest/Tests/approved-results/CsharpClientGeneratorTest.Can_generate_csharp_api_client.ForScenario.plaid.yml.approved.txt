== NewAccountsAvailableWebhook.cs
==================================================

public class NewAccountsAvailableWebhook
{
	/// <summary>`ITEM`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`NEW_ACCOUNTS_AVAILABLE`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

}


== SandboxOauthSelectAccountsResponse.cs
==================================================

public class SandboxOauthSelectAccountsResponse
{
}


== SandboxOauthSelectAccountsRequest.cs
==================================================

public class SandboxOauthSelectAccountsRequest
{
	[JsonPropertyName("oauth_state_id")]
	public string oauth_state_id { get; set; }

	[JsonPropertyName("accounts")]
	public string[] accounts { get; set; }

}


== SignalReturnReportResponse.cs
==================================================

public class SignalReturnReportResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== SignalReturnReportRequest.cs
==================================================

public class SignalReturnReportRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>Must be the same as the `client_transaction_id` supplied when calling `/signal/evaluate`</summary>
	[JsonPropertyName("client_transaction_id")]
	public string client_transaction_id { get; set; }

	/// <summary>Must be a valid ACH return code (e.g. "R01")</summary>
	[JsonPropertyName("return_code")]
	public string return_code { get; set; }

}


== SignalDecisionReportResponse.cs
==================================================

public class SignalDecisionReportResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== SignalDecisionReportRequest.cs
==================================================

public class SignalDecisionReportRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>Must be the same as the `client_transaction_id` supplied when calling `/signal/evaluate`</summary>
	[JsonPropertyName("client_transaction_id")]
	public string client_transaction_id { get; set; }

	/// <summary>`true` if the ACH transaction was initiated, `false` otherwise.</summary>
	[JsonPropertyName("initiated")]
	public bool initiated { get; set; }

}


== SignalEvaluateCoreAttributes.cs
==================================================

public class SignalEvaluateCoreAttributes
{
	/// <summary>We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 7 days from the account that will be debited.</summary>
	[JsonPropertyName("unauthorized_transactions_count_7d")]
	public int unauthorized_transactions_count_7d { get; set; }

	/// <summary>We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 30 days from the account that will be debited.</summary>
	[JsonPropertyName("unauthorized_transactions_count_30d")]
	public int unauthorized_transactions_count_30d { get; set; }

	/// <summary>We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 60 days from the account that will be debited.</summary>
	[JsonPropertyName("unauthorized_transactions_count_60d")]
	public int unauthorized_transactions_count_60d { get; set; }

	/// <summary>We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 90 days from the account that will be debited.</summary>
	[JsonPropertyName("unauthorized_transactions_count_90d")]
	public int unauthorized_transactions_count_90d { get; set; }

	/// <summary>We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 7 days from the account that will be debited.</summary>
	[JsonPropertyName("nsf_overdraft_transactions_count_7d")]
	public int nsf_overdraft_transactions_count_7d { get; set; }

	/// <summary>We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 30 days from the account that will be debited.</summary>
	[JsonPropertyName("nsf_overdraft_transactions_count_30d")]
	public int nsf_overdraft_transactions_count_30d { get; set; }

	/// <summary>We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 60 days from the account that will be debited.</summary>
	[JsonPropertyName("nsf_overdraft_transactions_count_60d")]
	public int nsf_overdraft_transactions_count_60d { get; set; }

	/// <summary>We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 90 days from the account that will be debited.</summary>
	[JsonPropertyName("nsf_overdraft_transactions_count_90d")]
	public int nsf_overdraft_transactions_count_90d { get; set; }

	/// <summary>The number of days since the first time the Item was connected to an application via Plaid</summary>
	[JsonPropertyName("days_since_first_plaid_connection")]
	public int days_since_first_plaid_connection { get; set; }

	/// <summary>The number of times the Item has been connected to applications via Plaid over the past 7 days</summary>
	[JsonPropertyName("plaid_connections_count_7d")]
	public int plaid_connections_count_7d { get; set; }

	/// <summary>The number of times the Item has been connected to applications via Plaid over the past 30 days</summary>
	[JsonPropertyName("plaid_connections_count_30d")]
	public int plaid_connections_count_30d { get; set; }

	/// <summary>The total number of times the Item has been connected to applications via Plaid</summary>
	[JsonPropertyName("total_plaid_connections_count")]
	public int total_plaid_connections_count { get; set; }

	/// <summary>Indicates if the ACH transaction funding account is a savings/money market account</summary>
	[JsonPropertyName("is_savings_or_money_market_account")]
	public bool is_savings_or_money_market_account { get; set; }

	/// <summary>The total credit (inflow) transaction amount over the past 10 days from the account that will be debited</summary>
	[JsonPropertyName("total_credit_transactions_amount_10d")]
	public string total_credit_transactions_amount_10d { get; set; }

	/// <summary>The total debit (outflow) transaction amount over the past 10 days from the account that will be debited</summary>
	[JsonPropertyName("total_debit_transactions_amount_10d")]
	public string total_debit_transactions_amount_10d { get; set; }

	/// <summary>The 50th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited</summary>
	[JsonPropertyName("p50_credit_transactions_amount_28d")]
	public string p50_credit_transactions_amount_28d { get; set; }

	/// <summary>The 50th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited</summary>
	[JsonPropertyName("p50_debit_transactions_amount_28d")]
	public string p50_debit_transactions_amount_28d { get; set; }

	/// <summary>The 95th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited</summary>
	[JsonPropertyName("p95_credit_transactions_amount_28d")]
	public string p95_credit_transactions_amount_28d { get; set; }

	/// <summary>The 95th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited</summary>
	[JsonPropertyName("p95_debit_transactions_amount_28d")]
	public string p95_debit_transactions_amount_28d { get; set; }

	/// <summary>The number of days within the past 90 days when the account that will be debited had a negative end-of-day available balance</summary>
	[JsonPropertyName("days_with_negative_balance_count_90d")]
	public int days_with_negative_balance_count_90d { get; set; }

	/// <summary>The 90th percentile of the end-of-day available balance over the past 30 days of the account that will be debited</summary>
	[JsonPropertyName("p90_eod_balance_30d")]
	public string p90_eod_balance_30d { get; set; }

	/// <summary>The 90th percentile of the end-of-day available balance over the past 60 days of the account that will be debited</summary>
	[JsonPropertyName("p90_eod_balance_60d")]
	public string p90_eod_balance_60d { get; set; }

	/// <summary>The 90th percentile of the end-of-day available balance over the past 90 days of the account that will be debited</summary>
	[JsonPropertyName("p90_eod_balance_90d")]
	public string p90_eod_balance_90d { get; set; }

	/// <summary>The 10th percentile of the end-of-day available balance over the past 30 days of the account that will be debited</summary>
	[JsonPropertyName("p10_eod_balance_30d")]
	public string p10_eod_balance_30d { get; set; }

	/// <summary>The 10th percentile of the end-of-day available balance over the past 60 days of the account that will be debited</summary>
	[JsonPropertyName("p10_eod_balance_60d")]
	public string p10_eod_balance_60d { get; set; }

	/// <summary>The 10th percentile of the end-of-day available balance over the past 90 days of the account that will be debited</summary>
	[JsonPropertyName("p10_eod_balance_90d")]
	public string p10_eod_balance_90d { get; set; }

	/// <summary>Available balance, as of the `balance_last_updated` time. The available balance is the current balance less any outstanding holds or debits that have not yet posted to the account.</summary>
	[JsonPropertyName("available_balance")]
	public string available_balance { get; set; }

	/// <summary>Current balance, as of the `balance_last_updated` time. The current balance is the total amount of funds in the account.</summary>
	[JsonPropertyName("current_balance")]
	public string current_balance { get; set; }

	/// <summary>Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDTHH:mm:ssZ) indicating the last time that the balance for the given account has been updated.</summary>
	[JsonPropertyName("balance_last_updated")]
	public DateTime balance_last_updated { get; set; }

	/// <summary>The number of times the account's phone numbers on file have changed over the past 28 days</summary>
	[JsonPropertyName("phone_change_count_28d")]
	public int phone_change_count_28d { get; set; }

	/// <summary>The number of times the account's phone numbers on file have changed over the past 90 days</summary>
	[JsonPropertyName("phone_change_count_90d")]
	public int phone_change_count_90d { get; set; }

	/// <summary>The number of times the account's email addresses on file have changed over the past 28 days</summary>
	[JsonPropertyName("email_change_count_28d")]
	public int email_change_count_28d { get; set; }

	/// <summary>The number of times the account's email addresses on file have changed over the past 90 days</summary>
	[JsonPropertyName("email_change_count_90d")]
	public int email_change_count_90d { get; set; }

	/// <summary>The number of times the account's addresses on file have changed over the past 28 days</summary>
	[JsonPropertyName("address_change_count_28d")]
	public int address_change_count_28d { get; set; }

	/// <summary>The number of times the account's addresses on file have changed over the past 90 days</summary>
	[JsonPropertyName("address_change_count_90d")]
	public int address_change_count_90d { get; set; }

}


== BankInitiatedReturnRisk.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 8: Invalid token '1' in class, record, struct, or interface member declaration
[CS1003] Line 8: Syntax error, ',' expected
[CS1002] Line 8: ; expected
[CS1519] Line 8: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1519] Line 8: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1002] Line 8: ; expected
[CS1519] Line 8: Invalid token '0.0' in class, record, struct, or interface member declaration
[CS1519] Line 8: Invalid token '0.0' in class, record, struct, or interface member declaration
[CS1003] Line 9: Syntax error, ',' expected
[CS1002] Line 9: ; expected
[CS1519] Line 9: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1002] Line 9: ; expected
[CS1519] Line 9: Invalid token '0.5' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token '0.5' in class, record, struct, or interface member declaration
[CS1003] Line 10: Syntax error, ',' expected
[CS1002] Line 10: ; expected
[CS1519] Line 10: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1519] Line 10: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1002] Line 10: ; expected
[CS1519] Line 10: Invalid token '1.5' in class, record, struct, or interface member declaration
[CS1519] Line 10: Invalid token '1.5' in class, record, struct, or interface member declaration
[CS1003] Line 11: Syntax error, ',' expected
[CS1002] Line 11: ; expected
[CS1519] Line 11: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1002] Line 11: ; expected
[CS1519] Line 11: Invalid token '3' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token '3' in class, record, struct, or interface member declaration
[CS1003] Line 12: Syntax error, ',' expected
[CS1002] Line 12: ; expected
[CS1519] Line 12: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1519] Line 12: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1002] Line 12: ; expected
[CS1519] Line 12: Invalid token '5' in class, record, struct, or interface member declaration
[CS1519] Line 12: Invalid token '5' in class, record, struct, or interface member declaration
[CS1003] Line 13: Syntax error, ',' expected
[CS1002] Line 13: ; expected
[CS1519] Line 13: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1002] Line 13: ; expected
[CS1519] Line 13: Invalid token '10' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token '10' in class, record, struct, or interface member declaration
[CS1003] Line 14: Syntax error, ',' expected
[CS1002] Line 14: ; expected
[CS1519] Line 14: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1519] Line 14: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1002] Line 14: ; expected
[CS1519] Line 14: Invalid token '15' in class, record, struct, or interface member declaration
[CS1519] Line 14: Invalid token '15' in class, record, struct, or interface member declaration
[CS1519] Line 14: Invalid token '50' in class, record, struct, or interface member declaration
[CS1519] Line 14: Invalid token '50' in class, record, struct, or interface member declaration
[CS1003] Line 15: Syntax error, ',' expected
[CS1002] Line 15: ; expected
[CS1519] Line 15: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1519] Line 15: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1002] Line 15: ; expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1002] Line 16: ; expected
[CS1519] Line 16: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 16: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class BankInitiatedReturnRisk
{
	/// <summary>A score from 0-99 that indicates the transaction return risk: a higher risk score suggests a higher return likelihood.</summary>
	[JsonPropertyName("score")]
	public SignalScore score { get; set; }

	/// <summary>In the `bank_initiated_return_risk` object, there are eight risk tiers corresponding to the scores:
  1: Predicted bank-initiated return incidence rate between 0.0% - 0.5%
  2: Predicted bank-initiated return incidence rate between 0.5% - 1.5%
  3: Predicted bank-initiated return incidence rate between 1.5% - 3%
  4: Predicted bank-initiated return incidence rate between 3% - 5%
  5: Predicted bank-initiated return incidence rate between 5% - 10%
  6: Predicted bank-initiated return incidence rate between 10% - 15%
  7: Predicted bank-initiated return incidence rate between 15% and 50%
  8: Predicted bank-initiated return incidence rate greater than 50%
</summary>
	[JsonPropertyName("risk_tier")]
	public BankInitiatedRiskTier risk_tier { get; set; }

}


== CustomerInitiatedReturnRisk.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 9: Unexpected character '`'
[CS1002] Line 9: ; expected
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 9: Unexpected character '`'
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token ',' in class, record, struct, or interface member declaration
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1519] Line 9: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token ':' in class, record, struct, or interface member declaration
[CS1003] Line 10: Syntax error, ',' expected
[CS1002] Line 10: ; expected
[CS1519] Line 10: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1519] Line 10: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1002] Line 10: ; expected
[CS1519] Line 10: Invalid token '0.00' in class, record, struct, or interface member declaration
[CS1519] Line 10: Invalid token '0.00' in class, record, struct, or interface member declaration
[CS1003] Line 11: Syntax error, ',' expected
[CS1002] Line 11: ; expected
[CS1519] Line 11: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1002] Line 11: ; expected
[CS1519] Line 11: Invalid token '0.02' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token '0.02' in class, record, struct, or interface member declaration
[CS1003] Line 12: Syntax error, ',' expected
[CS1002] Line 12: ; expected
[CS1519] Line 12: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1519] Line 12: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1002] Line 12: ; expected
[CS1519] Line 12: Invalid token '0.05' in class, record, struct, or interface member declaration
[CS1519] Line 12: Invalid token '0.05' in class, record, struct, or interface member declaration
[CS1003] Line 13: Syntax error, ',' expected
[CS1002] Line 13: ; expected
[CS1519] Line 13: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1002] Line 13: ; expected
[CS1519] Line 13: Invalid token '0.1' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token '0.1' in class, record, struct, or interface member declaration
[CS1003] Line 14: Syntax error, ',' expected
[CS1002] Line 14: ; expected
[CS1519] Line 14: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1519] Line 14: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1002] Line 14: ; expected
[CS1003] Line 14: Syntax error, ',' expected
[CS1002] Line 15: ; expected
[CS1519] Line 15: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 15: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class CustomerInitiatedReturnRisk
{
	/// <summary>A score from 0-99 that indicates the transaction return risk: a higher risk score suggests a higher return likelihood.</summary>
	[JsonPropertyName("score")]
	public SignalScore score { get; set; }

	/// <summary>A tier corresponding to the projected likelihood that the transaction, if initiated, will be subject to a return.

In the `customer_initiated_return_risk` object, there are five risk tiers corresponding to the scores:
  1: Predicted customer-initiated return incidence rate between 0.00% - 0.02%
  2: Predicted customer-initiated return incidence rate between 0.02% - 0.05%
  3: Predicted customer-initiated return incidence rate between 0.05% - 0.1%
  4: Predicted customer-initiated return incidence rate between 0.1% - 0.5%
  5: Predicted customer-initiated return incidence rate greater than 0.5%
</summary>
	[JsonPropertyName("risk_tier")]
	public CustomerInitiatedRiskTier risk_tier { get; set; }

}


== SignalScores.cs
==================================================

public class SignalScores
{
	/// <summary>The object contains a risk score and a risk tier that evaluate the transaction return risk of an unauthorized debit. Common return codes in this category include: “R05”, "R07", "R10", "R11", "R29". These returns typically have a return time frame of up to 60 calendar days. During this period, the customer of financial institutions can dispute a transaction as unauthorized.</summary>
	[JsonPropertyName("customer_initiated_return_risk")]
	public CustomerInitiatedReturnRisk customer_initiated_return_risk { get; set; }

	/// <summary>The object contains a risk score and a risk tier that evaluate the transaction return risk because an account is overdrawn or because an ineligible account is used. Common return codes in this category include: "R01", "R02", "R03", "R04", "R06", “R08”,  "R09", "R13", "R16", "R17", "R20", "R23". These returns have a turnaround time of 2 banking days.</summary>
	[JsonPropertyName("bank_initiated_return_risk")]
	public BankInitiatedReturnRisk bank_initiated_return_risk { get; set; }

}


== SignalEvaluateResponse.cs
==================================================

public class SignalEvaluateResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

	/// <summary>Risk scoring details broken down by risk category.</summary>
	[JsonPropertyName("scores")]
	public SignalScores scores { get; set; }

	/// <summary>The core attributes object contains additional data that can be used to assess the ACH return risk, such as past ACH return events, balance/transaction history, the Item’s connection history in the Plaid network, and identity change history.</summary>
	[JsonPropertyName("core_attributes")]
	public SignalEvaluateCoreAttributes core_attributes { get; set; }

}


== SignalDevice.cs
==================================================

public class SignalDevice
{
	/// <summary>The IP address of the device that initiated the transaction</summary>
	[JsonPropertyName("ip_address")]
	public string ip_address { get; set; }

	/// <summary>The user agent of the device that initiated the transaction (e.g. "Mozilla/5.0")</summary>
	[JsonPropertyName("user_agent")]
	public string user_agent { get; set; }

}


== SignalAddressData.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 8: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 8: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 8: Unexpected character '`'
[CS1056] Line 8: Unexpected character '`'
[CS1519] Line 8: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 8: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class SignalAddressData
{
	/// <summary>The full city name</summary>
	[JsonPropertyName("city")]
	public string city { get; set; }

	/// <summary>The region or state
Example: `"NC"`</summary>
	[JsonPropertyName("region")]
	public string region { get; set; }

	/// <summary>The full street address
Example: `"564 Main Street, APT 15"`</summary>
	[JsonPropertyName("street")]
	public string street { get; set; }

	/// <summary>The postal code</summary>
	[JsonPropertyName("postal_code")]
	public string postal_code { get; set; }

	/// <summary>The ISO 3166-1 alpha-2 country code</summary>
	[JsonPropertyName("country")]
	public string country { get; set; }

}


== SignalPersonName.cs
==================================================

public class SignalPersonName
{
	/// <summary>The user's name prefix (e.g. "Mr.")</summary>
	[JsonPropertyName("prefix")]
	public string prefix { get; set; }

	/// <summary>The user's given name. If the user has a one-word name, it should be provided in this field.</summary>
	[JsonPropertyName("given_name")]
	public string given_name { get; set; }

	/// <summary>The user's middle name</summary>
	[JsonPropertyName("middle_name")]
	public string middle_name { get; set; }

	/// <summary>The user's family name / surname</summary>
	[JsonPropertyName("family_name")]
	public string family_name { get; set; }

	/// <summary>The user's name suffix (e.g. "II")</summary>
	[JsonPropertyName("suffix")]
	public string suffix { get; set; }

}


== SignalUser.cs
==================================================

public class SignalUser
{
	/// <summary>The user's legal name</summary>
	[JsonPropertyName("name")]
	public SignalPersonName name { get; set; }

	/// <summary>The user's phone number, in E.164 format: +{countrycode}{number}. For example: "+14151234567"</summary>
	[JsonPropertyName("phone_number")]
	public string phone_number { get; set; }

	/// <summary>The user's email address.</summary>
	[JsonPropertyName("email_address")]
	public string email_address { get; set; }

	/// <summary>Data about the components comprising an address.</summary>
	[JsonPropertyName("address")]
	public SignalAddressData address { get; set; }

}


== SignalEvaluateRequest.cs
==================================================

public class SignalEvaluateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>The `account_id` of the account whose verification status is to be modified</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The unique ID that you would like to use to refer to this transaction. For your convenience mapping your internal data, you could use your internal ID/identifier for this transaction. The max length for this field is 36 characters.</summary>
	[JsonPropertyName("client_transaction_id")]
	public string client_transaction_id { get; set; }

	/// <summary>The transaction amount, in USD (e.g. `102.05`)</summary>
	[JsonPropertyName("amount")]
	public string amount { get; set; }

	/// <summary>A unique ID that identifies the end user in your system. This ID is used to correlate requests by a user with multiple Items. The max length for this field is 36 characters.</summary>
	[JsonPropertyName("client_user_id")]
	public string client_user_id { get; set; }

	/// <summary>Details about the end user initiating the transaction (i.e., the account holder).</summary>
	[JsonPropertyName("user")]
	public SignalUser user { get; set; }

	/// <summary>Details about the end user's device</summary>
	[JsonPropertyName("device")]
	public SignalDevice device { get; set; }

}


== ItemApplicationListUserAuth.cs
==================================================

public class ItemApplicationListUserAuth
{
	/// <summary>Account username.</summary>
	[JsonPropertyName("user_id")]
	public string user_id { get; set; }

	/// <summary>Account username hashed by FI.</summary>
	[JsonPropertyName("fi_username_hash")]
	public string fi_username_hash { get; set; }

}


== SandboxIncomeFireWebhookResponse.cs
==================================================

public class SandboxIncomeFireWebhookResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== SandboxIncomeFireWebhookRequest.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 21: ; expected
[CS1002] Line 21: ; expected
[CS1002] Line 21: ; expected
[CS1002] Line 21: ; expected
[CS1519] Line 21: Invalid token 'as' in class, record, struct, or interface member declaration
[CS1519] Line 21: Invalid token 'as' in class, record, struct, or interface member declaration
[CS1002] Line 21: ; expected
[CS1044] Line 21: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 21: ; expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1002] Line 21: ; expected
[CS1002] Line 21: ; expected
[CS1001] Line 21: Identifier expected
[CS1056] Line 23: Unexpected character '`'
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 23: Unexpected character '`'
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 23: ; expected
[CS1002] Line 23: ; expected
[CS1002] Line 23: ; expected
[CS1002] Line 23: ; expected
[CS1001] Line 23: Identifier expected
[CS1001] Line 23: Identifier expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, '>' expected
[CS1003] Line 23: Syntax error, '(' expected
[CS1001] Line 23: Identifier expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1031] Line 24: Type expected
[CS1001] Line 24: Identifier expected
[CS1026] Line 24: ) expected
[CS1002] Line 24: ; expected

**************************************************


public class SandboxIncomeFireWebhookRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The ID of the verification.</summary>
	[JsonPropertyName("income_verification_id")]
	public string income_verification_id { get; set; }

	/// <summary>The URL to which the webhook should be sent.</summary>
	[JsonPropertyName("webhook")]
	public string webhook { get; set; }

	/// <summary>`VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed.

`VERIFICATION_STATUS_DOCUMENT_REJECTED`: The documentation uploaded by the end user was recognized as a supported file format, but not recognized as a valid paystub.

`VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.</summary>
	[JsonPropertyName("verification_status")]
	public string verification_status { get; set; }

}


== AccountFilter.cs
==================================================

public class AccountFilter
{
	/// <summary>A list of account subtypes to be filtered.</summary>
	[JsonPropertyName("depository")]
	public AccountFilterSubtypes depository { get; set; }

	/// <summary>A list of account subtypes to be filtered.</summary>
	[JsonPropertyName("credit")]
	public AccountFilterSubtypes credit { get; set; }

	/// <summary>A list of account subtypes to be filtered.</summary>
	[JsonPropertyName("loan")]
	public AccountFilterSubtypes loan { get; set; }

	/// <summary>A list of account subtypes to be filtered.</summary>
	[JsonPropertyName("investment")]
	public AccountFilterSubtypes investment { get; set; }

}


== ConnectedApplication.cs
==================================================

public class ConnectedApplication
{
	/// <summary>This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.</summary>
	[JsonPropertyName("application_id")]
	public ApplicationID application_id { get; set; }

	/// <summary>The name of the application</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	/// <summary>A URL that links to the application logo image (will be deprecated in the future, please use logo_url).</summary>
	[JsonPropertyName("logo")]
	public string logo { get; set; }

	/// <summary>A URL that links to the application logo image.</summary>
	[JsonPropertyName("logo_url")]
	public string logo_url { get; set; }

	/// <summary>The URL for the application's website</summary>
	[JsonPropertyName("application_url")]
	public string application_url { get; set; }

	/// <summary>A string provided by the connected app stating why they use their respective enabled products.</summary>
	[JsonPropertyName("reason_for_access")]
	public string reason_for_access { get; set; }

	/// <summary>The date this application was linked in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format in UTC.</summary>
	[JsonPropertyName("created_at")]
	public string created_at { get; set; }

	/// <summary>(Deprecated) A list of enums representing the data collected and products enabled for this connected application.</summary>
	[JsonPropertyName("product_data_types")]
	public string[] product_data_types { get; set; }

	[JsonPropertyName("scopes")]
	public ScopesNullable scopes { get; set; }

	/// <summary>Scope of required and optional account features or content from a ConnectedApplication.</summary>
	[JsonPropertyName("requested_scopes")]
	public RequestedScopes requested_scopes { get; set; }

}


== ItemApplicationListResponse.cs
==================================================

public class ItemApplicationListResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

	/// <summary>A list of connected applications.</summary>
	[JsonPropertyName("applications")]
	public ConnectedApplication[] applications { get; set; }

}


== ItemApplicationListRequest.cs
==================================================

public class ItemApplicationListRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessTokenNullable access_token { get; set; }

}


== ItemApplicationScopesUpdateResponse.cs
==================================================

public class ItemApplicationScopesUpdateResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== ItemApplicationScopesUpdateRequest.cs
==================================================

public class ItemApplicationScopesUpdateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.</summary>
	[JsonPropertyName("application_id")]
	public ApplicationID application_id { get; set; }

	/// <summary>The scopes object</summary>
	[JsonPropertyName("scopes")]
	public Scopes scopes { get; set; }

	/// <summary>When scopes are updated during enrollment, this field must be populated with the state sent to the partner in the OAuth Login URI. This field is required when the context is `ENROLLMENT`.</summary>
	[JsonPropertyName("state")]
	public ScopesState state { get; set; }

	/// <summary>An indicator for when scopes are being updated. When scopes are updated via enrollment (i.e. OAuth), the partner must send `ENROLLMENT`. When scopes are updated in a post-enrollment view, the partner must send `PORTAL`.</summary>
	[JsonPropertyName("context")]
	public ScopesContext context { get; set; }

}


== RequestedScopes.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 16: Unexpected character '`'
[CS1519] Line 16: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 16: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 16: Unexpected character '`'
[CS1519] Line 16: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 16: ; expected
[CS1002] Line 16: ; expected
[CS1002] Line 16: ; expected
[CS1002] Line 16: ; expected
[CS1002] Line 16: ; expected
[CS1001] Line 16: Identifier expected
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1001] Line 17: Identifier expected
[CS1056] Line 18: Unexpected character '`'
[CS1519] Line 18: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 18: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 18: Unexpected character '`'
[CS1519] Line 18: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 18: ; expected
[CS1002] Line 18: ; expected
[CS1002] Line 18: ; expected
[CS1002] Line 18: ; expected
[CS1002] Line 18: ; expected
[CS1002] Line 18: ; expected
[CS1002] Line 18: ; expected
[CS1002] Line 18: ; expected
[CS1002] Line 18: ; expected
[CS1519] Line 18: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 18: Invalid token '-' in class, record, struct, or interface member declaration
[CS1585] Line 20: Member modifier 'public' must precede the member type and name
[CS1031] Line 18: Type expected
[CS1003] Line 18: Syntax error, ',' expected
[CS1003] Line 18: Syntax error, ',' expected

**************************************************


public class RequestedScopes
{
	/// <summary>The product access being requested. Used to or disallow product access across all accounts. If unset, defaults to all products allowed.</summary>
	[JsonPropertyName("required_product_access")]
	public ProductAccess required_product_access { get; set; }

	/// <summary>The product access being requested. Used to or disallow product access across all accounts. If unset, defaults to all products allowed.</summary>
	[JsonPropertyName("optional_product_access")]
	public ProductAccess optional_product_access { get; set; }

	/// <summary>Enumerates the account subtypes that the application wishes for the user to be able to select from. For more details refer to Plaid documentation on account filters.</summary>
	[JsonPropertyName("account_filters")]
	public AccountFilter account_filters { get; set; }

	/// <summary>The application requires that accounts be limited to a specific cardinality.
`MULTI_SELECT`: indicates that the user should be allowed to pick multiple accounts.
`SINGLE_SELECT`: indicates that the user should be allowed to pick only a single account.
`ALL`: indicates that the user must share all of their accounts and should not be given the opportunity to de-select</summary>
	[JsonPropertyName("account_selection_cardinality")]
	public AccountSelectionCardinality account_selection_cardinality { get; set; }

}


== Scopes.cs
==================================================

public class Scopes
{
	/// <summary>The product access being requested. Used to or disallow product access across all accounts. If unset, defaults to all products allowed.</summary>
	[JsonPropertyName("product_access")]
	public ProductAccess product_access { get; set; }

	[JsonPropertyName("accounts")]
	public AccountAccess[] accounts { get; set; }

	/// <summary>Allow access to newly opened accounts as they are opened. If unset, defaults to `true`.</summary>
	[JsonPropertyName("new_accounts")]
	public bool new_accounts { get; set; }

}


== AccountAccess.cs
==================================================

public class AccountAccess
{
	/// <summary>The unique account identifier for this account. This value must match that returned by the data access API for this account.</summary>
	[JsonPropertyName("unique_id")]
	public string unique_id { get; set; }

	/// <summary>Allow the application to see this account (and associated details, including balance) in the list of accounts. If unset, defaults to `true`.</summary>
	[JsonPropertyName("authorized")]
	public bool authorized { get; set; }

}


== ProductAccess.cs
==================================================

public class ProductAccess
{
	/// <summary>Allow access to statements. If unset, defaults to `true`.</summary>
	[JsonPropertyName("statements")]
	public bool statements { get; set; }

	/// <summary>Allow access to the Identity product (name, email, phone, address). If unset, defaults to `true`.</summary>
	[JsonPropertyName("identity")]
	public bool identity { get; set; }

	/// <summary>Allow access to account number details. If unset, defaults to `true`.</summary>
	[JsonPropertyName("auth")]
	public bool auth { get; set; }

	/// <summary>Allow access to transaction details. If unset, defaults to `true`.</summary>
	[JsonPropertyName("transactions")]
	public bool transactions { get; set; }

}


== ApplicationGetResponse.cs
==================================================

public class ApplicationGetResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

	/// <summary>Metadata about the application</summary>
	[JsonPropertyName("application")]
	public Application application { get; set; }

}


== ApplicationGetRequest.cs
==================================================

public class ApplicationGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.</summary>
	[JsonPropertyName("application_id")]
	public ApplicationID application_id { get; set; }

}


== Application.cs
==================================================

public class Application
{
	/// <summary>This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.</summary>
	[JsonPropertyName("application_id")]
	public ApplicationID application_id { get; set; }

	/// <summary>The name of the application</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	/// <summary>The date this application was linked in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format in UTC.</summary>
	[JsonPropertyName("created_at")]
	public string created_at { get; set; }

	/// <summary>A URL that links to the application logo image.</summary>
	[JsonPropertyName("logo_url")]
	public string logo_url { get; set; }

	/// <summary>The URL for the application's website</summary>
	[JsonPropertyName("application_url")]
	public string application_url { get; set; }

	/// <summary>A string provided by the connected app stating why they use their respective enabled products.</summary>
	[JsonPropertyName("reason_for_access")]
	public string reason_for_access { get; set; }

}


== SandboxBankTransferFireWebhookResponse.cs
==================================================

public class SandboxBankTransferFireWebhookResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== SandboxBankTransferFireWebhookRequest.cs
==================================================

public class SandboxBankTransferFireWebhookRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The URL to which the webhook should be sent.</summary>
	[JsonPropertyName("webhook")]
	public string webhook { get; set; }

}


== DepositSwitchAddressData.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 8: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 8: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 8: Unexpected character '`'
[CS1056] Line 8: Unexpected character '`'
[CS1519] Line 8: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 8: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class DepositSwitchAddressData
{
	/// <summary>The full city name</summary>
	[JsonPropertyName("city")]
	public string city { get; set; }

	/// <summary>The region or state
Example: `"NC"`</summary>
	[JsonPropertyName("region")]
	public string region { get; set; }

	/// <summary>The full street address
Example: `"564 Main Street, APT 15"`</summary>
	[JsonPropertyName("street")]
	public string street { get; set; }

	/// <summary>The postal code</summary>
	[JsonPropertyName("postal_code")]
	public string postal_code { get; set; }

	/// <summary>The ISO 3166-1 alpha-2 country code</summary>
	[JsonPropertyName("country")]
	public string country { get; set; }

}


== DepositSwitchTargetUser.cs
==================================================

public class DepositSwitchTargetUser
{
	/// <summary>The given name (first name) of the user.</summary>
	[JsonPropertyName("given_name")]
	public string given_name { get; set; }

	/// <summary>The family name (last name) of the user.</summary>
	[JsonPropertyName("family_name")]
	public string family_name { get; set; }

	/// <summary>The phone number of the user. The endpoint can accept a variety of phone number formats, including E.164.</summary>
	[JsonPropertyName("phone")]
	public string phone { get; set; }

	/// <summary>The email address of the user.</summary>
	[JsonPropertyName("email")]
	public string email { get; set; }

	/// <summary>The user's address.</summary>
	[JsonPropertyName("address")]
	public DepositSwitchAddressData address { get; set; }

	/// <summary>The taxpayer ID of the user, generally their SSN, EIN, or TIN.</summary>
	[JsonPropertyName("tax_payer_id")]
	public string tax_payer_id { get; set; }

}


== DepositSwitchTargetAccount.cs
==================================================

public class DepositSwitchTargetAccount
{
	/// <summary>Account number for deposit switch destination</summary>
	[JsonPropertyName("account_number")]
	public string account_number { get; set; }

	/// <summary>Routing number for deposit switch destination</summary>
	[JsonPropertyName("routing_number")]
	public string routing_number { get; set; }

	/// <summary>The name of the deposit switch destination account, as it will be displayed to the end user in the Deposit Switch interface. It is not required to match the name used in online banking.</summary>
	[JsonPropertyName("account_name")]
	public string account_name { get; set; }

	/// <summary>The account subtype of the account, either `checking` or `savings`.</summary>
	[JsonPropertyName("account_subtype")]
	public string account_subtype { get; set; }

}


== DepositSwitchAltCreateResponse.cs
==================================================

public class DepositSwitchAltCreateResponse
{
	/// <summary>ID of the deposit switch. This ID is persisted throughout the lifetime of the deposit switch.</summary>
	[JsonPropertyName("deposit_switch_id")]
	public string deposit_switch_id { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== DepositSwitchAltCreateRequest.cs
==================================================

public class DepositSwitchAltCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	[JsonPropertyName("target_account")]
	public DepositSwitchTargetAccount target_account { get; set; }

	[JsonPropertyName("target_user")]
	public DepositSwitchTargetUser target_user { get; set; }

	/// <summary>Options to configure the `/deposit_switch/create` request. If provided, cannot be `null`.</summary>
	[JsonPropertyName("options")]
	public DepositSwitchCreateRequestOptions options { get; set; }

	/// <summary>ISO-3166-1 alpha-2 country code standard.</summary>
	[JsonPropertyName("country_code")]
	public string country_code { get; set; }

}


== IncidentUpdate.cs
==================================================

public class IncidentUpdate
{
	/// <summary>The content of the update.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

	/// <summary>The status of the incident.</summary>
	[JsonPropertyName("status")]
	public string status { get; set; }

	/// <summary>The date when the update was published, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2020-10-30T15:26:48Z"`.</summary>
	[JsonPropertyName("updated_date")]
	public DateTime updated_date { get; set; }

}


== HealthIncident.cs
==================================================

public class HealthIncident
{
	/// <summary>The start date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2020-10-30T15:26:48Z"`.</summary>
	[JsonPropertyName("start_date")]
	public DateTime start_date { get; set; }

	/// <summary>The end date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2020-10-30T15:26:48Z"`.</summary>
	[JsonPropertyName("end_date")]
	public DateTime end_date { get; set; }

	/// <summary>The title of the incident</summary>
	[JsonPropertyName("title")]
	public string title { get; set; }

	/// <summary>Updates on the health incident.</summary>
	[JsonPropertyName("incident_updates")]
	public IncidentUpdate[] incident_updates { get; set; }

}


== IncomeVerificationWebhookStatus.cs
==================================================

public class IncomeVerificationWebhookStatus
{
	[JsonPropertyName("id")]
	public string id { get; set; }

}


== W2StateAndLocalWages.cs
==================================================

public class W2StateAndLocalWages
{
	/// <summary>State associated with the wage.</summary>
	[JsonPropertyName("state")]
	public string state { get; set; }

	/// <summary>State identification number of the employer.</summary>
	[JsonPropertyName("employer_state_id_number")]
	public string employer_state_id_number { get; set; }

	/// <summary>Wages and tips from the specified state.</summary>
	[JsonPropertyName("state_wages_tips")]
	public string state_wages_tips { get; set; }

	/// <summary>Income tax from the specified state.</summary>
	[JsonPropertyName("state_income_tax")]
	public string state_income_tax { get; set; }

	/// <summary>Wages and tips from the locality.</summary>
	[JsonPropertyName("local_wages_tips")]
	public string local_wages_tips { get; set; }

	/// <summary>Income tax from the locality.</summary>
	[JsonPropertyName("local_income_tax")]
	public string local_income_tax { get; set; }

	/// <summary>Name of the locality.</summary>
	[JsonPropertyName("locality_name")]
	public string locality_name { get; set; }

}


== W2Box12.cs
==================================================

public class W2Box12
{
	/// <summary>W2 Box 12 code.</summary>
	[JsonPropertyName("code")]
	public string code { get; set; }

	/// <summary>W2 Box 12 amount.</summary>
	[JsonPropertyName("amount")]
	public string amount { get; set; }

}


== W2.cs
==================================================

public class W2
{
	[JsonPropertyName("employer")]
	public PaystubEmployer employer { get; set; }

	/// <summary>Data about the employee.</summary>
	[JsonPropertyName("employee")]
	public Employee employee { get; set; }

	/// <summary>The tax year of the W2 document.</summary>
	[JsonPropertyName("tax_year")]
	public string tax_year { get; set; }

	/// <summary>An employee identification number or EIN.</summary>
	[JsonPropertyName("employer_id_number")]
	public string employer_id_number { get; set; }

	/// <summary>Wages from tips and other compensation.</summary>
	[JsonPropertyName("wages_tips_other_comp")]
	public string wages_tips_other_comp { get; set; }

	/// <summary>Federal income tax withheld for the tax year.</summary>
	[JsonPropertyName("federal_income_tax_withheld")]
	public string federal_income_tax_withheld { get; set; }

	/// <summary>Wages from social security.</summary>
	[JsonPropertyName("social_security_wages")]
	public string social_security_wages { get; set; }

	/// <summary>Social security tax withheld for the tax year.</summary>
	[JsonPropertyName("social_security_tax_withheld")]
	public string social_security_tax_withheld { get; set; }

	/// <summary>Wages and tips from medicare.</summary>
	[JsonPropertyName("medicare_wages_and_tips")]
	public string medicare_wages_and_tips { get; set; }

	/// <summary>Medicare tax withheld for the tax year.</summary>
	[JsonPropertyName("medicare_tax_withheld")]
	public string medicare_tax_withheld { get; set; }

	/// <summary>Tips from social security.</summary>
	[JsonPropertyName("social_security_tips")]
	public string social_security_tips { get; set; }

	/// <summary>Allocated tips.</summary>
	[JsonPropertyName("allocated_tips")]
	public string allocated_tips { get; set; }

	/// <summary>Contents from box 9 on the W2.</summary>
	[JsonPropertyName("box_9")]
	public string box_9 { get; set; }

	/// <summary>Dependent care benefits.</summary>
	[JsonPropertyName("dependent_care_benefits")]
	public string dependent_care_benefits { get; set; }

	/// <summary>Nonqualified plans.</summary>
	[JsonPropertyName("nonqualified_plans")]
	public string nonqualified_plans { get; set; }

	[JsonPropertyName("box_12")]
	public W2Box12[] box_12 { get; set; }

	/// <summary>Statutory employee.</summary>
	[JsonPropertyName("statutory_employee")]
	public string statutory_employee { get; set; }

	/// <summary>Retirement plan.</summary>
	[JsonPropertyName("retirement_plan")]
	public string retirement_plan { get; set; }

	/// <summary>Third party sick pay.</summary>
	[JsonPropertyName("third_party_sick_pay")]
	public string third_party_sick_pay { get; set; }

	/// <summary>Other.</summary>
	[JsonPropertyName("other")]
	public string other { get; set; }

	[JsonPropertyName("state_and_local_wages")]
	public W2StateAndLocalWages[] state_and_local_wages { get; set; }

}


== Taxform.cs
==================================================

public class Taxform
{
	/// <summary>The type of tax document.</summary>
	[JsonPropertyName("document_type")]
	public string document_type { get; set; }

	/// <summary>W2 is an object that represents income data taken from a W2 tax document.</summary>
	[JsonPropertyName("w2")]
	public W2 w2 { get; set; }

}


== IncomeVerificationTaxformsGetResponse.cs
==================================================

public class IncomeVerificationTaxformsGetResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

	/// <summary>A list of taxforms.</summary>
	[JsonPropertyName("taxforms")]
	public Taxform[] taxforms { get; set; }

	[JsonPropertyName("document_metadata")]
	public DocumentMetadata[] document_metadata { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

}


== IncomeVerificationTaxformsGetRequest.cs
==================================================

public class IncomeVerificationTaxformsGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The ID of the verification.</summary>
	[JsonPropertyName("income_verification_id")]
	public string income_verification_id { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessTokenNullable access_token { get; set; }

}


== IncomeVerificationDocumentsDownloadResponse.cs
==================================================

public class IncomeVerificationDocumentsDownloadResponse
{
	[JsonPropertyName("id")]
	public string id { get; set; }

}


== IncomeVerificationDocumentsDownloadRequest.cs
==================================================

public class IncomeVerificationDocumentsDownloadRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The ID of the verification.</summary>
	[JsonPropertyName("income_verification_id")]
	public string income_verification_id { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessTokenNullable access_token { get; set; }

}


== PaystubYTDDetails.cs
==================================================

public class PaystubYTDDetails
{
	/// <summary>Year-to-date gross earnings.</summary>
	[JsonPropertyName("gross_earnings")]
	public string gross_earnings { get; set; }

	/// <summary>Year-to-date net (take home) earnings.</summary>
	[JsonPropertyName("net_earnings")]
	public string net_earnings { get; set; }

}


== PaystubDeduction.cs
==================================================

public class PaystubDeduction
{
	/// <summary>The description of the deduction, as provided on the paystub. For example: `"401(k)"`, `"FICA MED TAX"`.</summary>
	[JsonPropertyName("type")]
	public string type { get; set; }

	/// <summary>`true` if the deduction is pre-tax; `false` otherwise.</summary>
	[JsonPropertyName("is_pretax")]
	public bool is_pretax { get; set; }

	/// <summary>The amount of the deduction.</summary>
	[JsonPropertyName("total")]
	public string total { get; set; }

}


== PayPeriodDetails.cs
==================================================

public class PayPeriodDetails
{
	/// <summary>The pay period start date, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format: "yyyy-mm-dd".</summary>
	[JsonPropertyName("start_date")]
	public string start_date { get; set; }

	/// <summary>The pay period end date, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format: "yyyy-mm-dd".</summary>
	[JsonPropertyName("end_date")]
	public string end_date { get; set; }

	/// <summary>The date on which the paystub was issued, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").</summary>
	[JsonPropertyName("pay_day")]
	public string pay_day { get; set; }

	/// <summary>Total earnings before tax.</summary>
	[JsonPropertyName("gross_earnings")]
	public string gross_earnings { get; set; }

	/// <summary>The net amount of the paycheck.</summary>
	[JsonPropertyName("check_amount")]
	public string check_amount { get; set; }

}


== PaystubAddress.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 24: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 24: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 24: Unexpected character '`'
[CS1056] Line 24: Unexpected character '`'
[CS1519] Line 24: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 24: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 29: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 29: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 29: Unexpected character '`'
[CS1056] Line 29: Unexpected character '`'
[CS1519] Line 29: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 29: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class PaystubAddress
{
	/// <summary>The full city name.</summary>
	[JsonPropertyName("city")]
	public string city { get; set; }

	/// <summary>The listed street address.</summary>
	[JsonPropertyName("street")]
	public string street { get; set; }

	/// <summary>Street address line 1.</summary>
	[JsonPropertyName("line1")]
	public string line1 { get; set; }

	/// <summary>Street address line 2.</summary>
	[JsonPropertyName("line2")]
	public string line2 { get; set; }

	/// <summary>5 digit postal code.</summary>
	[JsonPropertyName("postal_code")]
	public string postal_code { get; set; }

	/// <summary>The region or state
Example: `"NC"`</summary>
	[JsonPropertyName("region")]
	public string region { get; set; }

	/// <summary>The region or state
Example: `"NC"`</summary>
	[JsonPropertyName("state_code")]
	public string state_code { get; set; }

	/// <summary>The country of the address.</summary>
	[JsonPropertyName("country")]
	public string country { get; set; }

}


== PaystubEmployer.cs
==================================================

public class PaystubEmployer
{
	/// <summary>The name of the employer on the paystub.</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	[JsonPropertyName("address")]
	public PaystubAddress address { get; set; }

}


== TaxpayerID.cs
==================================================

public class TaxpayerID
{
	/// <summary>Type of ID, e.g. 'SSN'</summary>
	[JsonPropertyName("id_type")]
	public string id_type { get; set; }

	/// <summary>Last 4 digits of unique number of ID.</summary>
	[JsonPropertyName("last_4_digits")]
	public string last_4_digits { get; set; }

}


== Employee.cs
==================================================

public class Employee
{
	/// <summary>The name of the employee.</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	[JsonPropertyName("address")]
	public PaystubAddress address { get; set; }

	/// <summary>Marital status of the employee.</summary>
	[JsonPropertyName("marital_status")]
	public string marital_status { get; set; }

	[JsonPropertyName("taxpayer_id")]
	public TaxpayerID taxpayer_id { get; set; }

}


== IncomeBreakdown.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 4: Unexpected character '`'
[CS1519] Line 4: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 4: Unexpected character '`'
[CS1056] Line 5: Unexpected character '`'
[CS1056] Line 5: Unexpected character '`'
[CS1002] Line 5: ; expected
[CS1056] Line 6: Unexpected character '`'
[CS1056] Line 6: Unexpected character '`'
[CS1002] Line 6: ; expected
[CS1001] Line 6: Identifier expected
[CS1003] Line 6: Syntax error, ',' expected
[CS1003] Line 6: Syntax error, '>' expected
[CS1003] Line 6: Syntax error, '(' expected
[CS1001] Line 6: Identifier expected
[CS1003] Line 6: Syntax error, ',' expected
[CS1003] Line 6: Syntax error, ',' expected
[CS1031] Line 7: Type expected
[CS1001] Line 7: Identifier expected
[CS1026] Line 7: ) expected
[CS1002] Line 7: ; expected

**************************************************


public class IncomeBreakdown
{
	/// <summary>The type of income. Possible values include:
  `"regular"`: regular income
  `"overtime"`: overtime income
  `"bonus"`: bonus income</summary>
	[JsonPropertyName("type")]
	public string type { get; set; }

	/// <summary>The hourly rate at which the income is paid.</summary>
	[JsonPropertyName("rate")]
	public string rate { get; set; }

	/// <summary>The number of hours logged for this income for this pay period.</summary>
	[JsonPropertyName("hours")]
	public string hours { get; set; }

	/// <summary>The total pay for this pay period.</summary>
	[JsonPropertyName("total")]
	public string total { get; set; }

}


== PaystubDetails.cs
==================================================

public class PaystubDetails
{
	/// <summary>Beginning date of the pay period on the paystub in the 'YYYY-MM-DD' format.</summary>
	[JsonPropertyName("pay_period_start_date")]
	public string pay_period_start_date { get; set; }

	/// <summary>Ending date of the pay period on the paystub in the 'YYYY-MM-DD' format.</summary>
	[JsonPropertyName("pay_period_end_date")]
	public string pay_period_end_date { get; set; }

	/// <summary>Pay date on the paystub in the 'YYYY-MM-DD' format.</summary>
	[JsonPropertyName("pay_date")]
	public string pay_date { get; set; }

	/// <summary>The name of the payroll provider that generated the paystub, e.g. ADP</summary>
	[JsonPropertyName("paystub_provider")]
	public string paystub_provider { get; set; }

	/// <summary>The frequency at which the employee is paid. Possible values: `MONTHLY`, `BI-WEEKLY`, `WEEKLY`, `SEMI-MONTHLY`.</summary>
	[JsonPropertyName("pay_frequency")]
	public string pay_frequency { get; set; }

}


== DistributionDetails.cs
==================================================

public class DistributionDetails
{
	/// <summary>The account number of the account being deposited to.</summary>
	[JsonPropertyName("account_number")]
	public string account_number { get; set; }

	/// <summary>The type of bank account (e.g. Checking or Savings)</summary>
	[JsonPropertyName("bank_account_type")]
	public string bank_account_type { get; set; }

	/// <summary>The name of the bank that the payment is being deposited to.</summary>
	[JsonPropertyName("bank_name")]
	public string bank_name { get; set; }

	/// <summary>An object representing a monetary amount.</summary>
	[JsonPropertyName("current_pay")]
	public Pay current_pay { get; set; }

	/// <summary>A description of the distribution type.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

}


== NetPay.cs
==================================================

public class NetPay
{
	[JsonPropertyName("distribution_details")]
	public DistributionDetails[] distribution_details { get; set; }

	/// <summary>An object representing both the current pay period and year to date amount for a category.</summary>
	[JsonPropertyName("total")]
	public Total total { get; set; }

}


== EmploymentDetails.cs
==================================================

public class EmploymentDetails
{
	/// <summary>An object representing a monetary amount.</summary>
	[JsonPropertyName("annual_salary")]
	public Pay annual_salary { get; set; }

	/// <summary>Date on which the employee was hired, in the YYYY-MM-DD format.</summary>
	[JsonPropertyName("hire_date")]
	public string hire_date { get; set; }

}


== EarningsTotal.cs
==================================================

public class EarningsTotal
{
	/// <summary>Commonly used term to describe the line item.</summary>
	[JsonPropertyName("canonical_description")]
	public string canonical_description { get; set; }

	/// <summary>Text of the line item as printed on the paystub.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

	/// <summary>An object representing a monetary amount.</summary>
	[JsonPropertyName("current_pay")]
	public Pay current_pay { get; set; }

	/// <summary>An object representing a monetary amount.</summary>
	[JsonPropertyName("ytd_pay")]
	public Pay ytd_pay { get; set; }

	[JsonPropertyName("current_hours")]
	public string current_hours { get; set; }

	[JsonPropertyName("current_rate")]
	public string current_rate { get; set; }

}


== Earnings.cs
==================================================

public class Earnings
{
	[JsonPropertyName("subtotals")]
	public EarningsTotal[] subtotals { get; set; }

	[JsonPropertyName("totals")]
	public EarningsTotal[] totals { get; set; }

}


== Pay.cs
==================================================

public class Pay
{
	/// <summary>A numerical amount of a specific currency.</summary>
	[JsonPropertyName("amount")]
	public string amount { get; set; }

	/// <summary>Currency code, e.g. USD</summary>
	[JsonPropertyName("currency")]
	public string currency { get; set; }

}


== Total.cs
==================================================

public class Total
{
	/// <summary>Commonly used term to describe the line item.</summary>
	[JsonPropertyName("canonical_description")]
	public string canonical_description { get; set; }

	/// <summary>Text of the line item as printed on the paystub.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

	/// <summary>An object representing a monetary amount.</summary>
	[JsonPropertyName("current_pay")]
	public Pay current_pay { get; set; }

	/// <summary>An object representing a monetary amount.</summary>
	[JsonPropertyName("ytd_pay")]
	public Pay ytd_pay { get; set; }

}


== Deductions.cs
==================================================

public class Deductions
{
	[JsonPropertyName("subtotals")]
	public Total[] subtotals { get; set; }

	[JsonPropertyName("totals")]
	public Total[] totals { get; set; }

}


== Paystub.cs
==================================================

public class Paystub
{
	/// <summary>An object with the deduction information found on a paystub.</summary>
	[JsonPropertyName("deductions")]
	public Deductions deductions { get; set; }

	/// <summary>An identifier of the document referenced by the document metadata.</summary>
	[JsonPropertyName("doc_id")]
	public string doc_id { get; set; }

	/// <summary>An object representing both a breakdown of earnings on a paystub and the total earnings.</summary>
	[JsonPropertyName("earnings")]
	public Earnings earnings { get; set; }

	[JsonPropertyName("employer")]
	public PaystubEmployer employer { get; set; }

	/// <summary>Data about the employee.</summary>
	[JsonPropertyName("employee")]
	public Employee employee { get; set; }

	/// <summary>An object representing employment details found on a paystub.</summary>
	[JsonPropertyName("employment_details")]
	public EmploymentDetails employment_details { get; set; }

	/// <summary>An object representing information about the net pay amount on the paystub.</summary>
	[JsonPropertyName("net_pay")]
	public NetPay net_pay { get; set; }

	/// <summary>Details about the pay period.</summary>
	[JsonPropertyName("pay_period_details")]
	public PayPeriodDetails pay_period_details { get; set; }

	/// <summary>An object representing details that can be found on the paystub.</summary>
	[JsonPropertyName("paystub_details")]
	public PaystubDetails paystub_details { get; set; }

	[JsonPropertyName("income_breakdown")]
	public IncomeBreakdown[] income_breakdown { get; set; }

	/// <summary>The amount of income earned year to date, as based on paystub data.</summary>
	[JsonPropertyName("ytd_earnings")]
	public PaystubYTDDetails ytd_earnings { get; set; }

}


== DocumentMetadata.cs
==================================================

public class DocumentMetadata
{
	/// <summary>The name of the document.</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	/// <summary>The processing status of the document.</summary>
	[JsonPropertyName("status")]
	public string status { get; set; }

	/// <summary>An identifier of the document that is also present in the paystub response.</summary>
	[JsonPropertyName("doc_id")]
	public string doc_id { get; set; }

}


== IncomeVerificationPaystubsGetResponse.cs
==================================================

public class IncomeVerificationPaystubsGetResponse
{
	[JsonPropertyName("paystubs")]
	public Paystub[] paystubs { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

	[JsonPropertyName("document_metadata")]
	public DocumentMetadata[] document_metadata { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== IncomeVerificationPaystubsGetRequest.cs
==================================================

public class IncomeVerificationPaystubsGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The ID of the verification for which to get paystub information.</summary>
	[JsonPropertyName("income_verification_id")]
	public string income_verification_id { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessTokenNullable access_token { get; set; }

}


== IncomeVerificationPaystubGetResponse.cs
==================================================

public class IncomeVerificationPaystubGetResponse
{
	/// <summary>An object representing data extracted from the end user's paystub.</summary>
	[JsonPropertyName("paystub")]
	public Paystub paystub { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== IncomeVerificationPaystubGetRequest.cs
==================================================

public class IncomeVerificationPaystubGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The ID of the verification for which to get paystub information.</summary>
	[JsonPropertyName("income_verification_id")]
	public string income_verification_id { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessTokenNullable access_token { get; set; }

}


== PayFrequency.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 9: Unexpected character '`'
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 9: Unexpected character '`'
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 11: Unexpected character '`'
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1001] Line 11: Identifier expected
[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1001] Line 13: Identifier expected
[CS1519] Line 15: Invalid token '"`UNABLE_TO_VERIFY`"' in class, record, struct, or interface member declaration
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1001] Line 15: Identifier expected
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1001] Line 17: Identifier expected
[CS1519] Line 17: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class PayFrequency
{
	/// <summary>The frequency of the pay period.</summary>
	[JsonPropertyName("value")]
	public string value { get; set; }

	/// <summary>The verification status. One of the following:

`"VERIFIED"`: The information was successfully verified.

`"UNVERIFIED"`: The verification has not yet been performed.

`"NEEDS_INFO"`: The verification was attempted but could not be completed due to missing information.

"`UNABLE_TO_VERIFY`": The verification was performed and the information could not be verified.

`"UNKNOWN"`: The verification status is unknown.</summary>
	[JsonPropertyName("verification_status")]
	public VerificationStatus verification_status { get; set; }

}


== IncomeSummaryFieldNumber.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 9: Unexpected character '`'
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 9: Unexpected character '`'
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 11: Unexpected character '`'
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1001] Line 11: Identifier expected
[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1001] Line 13: Identifier expected
[CS1519] Line 15: Invalid token '"`UNABLE_TO_VERIFY`"' in class, record, struct, or interface member declaration
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1001] Line 15: Identifier expected
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1001] Line 17: Identifier expected
[CS1519] Line 17: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class IncomeSummaryFieldNumber
{
	/// <summary>The value of the field.</summary>
	[JsonPropertyName("value")]
	public string value { get; set; }

	/// <summary>The verification status. One of the following:

`"VERIFIED"`: The information was successfully verified.

`"UNVERIFIED"`: The verification has not yet been performed.

`"NEEDS_INFO"`: The verification was attempted but could not be completed due to missing information.

"`UNABLE_TO_VERIFY`": The verification was performed and the information could not be verified.

`"UNKNOWN"`: The verification status is unknown.</summary>
	[JsonPropertyName("verification_status")]
	public VerificationStatus verification_status { get; set; }

}


== IncomeSummaryFieldString.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 9: Unexpected character '`'
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 9: Unexpected character '`'
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 11: Unexpected character '`'
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1001] Line 11: Identifier expected
[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1001] Line 13: Identifier expected
[CS1519] Line 15: Invalid token '"`UNABLE_TO_VERIFY`"' in class, record, struct, or interface member declaration
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1001] Line 15: Identifier expected
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1001] Line 17: Identifier expected
[CS1519] Line 17: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class IncomeSummaryFieldString
{
	/// <summary>The value of the field.</summary>
	[JsonPropertyName("value")]
	public string value { get; set; }

	/// <summary>The verification status. One of the following:

`"VERIFIED"`: The information was successfully verified.

`"UNVERIFIED"`: The verification has not yet been performed.

`"NEEDS_INFO"`: The verification was attempted but could not be completed due to missing information.

"`UNABLE_TO_VERIFY`": The verification was performed and the information could not be verified.

`"UNKNOWN"`: The verification status is unknown.</summary>
	[JsonPropertyName("verification_status")]
	public VerificationStatus verification_status { get; set; }

}


== TransactionData.cs
==================================================

public class TransactionData
{
	/// <summary>The description of the transaction.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

	/// <summary>The amount of the transaction.</summary>
	[JsonPropertyName("amount")]
	public string amount { get; set; }

	/// <summary>The date of the transaction, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").</summary>
	[JsonPropertyName("date")]
	public string date { get; set; }

	/// <summary>A unique identifier for the end user's account.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>A unique identifier for the transaction.</summary>
	[JsonPropertyName("transaction_id")]
	public string transaction_id { get; set; }

}


== IncomeSummary.cs
==================================================

public class IncomeSummary
{
	[JsonPropertyName("employer_name")]
	public EmployerIncomeSummaryFieldString employer_name { get; set; }

	[JsonPropertyName("employee_name")]
	public EmployeeIncomeSummaryFieldString employee_name { get; set; }

	[JsonPropertyName("ytd_gross_income")]
	public YTDGrossIncomeSummaryFieldNumber ytd_gross_income { get; set; }

	[JsonPropertyName("ytd_net_income")]
	public YTDNetIncomeSummaryFieldNumber ytd_net_income { get; set; }

	[JsonPropertyName("pay_frequency")]
	public PayFrequency pay_frequency { get; set; }

	[JsonPropertyName("projected_wage")]
	public ProjectedIncomeSummaryFieldNumber projected_wage { get; set; }

	/// <summary>Information about the matched direct deposit transaction used to verify a user's payroll information.</summary>
	[JsonPropertyName("verified_transaction")]
	public TransactionData verified_transaction { get; set; }

}


== IncomeVerificationRefreshResponse.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 9: Unexpected character '`'
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1001] Line 9: Identifier expected
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, '>' expected
[CS1003] Line 9: Syntax error, '(' expected
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1031] Line 10: Type expected
[CS1001] Line 10: Identifier expected
[CS1026] Line 10: ) expected
[CS1002] Line 10: ; expected

**************************************************


public class IncomeVerificationRefreshResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

	/// <summary>The verification refresh status. One of the following:

`"VERIFICATION_REFRESH_STATUS_USER_PRESENCE_REQUIRED"` User presence is required to refresh an income verification.</summary>
	[JsonPropertyName("verification_refresh_status")]
	public VerificationRefreshStatus verification_refresh_status { get; set; }

}


== IncomeVerificationRefreshRequest.cs
==================================================

public class IncomeVerificationRefreshRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The ID of the verification.</summary>
	[JsonPropertyName("income_verification_id")]
	public string income_verification_id { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessTokenNullable access_token { get; set; }

}


== IncomeVerificationSummaryGetResponse.cs
==================================================

public class IncomeVerificationSummaryGetResponse
{
	/// <summary>A list of income summaries.</summary>
	[JsonPropertyName("income_summaries")]
	public IncomeSummary[] income_summaries { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== IncomeVerificationSummaryGetRequest.cs
==================================================

public class IncomeVerificationSummaryGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The ID of the verification.</summary>
	[JsonPropertyName("income_verification_id")]
	public string income_verification_id { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessTokenNullable access_token { get; set; }

}


== IncomeVerificationStatusWebhook.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1001] Line 17: Identifier expected
[CS1003] Line 17: Syntax error, '(' expected
[CS1056] Line 19: Unexpected character '`'
[CS1001] Line 19: Identifier expected
[CS1056] Line 19: Unexpected character '`'
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1056] Line 21: Unexpected character '`'
[CS1003] Line 21: Syntax error, ',' expected
[CS1001] Line 21: Identifier expected
[CS1056] Line 21: Unexpected character '`'
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1001] Line 21: Identifier expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1001] Line 21: Identifier expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1001] Line 21: Identifier expected
[CS1001] Line 21: Identifier expected
[CS1056] Line 23: Unexpected character '`'
[CS1003] Line 23: Syntax error, ',' expected
[CS1001] Line 23: Identifier expected
[CS1056] Line 23: Unexpected character '`'
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1001] Line 23: Identifier expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1031] Line 24: Type expected
[CS1001] Line 24: Identifier expected
[CS1026] Line 24: ) expected
[CS1002] Line 24: ; expected

**************************************************


public class IncomeVerificationStatusWebhook
{
	/// <summary>`"INCOME"`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`income_verification`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>The `income_verification_id` of the verification instance whose status is being reported.</summary>
	[JsonPropertyName("income_verification_id")]
	public string income_verification_id { get; set; }

	/// <summary>`VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed.

`VERIFICATION_STATUS_UPLOAD_ERROR`: An upload error occurred when the end user attempted to upload their verification documentation.

`VERIFICATION_STATUS_INVALID_TYPE`: The end user attempted to upload verification documentation in an unsupported file format.

`VERIFICATION_STATUS_DOCUMENT_REJECTED`: The documentation uploaded by the end user was recognized as a supported file format, but not recognized as a valid paystub.

`VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.</summary>
	[JsonPropertyName("verification_status")]
	public string verification_status { get; set; }

}


== LinkTokenCreateRequestIncomeVerification.cs
==================================================

public class LinkTokenCreateRequestIncomeVerification
{
	/// <summary>The `income_verification_id` of the verification instance, as provided by `/income/verification/create`.</summary>
	[JsonPropertyName("income_verification_id")]
	public string income_verification_id { get; set; }

	/// <summary>The `asset_report_id` of an asset report associated with the user, as provided by `/asset_report/create`. Providing an `asset_report_id` is optional and can be used to verify the user through a streamlined flow. If provided, the bank linking flow will be skipped.</summary>
	[JsonPropertyName("asset_report_id")]
	public string asset_report_id { get; set; }

}


== IncomeVerificationPrecheckResponse.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1002] Line 13: ; expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1519] Line 13: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token '-' in class, record, struct, or interface member declaration
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, '(' expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1001] Line 15: Identifier expected
[CS1001] Line 15: Identifier expected
[CS1056] Line 17: Unexpected character '`'
[CS1056] Line 17: Unexpected character '`'
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1001] Line 17: Identifier expected
[CS1001] Line 17: Identifier expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1001] Line 17: Identifier expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1031] Line 18: Type expected
[CS1001] Line 18: Identifier expected
[CS1026] Line 18: ) expected
[CS1002] Line 18: ; expected

**************************************************


public class IncomeVerificationPrecheckResponse
{
	/// <summary>ID of the precheck.</summary>
	[JsonPropertyName("precheck_id")]
	public string precheck_id { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

	/// <summary>The confidence that Plaid can support the user in the income verification flow. One of the following:

`"HIGH"`: This precheck information submitted is definitively tied to a Plaid-supported integration.

"`LOW`": This precheck information submitted is known not to be supported by Plaid.

`"UNKNOWN"`: It was not possible to determine if the user is supportable with the information passed.</summary>
	[JsonPropertyName("confidence")]
	public string confidence { get; set; }

}


== IncomeVerificationPrecheckUser.cs
==================================================

public class IncomeVerificationPrecheckUser
{
	/// <summary>The user's first name</summary>
	[JsonPropertyName("first_name")]
	public string first_name { get; set; }

	/// <summary>The user's last name</summary>
	[JsonPropertyName("last_name")]
	public string last_name { get; set; }

	/// <summary>The user's email address</summary>
	[JsonPropertyName("email_address")]
	public string email_address { get; set; }

	/// <summary>Data about the components comprising an address.</summary>
	[JsonPropertyName("home_address")]
	public SignalAddressData home_address { get; set; }

}


== IncomeVerificationPrecheckMilitaryInfo.cs
==================================================

public class IncomeVerificationPrecheckMilitaryInfo
{
	/// <summary>Is the user currently active duty in the US military</summary>
	[JsonPropertyName("is_active_duty")]
	public bool is_active_duty { get; set; }

	/// <summary>If the user is currently serving in the US military, the branch of the military they are serving in</summary>
	[JsonPropertyName("branch")]
	public string branch { get; set; }

}


== IncomeVerificationPrecheckEmployer.cs
==================================================

public class IncomeVerificationPrecheckEmployer
{
	/// <summary>The employer's name</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	/// <summary>The employer's tax id</summary>
	[JsonPropertyName("tax_id")]
	public string tax_id { get; set; }

}


== IncomeVerificationPrecheckRequest.cs
==================================================

public class IncomeVerificationPrecheckRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	[JsonPropertyName("user")]
	public IncomeVerificationPrecheckUser user { get; set; }

	[JsonPropertyName("employer")]
	public IncomeVerificationPrecheckEmployer employer { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("transactions_access_token")]
	public AccessTokenNullable transactions_access_token { get; set; }

	[JsonPropertyName("us_military_info")]
	public IncomeVerificationPrecheckMilitaryInfo us_military_info { get; set; }

}


== IncomeVerificationCreateResponse.cs
==================================================

public class IncomeVerificationCreateResponse
{
	/// <summary>ID of the verification. This ID is persisted throughout the lifetime of the verification.</summary>
	[JsonPropertyName("income_verification_id")]
	public string income_verification_id { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== IncomeVerificationCreateRequest.cs
==================================================

public class IncomeVerificationCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The URL endpoint to which Plaid should send webhooks related to the progress of the income verification process.</summary>
	[JsonPropertyName("webhook")]
	public string webhook { get; set; }

}


== Employer.cs
==================================================

public class Employer
{
	/// <summary>Plaid's unique identifier for the employer.</summary>
	[JsonPropertyName("employer_id")]
	public string employer_id { get; set; }

	/// <summary>The name of the employer</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	[JsonPropertyName("address")]
	public AddressDataNullable address { get; set; }

	/// <summary>A number from 0 to 1 indicating Plaid's level of confidence in the pairing between the employer and the institution (not yet implemented).</summary>
	[JsonPropertyName("confidence_score")]
	public string confidence_score { get; set; }

}


== EmployersSearchResponse.cs
==================================================

public class EmployersSearchResponse
{
	/// <summary>A list of employers matching the search criteria.</summary>
	[JsonPropertyName("employers")]
	public Employer[] employers { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== EmployersSearchRequest.cs
==================================================

public class EmployersSearchRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The employer name to be searched for.</summary>
	[JsonPropertyName("query")]
	public string query { get; set; }

	/// <summary>The Plaid products the returned employers should support. Currently, this field must be set to `"deposit_switch"`.</summary>
	[JsonPropertyName("products")]
	public string[] products { get; set; }

}


== InvestmentFilter.cs
==================================================

public class InvestmentFilter
{
	/// <summary>An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#accounts-schema). </summary>
	[JsonPropertyName("account_subtypes")]
	public AccountSubtypes account_subtypes { get; set; }

}


== LoanFilter.cs
==================================================

public class LoanFilter
{
	/// <summary>An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#accounts-schema). </summary>
	[JsonPropertyName("account_subtypes")]
	public AccountSubtypes account_subtypes { get; set; }

}


== CreditFilter.cs
==================================================

public class CreditFilter
{
	/// <summary>An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#accounts-schema). </summary>
	[JsonPropertyName("account_subtypes")]
	public AccountSubtypes account_subtypes { get; set; }

}


== DepositoryFilter.cs
==================================================

public class DepositoryFilter
{
	/// <summary>An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#accounts-schema). </summary>
	[JsonPropertyName("account_subtypes")]
	public AccountSubtypes account_subtypes { get; set; }

}


== InstitutionsSearchAccountFilter.cs
==================================================

public class InstitutionsSearchAccountFilter
{
	[JsonPropertyName("loan")]
	public AccountSubtype[] loan { get; set; }

	[JsonPropertyName("depository")]
	public AccountSubtype[] depository { get; set; }

	[JsonPropertyName("credit")]
	public AccountSubtype[] credit { get; set; }

	[JsonPropertyName("investment")]
	public AccountSubtype[] investment { get; set; }

}


== AccountFiltersResponse.cs
==================================================

public class AccountFiltersResponse
{
	/// <summary>A filter to apply to `depository`-type accounts</summary>
	[JsonPropertyName("depository")]
	public DepositoryFilter depository { get; set; }

	/// <summary>A filter to apply to `credit`-type accounts</summary>
	[JsonPropertyName("credit")]
	public CreditFilter credit { get; set; }

	/// <summary>A filter to apply to `loan`-type accounts</summary>
	[JsonPropertyName("loan")]
	public LoanFilter loan { get; set; }

	/// <summary>A filter to apply to `investment`-type accounts</summary>
	[JsonPropertyName("investment")]
	public InvestmentFilter investment { get; set; }

}


== BankTransferReceiverDetails.cs
==================================================

public class BankTransferReceiverDetails
{
	/// <summary>The sign of the available balance for the receiver bank account associated with the receiver event at the time the matching transaction was found. Can be `positive`, `negative`, or null if the balance was not available at the time.</summary>
	[JsonPropertyName("available_balance")]
	public string available_balance { get; set; }

}


== SandboxTransferSimulateResponse.cs
==================================================

public class SandboxTransferSimulateResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== SandboxBankTransferSimulateResponse.cs
==================================================

public class SandboxBankTransferSimulateResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== SandboxTransferSimulateRequest.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token 'event' in class, record, struct, or interface member declaration
[CS1001] Line 17: Identifier expected
[CS1514] Line 17: { expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1513] Line 17: } expected
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 19: Unexpected character '`'
[CS1519] Line 19: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 19: Unexpected character '`'
[CS1519] Line 19: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 19: Unexpected character '`'
[CS1519] Line 19: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 19: Unexpected character '`'
[CS1519] Line 19: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 23: Unexpected character '`'
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 23: Unexpected character '`'
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 23: Unexpected character '`'
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 23: Unexpected character '`'
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 24: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 24: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class SandboxTransferSimulateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>Plaid’s unique identifier for a transfer.</summary>
	[JsonPropertyName("transfer_id")]
	public TransferID transfer_id { get; set; }

	/// <summary>The asynchronous event to be simulated. May be: `posted`, `failed`, or `reversed`.

An error will be returned if the event type is incompatible with the current transfer status. Compatible status --> event type transitions include:

`pending` --> `failed`

`pending` --> `posted`

`posted` --> `reversed`
</summary>
	[JsonPropertyName("event_type")]
	public string event_type { get; set; }

	/// <summary>The failure reason if the type of this transfer is `"failed"` or `"reversed"`. Null value otherwise.</summary>
	[JsonPropertyName("failure_reason")]
	public TransferFailure failure_reason { get; set; }

}


== SandboxBankTransferSimulateRequest.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token 'event' in class, record, struct, or interface member declaration
[CS1001] Line 17: Identifier expected
[CS1514] Line 17: { expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1055] Line 17: An add or remove accessor expected
[CS1513] Line 17: } expected
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 19: Unexpected character '`'
[CS1519] Line 19: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 19: Unexpected character '`'
[CS1519] Line 19: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 19: Unexpected character '`'
[CS1519] Line 19: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 19: Unexpected character '`'
[CS1519] Line 19: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 23: Unexpected character '`'
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 23: Unexpected character '`'
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 23: Unexpected character '`'
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 23: Unexpected character '`'
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 24: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 24: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class SandboxBankTransferSimulateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>Plaid’s unique identifier for a bank transfer.</summary>
	[JsonPropertyName("bank_transfer_id")]
	public BankTransferID bank_transfer_id { get; set; }

	/// <summary>The asynchronous event to be simulated. May be: `posted`, `failed`, or `reversed`.

An error will be returned if the event type is incompatible with the current transfer status. Compatible status --> event type transitions include:

`pending` --> `failed`

`pending` --> `posted`

`posted` --> `reversed`
</summary>
	[JsonPropertyName("event_type")]
	public string event_type { get; set; }

	/// <summary>The failure reason if the type of this transfer is `"failed"` or `"reversed"`. Null value otherwise.</summary>
	[JsonPropertyName("failure_reason")]
	public BankTransferFailure failure_reason { get; set; }

}


== BankTransferMigrateAccountResponse.cs
==================================================

public class BankTransferMigrateAccountResponse
{
	/// <summary>The Plaid `access_token` for the newly created Item.</summary>
	[JsonPropertyName("access_token")]
	public string access_token { get; set; }

	/// <summary>The Plaid `account_id` for the newly created Item.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== BankTransferMigrateAccountRequest.cs
==================================================

public class BankTransferMigrateAccountRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The user's account number.</summary>
	[JsonPropertyName("account_number")]
	public string account_number { get; set; }

	/// <summary>The user's routing number.</summary>
	[JsonPropertyName("routing_number")]
	public string routing_number { get; set; }

	/// <summary>The type of the bank account (`checking` or `savings`).</summary>
	[JsonPropertyName("account_type")]
	public string account_type { get; set; }

}


== BankTransferBalance.cs
==================================================

public class BankTransferBalance
{
	/// <summary>The total available balance - the sum of all successful debit transfer amounts minus all credit transfer amounts.</summary>
	[JsonPropertyName("available")]
	public string available { get; set; }

	/// <summary>The transactable balance shows the amount in your account that you are able to use for transfers, and is essentially your available balance minus your minimum balance.</summary>
	[JsonPropertyName("transactable")]
	public string transactable { get; set; }

}


== BankTransferBalanceGetResponse.cs
==================================================

public class BankTransferBalanceGetResponse
{
	[JsonPropertyName("balance")]
	public BankTransferBalance balance { get; set; }

	/// <summary>The ID of the origination account that this balance belongs to.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== BankTransferBalanceGetRequest.cs
==================================================

public class BankTransferBalanceGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>If multiple origination accounts are available, `origination_account_id` must be used to specify the account for which balance will be returned.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

}


== BankTransferSweepAccount.cs
==================================================

public class BankTransferSweepAccount
{
	[JsonPropertyName("account_number")]
	public string account_number { get; set; }

	[JsonPropertyName("routing_number")]
	public string routing_number { get; set; }

}


== BankTransferSweep.cs
==================================================

public class BankTransferSweep
{
	/// <summary>Identifier of the sweep.</summary>
	[JsonPropertyName("id")]
	public long id { get; set; }

	/// <summary>Identifier of the sweep transfer.</summary>
	[JsonPropertyName("transfer_id")]
	public string transfer_id { get; set; }

	/// <summary>The datetime when the sweep occurred, in RFC 3339 format.</summary>
	[JsonPropertyName("created_at")]
	public DateTime created_at { get; set; }

	/// <summary>The amount of the sweep.</summary>
	[JsonPropertyName("amount")]
	public string amount { get; set; }

	/// <summary>The currency of the sweep, e.g. "USD".</summary>
	[JsonPropertyName("iso_currency_code")]
	public string iso_currency_code { get; set; }

	/// <summary>The account where the funds are swept to.</summary>
	[JsonPropertyName("sweep_account")]
	public BankTransferSweepAccount sweep_account { get; set; }

}


== BankTransferSweepListResponse.cs
==================================================

public class BankTransferSweepListResponse
{
	[JsonPropertyName("sweeps")]
	public BankTransferSweep[] sweeps { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== BankTransferSweepListRequest.cs
==================================================

public class BankTransferSweepListRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>If multiple origination accounts are available, `origination_account_id` must be used to specify the account that the sweeps belong to.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

	/// <summary>Starting ID of sweeps to return.</summary>
	[JsonPropertyName("start_id")]
	public int start_id { get; set; }

	/// <summary>The start datetime of sweeps to return (RFC 3339 format).</summary>
	[JsonPropertyName("start_time")]
	public DateTime start_time { get; set; }

	/// <summary>The end datetime of sweeps to return (RFC 3339 format).</summary>
	[JsonPropertyName("end_time")]
	public DateTime end_time { get; set; }

	/// <summary>The maximum number of sweeps to return.</summary>
	[JsonPropertyName("count")]
	public int count { get; set; }

}


== BankTransferSweepGetResponse.cs
==================================================

public class BankTransferSweepGetResponse
{
	/// <summary>BankTransferSweep describes a sweep transfer.</summary>
	[JsonPropertyName("sweep")]
	public BankTransferSweep sweep { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== BankTransferSweepGetRequest.cs
==================================================

public class BankTransferSweepGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>Identifier of the sweep.</summary>
	[JsonPropertyName("sweep_id")]
	public long sweep_id { get; set; }

	/// <summary>If multiple origination accounts are available, `origination_account_id` must be used to specify the account that the sweep belongs to.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

}


== TransferEventSyncResponse.cs
==================================================

public class TransferEventSyncResponse
{
	[JsonPropertyName("transfer_events")]
	public TransferEvent[] transfer_events { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== BankTransferEventSyncResponse.cs
==================================================

public class BankTransferEventSyncResponse
{
	[JsonPropertyName("bank_transfer_events")]
	public BankTransferEvent[] bank_transfer_events { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== TransferEventSyncRequest.cs
==================================================

public class TransferEventSyncRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The latest (largest) `event_id` fetched via the sync endpoint, or 0 initially.</summary>
	[JsonPropertyName("after_id")]
	public int after_id { get; set; }

	/// <summary>The maximum number of transfer events to return.</summary>
	[JsonPropertyName("count")]
	public int count { get; set; }

}


== BankTransferEventSyncRequest.cs
==================================================

public class BankTransferEventSyncRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The latest (largest) `event_id` fetched via the sync endpoint, or 0 initially.</summary>
	[JsonPropertyName("after_id")]
	public int after_id { get; set; }

	/// <summary>The maximum number of bank transfer events to return.</summary>
	[JsonPropertyName("count")]
	public int count { get; set; }

}


== BankTransferEventListResponse.cs
==================================================

public class BankTransferEventListResponse
{
	[JsonPropertyName("bank_transfer_events")]
	public BankTransferEvent[] bank_transfer_events { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== TransferEventListResponse.cs
==================================================

public class TransferEventListResponse
{
	[JsonPropertyName("transfer_events")]
	public TransferEvent[] transfer_events { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== BankTransferEvent.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1585] Line 13: Member modifier 'new' must precede the member type and name
[CS1002] Line 13: ; expected
[CS1519] Line 13: Invalid token ';' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token ';' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 13: ; expected
[CS1001] Line 13: Identifier expected
[CS1056] Line 15: Unexpected character '`'
[CS1519] Line 15: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 15: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 15: Unexpected character '`'
[CS1519] Line 15: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1001] Line 15: Identifier expected
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token ',' in class, record, struct, or interface member declaration
[CS1002] Line 17: ; expected
[CS1001] Line 17: Identifier expected
[CS1003] Line 17: Syntax error, '(' expected
[CS1056] Line 19: Unexpected character '`'
[CS1001] Line 19: Identifier expected
[CS1056] Line 19: Unexpected character '`'
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1056] Line 21: Unexpected character '`'
[CS1003] Line 21: Syntax error, ',' expected
[CS1001] Line 21: Identifier expected
[CS1056] Line 21: Unexpected character '`'
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1001] Line 21: Identifier expected
[CS1001] Line 21: Identifier expected
[CS1056] Line 23: Unexpected character '`'
[CS1003] Line 23: Syntax error, ',' expected
[CS1001] Line 23: Identifier expected
[CS1056] Line 23: Unexpected character '`'
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1001] Line 23: Identifier expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1001] Line 23: Identifier expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1010] Line 23: Newline in constant
[CS1012] Line 23: Too many characters in character literal
[CS1056] Line 25: Unexpected character '`'
[CS1003] Line 25: Syntax error, ',' expected
[CS1001] Line 25: Identifier expected
[CS1056] Line 25: Unexpected character '`'
[CS1003] Line 25: Syntax error, ',' expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1001] Line 25: Identifier expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1001] Line 25: Identifier expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1010] Line 25: Newline in constant
[CS1012] Line 25: Too many characters in character literal
[CS1003] Line 25: Syntax error, ',' expected
[CS1031] Line 26: Type expected
[CS1001] Line 26: Identifier expected
[CS1026] Line 26: ) expected
[CS1002] Line 26: ; expected

**************************************************


public class BankTransferEvent
{
	/// <summary>Plaid’s unique identifier for this event. IDs are sequential unsigned 64-bit integers.</summary>
	[JsonPropertyName("event_id")]
	public int event_id { get; set; }

	/// <summary>The datetime when this event occurred. This will be of the form `2006-01-02T15:04:05Z`.</summary>
	[JsonPropertyName("timestamp")]
	public DateTime timestamp { get; set; }

	/// <summary>The type of event that this bank transfer represents.

`pending`: A new transfer was created; it is in the pending state.

`cancelled`: The transfer was cancelled by the client.

`failed`: The transfer failed, no funds were moved.

`posted`: The transfer has been successfully submitted to the payment network.

`reversed`: A posted transfer was reversed.

`receiver_pending`: The matching transfer was found as a pending transaction in the receiver's account

`receiver_posted`: The matching transfer was found as a posted transaction in the receiver's account</summary>
	[JsonPropertyName("event_type")]
	public BankTransferEventType event_type { get; set; }

	/// <summary>The account ID associated with the bank transfer.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>Plaid’s unique identifier for a bank transfer.</summary>
	[JsonPropertyName("bank_transfer_id")]
	public BankTransferID bank_transfer_id { get; set; }

	/// <summary>The ID of the origination account that this balance belongs to.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

	/// <summary>The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.</summary>
	[JsonPropertyName("bank_transfer_type")]
	public BankTransferType bank_transfer_type { get; set; }

	/// <summary>The bank transfer amount.</summary>
	[JsonPropertyName("bank_transfer_amount")]
	public string bank_transfer_amount { get; set; }

	/// <summary>The currency of the bank transfer amount.</summary>
	[JsonPropertyName("bank_transfer_iso_currency_code")]
	public string bank_transfer_iso_currency_code { get; set; }

	/// <summary>The failure reason if the type of this transfer is `"failed"` or `"reversed"`. Null value otherwise.</summary>
	[JsonPropertyName("failure_reason")]
	public BankTransferFailure failure_reason { get; set; }

	/// <summary>Indicates the direction of the transfer: `outbound` for API-initiated transfers, or `inbound` for payments received by the FBO account.</summary>
	[JsonPropertyName("direction")]
	public BankTransferDirection direction { get; set; }

	/// <summary>The receiver details if the type of this event is `reciever_pending` or `reciever_posted`. Null value otherwise.</summary>
	[JsonPropertyName("receiver_details")]
	public BankTransferReceiverDetails receiver_details { get; set; }

}


== TransferEvent.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1585] Line 13: Member modifier 'new' must precede the member type and name
[CS1002] Line 13: ; expected
[CS1519] Line 13: Invalid token ';' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token ';' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 13: ; expected
[CS1001] Line 13: Identifier expected
[CS1056] Line 15: Unexpected character '`'
[CS1519] Line 15: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 15: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 15: Unexpected character '`'
[CS1519] Line 15: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1001] Line 15: Identifier expected
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token ',' in class, record, struct, or interface member declaration
[CS1002] Line 17: ; expected
[CS1001] Line 17: Identifier expected
[CS1003] Line 17: Syntax error, '(' expected
[CS1056] Line 19: Unexpected character '`'
[CS1001] Line 19: Identifier expected
[CS1056] Line 19: Unexpected character '`'
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1056] Line 21: Unexpected character '`'
[CS1003] Line 21: Syntax error, ',' expected
[CS1001] Line 21: Identifier expected
[CS1056] Line 21: Unexpected character '`'
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1001] Line 21: Identifier expected
[CS1001] Line 21: Identifier expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1001] Line 21: Identifier expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1031] Line 22: Type expected
[CS1001] Line 22: Identifier expected
[CS1026] Line 22: ) expected
[CS1002] Line 22: ; expected

**************************************************


public class TransferEvent
{
	/// <summary>Plaid’s unique identifier for this event. IDs are sequential unsigned 64-bit integers.</summary>
	[JsonPropertyName("event_id")]
	public int event_id { get; set; }

	/// <summary>The datetime when this event occurred. This will be of the form `2006-01-02T15:04:05Z`.</summary>
	[JsonPropertyName("timestamp")]
	public DateTime timestamp { get; set; }

	/// <summary>The type of event that this transfer represents.

`pending`: A new transfer was created; it is in the pending state.

`cancelled`: The transfer was cancelled by the client.

`failed`: The transfer failed, no funds were moved.

`posted`: The transfer has been successfully submitted to the payment network.

`reversed`: A posted transfer was reversed.</summary>
	[JsonPropertyName("event_type")]
	public TransferEventType event_type { get; set; }

	/// <summary>The account ID associated with the transfer.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>Plaid’s unique identifier for a transfer.</summary>
	[JsonPropertyName("transfer_id")]
	public TransferID transfer_id { get; set; }

	/// <summary>The ID of the origination account that this balance belongs to.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

	/// <summary>The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.</summary>
	[JsonPropertyName("transfer_type")]
	public TransferType transfer_type { get; set; }

	/// <summary>The amount of the transfer (decimal string with two digits of precision e.g. “10.00”).</summary>
	[JsonPropertyName("transfer_amount")]
	public TransferAmount transfer_amount { get; set; }

	/// <summary>The failure reason if the type of this transfer is `"failed"` or `"reversed"`. Null value otherwise.</summary>
	[JsonPropertyName("failure_reason")]
	public TransferFailure failure_reason { get; set; }

}


== BankTransferEventListRequest.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 48: Unexpected character '`'
[CS1519] Line 48: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 48: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 48: Unexpected character '`'
[CS1519] Line 48: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 48: ; expected
[CS1002] Line 48: ; expected
[CS1001] Line 48: Identifier expected
[CS1001] Line 48: Identifier expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1003] Line 48: Syntax error, '>' expected
[CS1003] Line 48: Syntax error, '(' expected
[CS1001] Line 48: Identifier expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1031] Line 49: Type expected
[CS1001] Line 49: Identifier expected
[CS1026] Line 49: ) expected
[CS1002] Line 49: ; expected

**************************************************


public class BankTransferEventListRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The start datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)</summary>
	[JsonPropertyName("start_date")]
	public DateTime start_date { get; set; }

	/// <summary>The end datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)</summary>
	[JsonPropertyName("end_date")]
	public DateTime end_date { get; set; }

	/// <summary>Plaid’s unique identifier for a bank transfer.</summary>
	[JsonPropertyName("bank_transfer_id")]
	public string bank_transfer_id { get; set; }

	/// <summary>The account ID to get events for all transactions to/from an account.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into your origination account; a `credit` indicates a transfer of money out of your origination account.</summary>
	[JsonPropertyName("bank_transfer_type")]
	public string bank_transfer_type { get; set; }

	/// <summary>Filter events by event type.</summary>
	[JsonPropertyName("event_types")]
	public BankTransferEventType[] event_types { get; set; }

	/// <summary>The maximum number of bank transfer events to return. If the number of events matching the above parameters is greater than `count`, the most recent events will be returned.</summary>
	[JsonPropertyName("count")]
	public int count { get; set; }

	/// <summary>The offset into the list of bank transfer events. When `count`=25 and `offset`=0, the first 25 events will be returned. When `count`=25 and `offset`=25, the next 25 bank transfer events will be returned.</summary>
	[JsonPropertyName("offset")]
	public int offset { get; set; }

	/// <summary>The origination account ID to get events for transfers from a specific origination account.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

	/// <summary>Indicates the direction of the transfer: `outbound`: for API-initiated transfers
`inbound`: for payments received by the FBO account.</summary>
	[JsonPropertyName("direction")]
	public string direction { get; set; }

}


== TransferEventListRequest.cs
==================================================

public class TransferEventListRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The start datetime of transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)</summary>
	[JsonPropertyName("start_date")]
	public DateTime start_date { get; set; }

	/// <summary>The end datetime of transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)</summary>
	[JsonPropertyName("end_date")]
	public DateTime end_date { get; set; }

	/// <summary>Plaid’s unique identifier for a transfer.</summary>
	[JsonPropertyName("transfer_id")]
	public string transfer_id { get; set; }

	/// <summary>The account ID to get events for all transactions to/from an account.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into your origination account; a `credit` indicates a transfer of money out of your origination account.</summary>
	[JsonPropertyName("transfer_type")]
	public string transfer_type { get; set; }

	/// <summary>Filter events by event type.</summary>
	[JsonPropertyName("event_types")]
	public TransferEventType[] event_types { get; set; }

	/// <summary>The maximum number of transfer events to return. If the number of events matching the above parameters is greater than `count`, the most recent events will be returned.</summary>
	[JsonPropertyName("count")]
	public int count { get; set; }

	/// <summary>The offset into the list of transfer events. When `count`=25 and `offset`=0, the first 25 events will be returned. When `count`=25 and `offset`=25, the next 25 bank transfer events will be returned.</summary>
	[JsonPropertyName("offset")]
	public int offset { get; set; }

	/// <summary>The origination account ID to get events for transfers from a specific origination account.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

}


== BankTransferCancelResponse.cs
==================================================

public class BankTransferCancelResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== TransferCancelResponse.cs
==================================================

public class TransferCancelResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== BankTransferCancelRequest.cs
==================================================

public class BankTransferCancelRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>Plaid’s unique identifier for a bank transfer.</summary>
	[JsonPropertyName("bank_transfer_id")]
	public BankTransferID bank_transfer_id { get; set; }

}


== TransferCancelRequest.cs
==================================================

public class TransferCancelRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>Plaid’s unique identifier for a transfer.</summary>
	[JsonPropertyName("transfer_id")]
	public TransferID transfer_id { get; set; }

}


== BankTransferListResponse.cs
==================================================

public class BankTransferListResponse
{
	[JsonPropertyName("bank_transfers")]
	public BankTransfer[] bank_transfers { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== TransferListResponse.cs
==================================================

public class TransferListResponse
{
	[JsonPropertyName("transfers")]
	public Transfer[] transfers { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== BankTransferListRequest.cs
==================================================

public class BankTransferListRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The start datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)</summary>
	[JsonPropertyName("start_date")]
	public DateTime start_date { get; set; }

	/// <summary>The end datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)</summary>
	[JsonPropertyName("end_date")]
	public DateTime end_date { get; set; }

	/// <summary>The maximum number of bank transfers to return.</summary>
	[JsonPropertyName("count")]
	public int count { get; set; }

	/// <summary>The number of bank transfers to skip before returning results.</summary>
	[JsonPropertyName("offset")]
	public int offset { get; set; }

	/// <summary>Filter bank transfers to only those originated through the specified origination account.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

	/// <summary>Indicates the direction of the transfer: `outbound` for API-initiated transfers, or `inbound` for payments received by the FBO account.</summary>
	[JsonPropertyName("direction")]
	public BankTransferDirection direction { get; set; }

}


== TransferListRequest.cs
==================================================

public class TransferListRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The start datetime of transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)</summary>
	[JsonPropertyName("start_date")]
	public DateTime start_date { get; set; }

	/// <summary>The end datetime of transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)</summary>
	[JsonPropertyName("end_date")]
	public DateTime end_date { get; set; }

	/// <summary>The maximum number of transfers to return.</summary>
	[JsonPropertyName("count")]
	public int count { get; set; }

	/// <summary>The number of transfers to skip before returning results.</summary>
	[JsonPropertyName("offset")]
	public int offset { get; set; }

	/// <summary>Filter transfers to only those originated through the specified origination account.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

}


== BankTransferCreateResponse.cs
==================================================

public class BankTransferCreateResponse
{
	/// <summary>Represents a bank transfer within the Bank Transfers API.</summary>
	[JsonPropertyName("bank_transfer")]
	public BankTransfer bank_transfer { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== TransferCreateResponse.cs
==================================================

public class TransferCreateResponse
{
	/// <summary>Represents a transfer within the Transfers API.</summary>
	[JsonPropertyName("transfer")]
	public Transfer transfer { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== TransferAuthorization.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 12: ; expected
[CS1002] Line 12: ; expected
[CS1001] Line 12: Identifier expected
[CS1003] Line 12: Syntax error, '(' expected
[CS1056] Line 14: Unexpected character '`'
[CS1001] Line 14: Identifier expected
[CS1056] Line 14: Unexpected character '`'
[CS1056] Line 14: Unexpected character '–'
[CS1003] Line 14: Syntax error, ',' expected
[CS1003] Line 14: Syntax error, ',' expected
[CS1003] Line 14: Syntax error, ',' expected
[CS1003] Line 14: Syntax error, ',' expected
[CS1010] Line 14: Newline in constant
[CS1012] Line 14: Too many characters in character literal
[CS1056] Line 16: Unexpected character '`'
[CS1003] Line 16: Syntax error, ',' expected
[CS1001] Line 16: Identifier expected
[CS1056] Line 16: Unexpected character '`'
[CS1056] Line 16: Unexpected character '–'
[CS1003] Line 16: Syntax error, ',' expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1001] Line 16: Identifier expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1001] Line 16: Identifier expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1003] Line 16: Syntax error, ',' expected
[CS1056] Line 18: Unexpected character '`'
[CS1003] Line 18: Syntax error, ',' expected
[CS1001] Line 18: Identifier expected
[CS1056] Line 18: Unexpected character '`'
[CS1056] Line 18: Unexpected character '–'
[CS1003] Line 18: Syntax error, ',' expected
[CS1003] Line 18: Syntax error, ',' expected
[CS1003] Line 18: Syntax error, ',' expected
[CS1003] Line 18: Syntax error, ',' expected
[CS1003] Line 18: Syntax error, ',' expected
[CS1003] Line 18: Syntax error, ',' expected
[CS1003] Line 18: Syntax error, ',' expected
[CS1001] Line 18: Identifier expected
[CS1056] Line 18: Unexpected character '`'
[CS1003] Line 18: Syntax error, ',' expected
[CS1001] Line 18: Identifier expected
[CS1056] Line 18: Unexpected character '`'
[CS1003] Line 18: Syntax error, ',' expected
[CS1001] Line 18: Identifier expected
[CS1003] Line 18: Syntax error, ',' expected
[CS1001] Line 18: Identifier expected
[CS1056] Line 18: Unexpected character '`'
[CS1003] Line 18: Syntax error, ',' expected
[CS1001] Line 18: Identifier expected
[CS1056] Line 18: Unexpected character '`'
[CS1003] Line 18: Syntax error, ',' expected
[CS1001] Line 18: Identifier expected
[CS1003] Line 18: Syntax error, ',' expected
[CS1003] Line 18: Syntax error, ',' expected
[CS1001] Line 18: Identifier expected
[CS1001] Line 18: Identifier expected
[CS1003] Line 18: Syntax error, ',' expected
[CS1003] Line 18: Syntax error, ',' expected
[CS1001] Line 18: Identifier expected
[CS1003] Line 18: Syntax error, ',' expected
[CS1003] Line 18: Syntax error, ',' expected
[CS1031] Line 19: Type expected
[CS1001] Line 19: Identifier expected
[CS1026] Line 19: ) expected
[CS1002] Line 19: ; expected

**************************************************


public class TransferAuthorization
{
	/// <summary>Plaid’s unique identifier for a transfer authorization.</summary>
	[JsonPropertyName("id")]
	public TransferAuthorizationID id { get; set; }

	/// <summary>The datetime representing when the authorization was created, in the format "2006-01-02T15:04:05Z".</summary>
	[JsonPropertyName("created")]
	public string created { get; set; }

	/// <summary>
A decision regarding the proposed transfer.

`approved` – The proposed transfer has received the end user's consent and has been approved for processing. Plaid has also reviewed the proposed transfer and has approved it for processing. 

`permitted` – Plaid was unable to fetch the information required to approve or decline the proposed transfer. You may proceed with the transfer, but further review is recommended. Plaid is awaiting further instructions from the client.

`declined` – Plaid reviewed the proposed transfer and declined processing. Refer to the `code` field in the `decision_rationale` object for details.</summary>
	[JsonPropertyName("decision")]
	public string decision { get; set; }

	/// <summary>The rationale for Plaid's decision regarding a proposed transfer. Will be null for `approved` decisions.</summary>
	[JsonPropertyName("decision_rationale")]
	public TransferAuthorizationDecisionRationale decision_rationale { get; set; }

	/// <summary>Details regarding the proposed transfer.</summary>
	[JsonPropertyName("proposed_transfer")]
	public TransferAuthorizationProposedTransfer proposed_transfer { get; set; }

}


== TransferAuthorizationCreateResponse.cs
==================================================

public class TransferAuthorizationCreateResponse
{
	/// <summary>TransferAuthorization contains the authorization decision for a proposed transfer</summary>
	[JsonPropertyName("authorization")]
	public TransferAuthorization authorization { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== BankTransferCreateRequest.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 13: ; expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1003] Line 13: Syntax error, '(' expected
[CS1001] Line 13: Identifier expected
[CS1031] Line 13: Type expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1031] Line 14: Type expected
[CS1001] Line 14: Identifier expected
[CS1026] Line 14: ) expected
[CS1002] Line 14: ; expected
[CS1056] Line 47: Unexpected character '`'
[CS1519] Line 47: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 47: Unexpected character '`'
[CS1002] Line 47: ; expected
[CS1519] Line 49: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 49: Unexpected character '`'
[CS1519] Line 49: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 49: ; expected
[CS1519] Line 51: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 51: Unexpected character '`'
[CS1519] Line 51: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 51: Unexpected character '`'
[CS1002] Line 51: ; expected
[CS1003] Line 51: Syntax error, ',' expected
[CS1002] Line 51: ; expected
[CS1002] Line 51: ; expected
[CS1002] Line 51: ; expected
[CS1002] Line 51: ; expected
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 53: Unexpected character '`'
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 53: Unexpected character '`'
[CS1002] Line 53: ; expected
[CS1519] Line 55: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 55: Unexpected character '`'
[CS1519] Line 55: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 55: Unexpected character '`'
[CS1002] Line 55: ; expected
[CS1056] Line 57: Unexpected character '`'
[CS1056] Line 57: Unexpected character '`'
[CS1002] Line 57: ; expected
[CS1002] Line 57: ; expected
[CS1519] Line 59: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 59: Unexpected character '`'
[CS1519] Line 59: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 59: Unexpected character '`'
[CS1519] Line 61: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 61: Unexpected character '`'
[CS1519] Line 61: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 61: Unexpected character '`'
[CS1002] Line 61: ; expected
[CS1519] Line 63: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 63: Unexpected character '`'
[CS1519] Line 63: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 63: Unexpected character '`'
[CS1002] Line 63: ; expected
[CS1519] Line 65: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 65: Unexpected character '`'
[CS1519] Line 65: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 65: Unexpected character '`'
[CS1519] Line 65: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 65: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 65: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 65: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 67: Unexpected character '`'
[CS1056] Line 67: Unexpected character '`'
[CS1002] Line 67: ; expected
[CS1519] Line 67: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 67: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 67: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 67: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 69: Unexpected character '`'
[CS1056] Line 69: Unexpected character '`'
[CS1002] Line 69: ; expected
[CS1002] Line 69: ; expected
[CS1003] Line 69: Syntax error, ',' expected
[CS1002] Line 69: ; expected
[CS1003] Line 69: Syntax error, ',' expected
[CS1002] Line 69: ; expected
[CS1002] Line 69: ; expected
[CS1003] Line 69: Syntax error, ',' expected
[CS1002] Line 69: ; expected
[CS1002] Line 69: ; expected
[CS1002] Line 69: ; expected
[CS1519] Line 69: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 69: Invalid token ',' in class, record, struct, or interface member declaration
[CS1056] Line 71: Unexpected character '`'
[CS1056] Line 71: Unexpected character '`'
[CS1002] Line 71: ; expected
[CS1519] Line 71: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 71: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 71: ; expected
[CS1519] Line 73: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 73: Unexpected character '`'
[CS1519] Line 73: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 73: Unexpected character '`'
[CS1519] Line 73: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 73: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 75: Unexpected character '`'
[CS1056] Line 75: Unexpected character '`'
[CS1002] Line 75: ; expected
[CS1519] Line 75: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 75: Invalid token '-' in class, record, struct, or interface member declaration
[CS1003] Line 75: Syntax error, ',' expected
[CS1002] Line 75: ; expected
[CS1002] Line 75: ; expected
[CS1056] Line 75: Unexpected character '’'
[CS1002] Line 75: ; expected
[CS1002] Line 75: ; expected
[CS1002] Line 75: ; expected
[CS1519] Line 75: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 75: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 75: ; expected
[CS1001] Line 75: Identifier expected
[CS1003] Line 75: Syntax error, ',' expected
[CS1003] Line 75: Syntax error, '>' expected
[CS1003] Line 75: Syntax error, '(' expected
[CS1001] Line 75: Identifier expected
[CS1003] Line 75: Syntax error, ',' expected
[CS1003] Line 75: Syntax error, ',' expected
[CS1031] Line 76: Type expected
[CS1001] Line 76: Identifier expected
[CS1026] Line 76: ) expected
[CS1002] Line 76: ; expected
[CS1519] Line 88: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 88: ; expected
[CS1002] Line 88: ; expected
[CS1003] Line 88: Syntax error, ',' expected
[CS1003] Line 88: Syntax error, ',' expected
[CS1001] Line 88: Identifier expected
[CS1002] Line 88: ; expected
[CS1519] Line 89: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 89: ; expected
[CS1002] Line 89: ; expected
[CS1003] Line 89: Syntax error, ',' expected
[CS1002] Line 90: ; expected
[CS1003] Line 90: Syntax error, ',' expected
[CS1002] Line 90: ; expected
[CS1519] Line 90: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 90: Invalid token '/' in class, record, struct, or interface member declaration
[CS1003] Line 90: Syntax error, ',' expected
[CS1002] Line 91: ; expected
[CS1002] Line 91: ; expected
[CS1003] Line 91: Syntax error, ',' expected
[CS1002] Line 91: ; expected
[CS1519] Line 92: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 92: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 92: ; expected
[CS1003] Line 92: Syntax error, ',' expected
[CS1002] Line 92: ; expected
[CS1585] Line 95: Member modifier 'public' must precede the member type and name
[CS1031] Line 93: Type expected
[CS1003] Line 93: Syntax error, ',' expected
[CS1003] Line 93: Syntax error, ',' expected

**************************************************


public class BankTransferCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>A random key provided by the client, per unique bank transfer. Maximum of 50 characters.

The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a bank transfer fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single bank transfer is created.</summary>
	[JsonPropertyName("idempotency_key")]
	public BankTransferIdempotencyKey idempotency_key { get; set; }

	/// <summary>The Plaid `access_token` for the account that will be debited or credited.</summary>
	[JsonPropertyName("access_token")]
	public BankTransferAccessToken access_token { get; set; }

	/// <summary>The Plaid `account_id` for the account that will be debited or credited.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.</summary>
	[JsonPropertyName("type")]
	public BankTransferType type { get; set; }

	/// <summary>The network or rails used for the transfer. Valid options are `ach`, `same-day-ach`, or `wire`.</summary>
	[JsonPropertyName("network")]
	public BankTransferNetwork network { get; set; }

	/// <summary>The amount of the bank transfer (decimal string with two digits of precision e.g. “10.00”).</summary>
	[JsonPropertyName("amount")]
	public BankTransferAmount amount { get; set; }

	/// <summary>The currency of the transfer amount – should be set to "USD".</summary>
	[JsonPropertyName("iso_currency_code")]
	public string iso_currency_code { get; set; }

	/// <summary>The transfer description. Maximum of 10 characters.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

	/// <summary>Specifies the use case of the transfer.  Required for transfers on an ACH network.

`"arc"` - Accounts Receivable Entry

`"cbr`" - Cross Border Entry

`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts

`"cie"` - Customer Initiated Entry

`"cor"` - Automated Notification of Change

`"ctx"` - Corporate Trade Exchange

`"iat"` - International

`"mte"` - Machine Transfer Entry

`"pbr"` - Cross Border Entry

`"pop"` - Point-of-Purchase Entry

`"pos"` - Point-of-Sale Entry

`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment

`"rck"` - Re-presented Check Entry

`"tel"` - Telephone-Initiated Entry

`"web"` - Internet-Initiated Entry - debits from a consumer’s account where their authorization is obtained over the Internet</summary>
	[JsonPropertyName("ach_class")]
	public ACHClass ach_class { get; set; }

	/// <summary>The legal name and other information for the account holder.</summary>
	[JsonPropertyName("user")]
	public BankTransferUser user { get; set; }

	/// <summary>An arbitrary string provided by the client for storage with the bank transfer. May be up to 100 characters.</summary>
	[JsonPropertyName("custom_tag")]
	public string custom_tag { get; set; }

	/// <summary>The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
- The JSON values must be Strings (no nested JSON objects allowed)
- Only ASCII characters may be used
- Maximum of 50 key/value pairs
- Maximum key length of 40 characters
- Maximum value length of 500 characters
</summary>
	[JsonPropertyName("metadata")]
	public BankTransferMetadata metadata { get; set; }

	/// <summary>Plaid’s unique identifier for the origination account for this transfer. If you have more than one origination account, this value must be specified.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

}


== TransferCreateRequest.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 13: ; expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1003] Line 13: Syntax error, '(' expected
[CS1001] Line 13: Identifier expected
[CS1031] Line 13: Type expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1031] Line 14: Type expected
[CS1001] Line 14: Identifier expected
[CS1026] Line 14: ) expected
[CS1002] Line 14: ; expected
[CS1056] Line 47: Unexpected character '`'
[CS1519] Line 47: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 47: Unexpected character '`'
[CS1002] Line 47: ; expected
[CS1519] Line 49: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 49: Unexpected character '`'
[CS1519] Line 49: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 49: ; expected
[CS1519] Line 51: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 51: Unexpected character '`'
[CS1519] Line 51: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 51: Unexpected character '`'
[CS1002] Line 51: ; expected
[CS1003] Line 51: Syntax error, ',' expected
[CS1002] Line 51: ; expected
[CS1002] Line 51: ; expected
[CS1002] Line 51: ; expected
[CS1002] Line 51: ; expected
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 53: Unexpected character '`'
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 53: Unexpected character '`'
[CS1002] Line 53: ; expected
[CS1519] Line 55: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 55: Unexpected character '`'
[CS1519] Line 55: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 55: Unexpected character '`'
[CS1002] Line 55: ; expected
[CS1056] Line 57: Unexpected character '`'
[CS1056] Line 57: Unexpected character '`'
[CS1002] Line 57: ; expected
[CS1002] Line 57: ; expected
[CS1519] Line 59: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 59: Unexpected character '`'
[CS1519] Line 59: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 59: Unexpected character '`'
[CS1519] Line 61: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 61: Unexpected character '`'
[CS1519] Line 61: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 61: Unexpected character '`'
[CS1002] Line 61: ; expected
[CS1519] Line 63: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 63: Unexpected character '`'
[CS1519] Line 63: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 63: Unexpected character '`'
[CS1002] Line 63: ; expected
[CS1519] Line 65: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 65: Unexpected character '`'
[CS1519] Line 65: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 65: Unexpected character '`'
[CS1519] Line 65: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 65: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 65: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 65: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 67: Unexpected character '`'
[CS1056] Line 67: Unexpected character '`'
[CS1002] Line 67: ; expected
[CS1519] Line 67: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 67: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 67: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 67: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 69: Unexpected character '`'
[CS1056] Line 69: Unexpected character '`'
[CS1002] Line 69: ; expected
[CS1002] Line 69: ; expected
[CS1003] Line 69: Syntax error, ',' expected
[CS1002] Line 69: ; expected
[CS1003] Line 69: Syntax error, ',' expected
[CS1002] Line 69: ; expected
[CS1002] Line 69: ; expected
[CS1003] Line 69: Syntax error, ',' expected
[CS1002] Line 69: ; expected
[CS1002] Line 69: ; expected
[CS1002] Line 69: ; expected
[CS1519] Line 69: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 69: Invalid token ',' in class, record, struct, or interface member declaration
[CS1056] Line 71: Unexpected character '`'
[CS1056] Line 71: Unexpected character '`'
[CS1002] Line 71: ; expected
[CS1519] Line 71: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 71: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 71: ; expected
[CS1519] Line 73: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 73: Unexpected character '`'
[CS1519] Line 73: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 73: Unexpected character '`'
[CS1519] Line 73: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 73: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 75: Unexpected character '`'
[CS1056] Line 75: Unexpected character '`'
[CS1002] Line 75: ; expected
[CS1519] Line 75: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 75: Invalid token '-' in class, record, struct, or interface member declaration
[CS1003] Line 75: Syntax error, ',' expected
[CS1002] Line 75: ; expected
[CS1002] Line 75: ; expected
[CS1056] Line 75: Unexpected character '’'
[CS1002] Line 75: ; expected
[CS1002] Line 75: ; expected
[CS1002] Line 75: ; expected
[CS1519] Line 75: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 75: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 75: ; expected
[CS1001] Line 75: Identifier expected
[CS1003] Line 75: Syntax error, ',' expected
[CS1003] Line 75: Syntax error, '>' expected
[CS1003] Line 75: Syntax error, '(' expected
[CS1001] Line 75: Identifier expected
[CS1003] Line 75: Syntax error, ',' expected
[CS1003] Line 75: Syntax error, ',' expected
[CS1031] Line 76: Type expected
[CS1001] Line 76: Identifier expected
[CS1026] Line 76: ) expected
[CS1002] Line 76: ; expected
[CS1519] Line 84: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 84: ; expected
[CS1002] Line 84: ; expected
[CS1003] Line 84: Syntax error, ',' expected
[CS1003] Line 84: Syntax error, ',' expected
[CS1001] Line 84: Identifier expected
[CS1002] Line 84: ; expected
[CS1519] Line 85: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 85: ; expected
[CS1002] Line 85: ; expected
[CS1003] Line 85: Syntax error, ',' expected
[CS1002] Line 86: ; expected
[CS1003] Line 86: Syntax error, ',' expected
[CS1002] Line 86: ; expected
[CS1519] Line 86: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 86: Invalid token '/' in class, record, struct, or interface member declaration
[CS1003] Line 86: Syntax error, ',' expected
[CS1002] Line 87: ; expected
[CS1002] Line 87: ; expected
[CS1003] Line 87: Syntax error, ',' expected
[CS1002] Line 87: ; expected
[CS1519] Line 88: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 88: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 88: ; expected
[CS1003] Line 88: Syntax error, ',' expected
[CS1002] Line 88: ; expected
[CS1585] Line 91: Member modifier 'public' must precede the member type and name
[CS1031] Line 89: Type expected
[CS1003] Line 89: Syntax error, ',' expected
[CS1003] Line 89: Syntax error, ',' expected

**************************************************


public class TransferCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>A random key provided by the client, per unique transfer. Maximum of 50 characters.

The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a transfer fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single transfer is created.</summary>
	[JsonPropertyName("idempotency_key")]
	public TransferCreateIdempotencyKey idempotency_key { get; set; }

	/// <summary>The Plaid `access_token` for the account that will be debited or credited.</summary>
	[JsonPropertyName("access_token")]
	public TransferAccessToken access_token { get; set; }

	/// <summary>The Plaid `account_id` for the account that will be debited or credited.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>Plaid’s unique identifier for a transfer authorization.</summary>
	[JsonPropertyName("authorization_id")]
	public TransferAuthorizationID authorization_id { get; set; }

	/// <summary>The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.</summary>
	[JsonPropertyName("type")]
	public TransferType type { get; set; }

	/// <summary>The network or rails used for the transfer. Valid options are `ach` or `same-day-ach`.</summary>
	[JsonPropertyName("network")]
	public TransferNetwork network { get; set; }

	/// <summary>The amount of the transfer (decimal string with two digits of precision e.g. “10.00”).</summary>
	[JsonPropertyName("amount")]
	public TransferAmount amount { get; set; }

	/// <summary>The transfer description. Maximum of 10 characters.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

	/// <summary>Specifies the use case of the transfer.  Required for transfers on an ACH network.

`"arc"` - Accounts Receivable Entry

`"cbr`" - Cross Border Entry

`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts

`"cie"` - Customer Initiated Entry

`"cor"` - Automated Notification of Change

`"ctx"` - Corporate Trade Exchange

`"iat"` - International

`"mte"` - Machine Transfer Entry

`"pbr"` - Cross Border Entry

`"pop"` - Point-of-Purchase Entry

`"pos"` - Point-of-Sale Entry

`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment

`"rck"` - Re-presented Check Entry

`"tel"` - Telephone-Initiated Entry

`"web"` - Internet-Initiated Entry - debits from a consumer’s account where their authorization is obtained over the Internet</summary>
	[JsonPropertyName("ach_class")]
	public ACHClass ach_class { get; set; }

	/// <summary>The legal name and other information for the account holder.</summary>
	[JsonPropertyName("user")]
	public TransferUserInRequest user { get; set; }

	/// <summary>The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
- The JSON values must be Strings (no nested JSON objects allowed)
- Only ASCII characters may be used
- Maximum of 50 key/value pairs
- Maximum key length of 40 characters
- Maximum value length of 500 characters
</summary>
	[JsonPropertyName("metadata")]
	public TransferMetadata metadata { get; set; }

	/// <summary>Plaid’s unique identifier for the origination account for this transfer. If you have more than one origination account, this value must be specified.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

}


== TransferAuthorizationCreateRequest.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 33: Unexpected character '`'
[CS1519] Line 33: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 33: Unexpected character '`'
[CS1002] Line 33: ; expected
[CS1519] Line 35: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 35: Unexpected character '`'
[CS1519] Line 35: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 35: ; expected
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 37: Unexpected character '`'
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 37: Unexpected character '`'
[CS1002] Line 37: ; expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1002] Line 37: ; expected
[CS1002] Line 37: ; expected
[CS1002] Line 37: ; expected
[CS1002] Line 37: ; expected
[CS1519] Line 39: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 39: Unexpected character '`'
[CS1519] Line 39: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 39: Unexpected character '`'
[CS1002] Line 39: ; expected
[CS1519] Line 41: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 41: Unexpected character '`'
[CS1519] Line 41: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 41: Unexpected character '`'
[CS1002] Line 41: ; expected
[CS1056] Line 43: Unexpected character '`'
[CS1056] Line 43: Unexpected character '`'
[CS1002] Line 43: ; expected
[CS1002] Line 43: ; expected
[CS1519] Line 45: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 45: Unexpected character '`'
[CS1519] Line 45: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 45: Unexpected character '`'
[CS1519] Line 47: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 47: Unexpected character '`'
[CS1519] Line 47: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 47: Unexpected character '`'
[CS1002] Line 47: ; expected
[CS1519] Line 49: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 49: Unexpected character '`'
[CS1519] Line 49: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 49: Unexpected character '`'
[CS1002] Line 49: ; expected
[CS1519] Line 51: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 51: Unexpected character '`'
[CS1519] Line 51: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 51: Unexpected character '`'
[CS1519] Line 51: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 51: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 51: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 51: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 53: Unexpected character '`'
[CS1056] Line 53: Unexpected character '`'
[CS1002] Line 53: ; expected
[CS1519] Line 53: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 55: Unexpected character '`'
[CS1056] Line 55: Unexpected character '`'
[CS1002] Line 55: ; expected
[CS1002] Line 55: ; expected
[CS1003] Line 55: Syntax error, ',' expected
[CS1002] Line 55: ; expected
[CS1003] Line 55: Syntax error, ',' expected
[CS1002] Line 55: ; expected
[CS1002] Line 55: ; expected
[CS1003] Line 55: Syntax error, ',' expected
[CS1002] Line 55: ; expected
[CS1002] Line 55: ; expected
[CS1002] Line 55: ; expected
[CS1519] Line 55: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 55: Invalid token ',' in class, record, struct, or interface member declaration
[CS1056] Line 57: Unexpected character '`'
[CS1056] Line 57: Unexpected character '`'
[CS1002] Line 57: ; expected
[CS1519] Line 57: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 57: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 57: ; expected
[CS1519] Line 59: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 59: Unexpected character '`'
[CS1519] Line 59: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 59: Unexpected character '`'
[CS1519] Line 59: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 59: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 61: Unexpected character '`'
[CS1056] Line 61: Unexpected character '`'
[CS1002] Line 61: ; expected
[CS1519] Line 61: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 61: Invalid token '-' in class, record, struct, or interface member declaration
[CS1003] Line 61: Syntax error, ',' expected
[CS1002] Line 61: ; expected
[CS1002] Line 61: ; expected
[CS1056] Line 61: Unexpected character '’'
[CS1002] Line 61: ; expected
[CS1002] Line 61: ; expected
[CS1002] Line 61: ; expected
[CS1519] Line 61: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 61: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 61: ; expected
[CS1001] Line 61: Identifier expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, '>' expected
[CS1003] Line 61: Syntax error, '(' expected
[CS1001] Line 61: Identifier expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1031] Line 62: Type expected
[CS1001] Line 62: Identifier expected
[CS1026] Line 62: ) expected
[CS1002] Line 62: ; expected

**************************************************


public class TransferAuthorizationCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The Plaid `access_token` for the account that will be debited or credited.</summary>
	[JsonPropertyName("access_token")]
	public TransferAccessToken access_token { get; set; }

	/// <summary>The Plaid `account_id` for the account that will be debited or credited.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.</summary>
	[JsonPropertyName("type")]
	public TransferType type { get; set; }

	/// <summary>The network or rails used for the transfer. Valid options are `ach` or `same-day-ach`.</summary>
	[JsonPropertyName("network")]
	public TransferNetwork network { get; set; }

	/// <summary>The amount of the transfer (decimal string with two digits of precision e.g. “10.00”).</summary>
	[JsonPropertyName("amount")]
	public TransferAmount amount { get; set; }

	/// <summary>Specifies the use case of the transfer.  Required for transfers on an ACH network.

`"arc"` - Accounts Receivable Entry

`"cbr`" - Cross Border Entry

`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts

`"cie"` - Customer Initiated Entry

`"cor"` - Automated Notification of Change

`"ctx"` - Corporate Trade Exchange

`"iat"` - International

`"mte"` - Machine Transfer Entry

`"pbr"` - Cross Border Entry

`"pop"` - Point-of-Purchase Entry

`"pos"` - Point-of-Sale Entry

`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment

`"rck"` - Re-presented Check Entry

`"tel"` - Telephone-Initiated Entry

`"web"` - Internet-Initiated Entry - debits from a consumer’s account where their authorization is obtained over the Internet</summary>
	[JsonPropertyName("ach_class")]
	public ACHClass ach_class { get; set; }

	/// <summary>The legal name and other information for the account holder.</summary>
	[JsonPropertyName("user")]
	public TransferUserInRequest user { get; set; }

	/// <summary>Information about the device being used to initiate the authorization.</summary>
	[JsonPropertyName("device")]
	public TransferAuthorizationDevice device { get; set; }

	/// <summary>Plaid's unique identifier for the origination account for this authorization. If not specified, the default account will be used.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

}


== BankTransferFailure.cs
==================================================

public class BankTransferFailure
{
	/// <summary>The ACH return code, e.g. `R01`.  A return code will be provided if and only if the transfer status is `reversed`. For a full listing of ACH return codes, see [Bank Transfers errors](https://plaid.com/docs/errors/bank-transfers/#ach-return-codes).</summary>
	[JsonPropertyName("ach_return_code")]
	public string ach_return_code { get; set; }

	/// <summary>A human-readable description of the reason for the failure or reversal.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

}


== TransferFailure.cs
==================================================

public class TransferFailure
{
	/// <summary>The ACH return code, e.g. `R01`.  A return code will be provided if and only if the transfer status is `reversed`. For a full listing of ACH return codes, see [Bank Transfers errors](https://plaid.com/docs/errors/bank-transfers/#ach-return-codes).</summary>
	[JsonPropertyName("ach_return_code")]
	public string ach_return_code { get; set; }

	/// <summary>A human-readable description of the reason for the failure or reversal.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

}


== BankTransferMetadata.cs
==================================================

public class BankTransferMetadata
{
}


== TransferMetadata.cs
==================================================

public class TransferMetadata
{
}


== TransferAuthorizationDevice.cs
==================================================

public class TransferAuthorizationDevice
{
	/// <summary>The IP address of the device being used to initiate the authorization.</summary>
	[JsonPropertyName("ip_address")]
	public string ip_address { get; set; }

	/// <summary>The user agent of the device being used to initiate the authorization.</summary>
	[JsonPropertyName("user_agent")]
	public string user_agent { get; set; }

}


== TransferAuthorizationProposedTransfer.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1002] Line 5: ; expected
[CS1519] Line 7: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 7: Unexpected character '`'
[CS1519] Line 7: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 7: ; expected
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 9: Unexpected character '`'
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 9: Unexpected character '`'
[CS1002] Line 9: ; expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1002] Line 11: ; expected
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1002] Line 13: ; expected
[CS1056] Line 15: Unexpected character '`'
[CS1056] Line 15: Unexpected character '`'
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 19: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 19: Unexpected character '`'
[CS1519] Line 19: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 19: Unexpected character '`'
[CS1002] Line 19: ; expected
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1002] Line 21: ; expected
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 23: Unexpected character '`'
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 23: Unexpected character '`'
[CS1519] Line 23: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 23: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 23: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 23: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 25: Unexpected character '`'
[CS1056] Line 25: Unexpected character '`'
[CS1002] Line 25: ; expected
[CS1519] Line 25: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 25: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 25: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 25: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1056] Line 27: Unexpected character '`'
[CS1002] Line 27: ; expected
[CS1002] Line 27: ; expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1002] Line 27: ; expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1002] Line 27: ; expected
[CS1002] Line 27: ; expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1002] Line 27: ; expected
[CS1002] Line 27: ; expected
[CS1002] Line 27: ; expected
[CS1519] Line 27: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token ',' in class, record, struct, or interface member declaration
[CS1056] Line 29: Unexpected character '`'
[CS1056] Line 29: Unexpected character '`'
[CS1002] Line 29: ; expected
[CS1519] Line 29: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 29: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 29: ; expected
[CS1519] Line 31: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 31: Unexpected character '`'
[CS1519] Line 31: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 31: Unexpected character '`'
[CS1519] Line 31: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 31: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 33: Unexpected character '`'
[CS1056] Line 33: Unexpected character '`'
[CS1002] Line 33: ; expected
[CS1519] Line 33: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 33: Invalid token '-' in class, record, struct, or interface member declaration
[CS1003] Line 33: Syntax error, ',' expected
[CS1002] Line 33: ; expected
[CS1002] Line 33: ; expected
[CS1056] Line 33: Unexpected character '’'
[CS1002] Line 33: ; expected
[CS1002] Line 33: ; expected
[CS1002] Line 33: ; expected
[CS1519] Line 33: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 33: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 33: ; expected
[CS1001] Line 33: Identifier expected
[CS1003] Line 33: Syntax error, ',' expected
[CS1003] Line 33: Syntax error, '>' expected
[CS1003] Line 33: Syntax error, '(' expected
[CS1001] Line 33: Identifier expected
[CS1003] Line 33: Syntax error, ',' expected
[CS1003] Line 33: Syntax error, ',' expected
[CS1031] Line 34: Type expected
[CS1001] Line 34: Identifier expected
[CS1026] Line 34: ) expected
[CS1002] Line 34: ; expected

**************************************************


public class TransferAuthorizationProposedTransfer
{
	/// <summary>Specifies the use case of the transfer.  Required for transfers on an ACH network.

`"arc"` - Accounts Receivable Entry

`"cbr`" - Cross Border Entry

`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts

`"cie"` - Customer Initiated Entry

`"cor"` - Automated Notification of Change

`"ctx"` - Corporate Trade Exchange

`"iat"` - International

`"mte"` - Machine Transfer Entry

`"pbr"` - Cross Border Entry

`"pop"` - Point-of-Purchase Entry

`"pos"` - Point-of-Sale Entry

`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment

`"rck"` - Re-presented Check Entry

`"tel"` - Telephone-Initiated Entry

`"web"` - Internet-Initiated Entry - debits from a consumer’s account where their authorization is obtained over the Internet</summary>
	[JsonPropertyName("ach_class")]
	public ACHClass ach_class { get; set; }

	/// <summary>The Plaid `account_id` for the account that will be debited or credited.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.</summary>
	[JsonPropertyName("type")]
	public TransferType type { get; set; }

	/// <summary>The legal name and other information for the account holder.</summary>
	[JsonPropertyName("user")]
	public TransferUserInResponse user { get; set; }

	/// <summary>The amount of the transfer (decimal string with two digits of precision e.g. “10.00”).</summary>
	[JsonPropertyName("amount")]
	public TransferAmount amount { get; set; }

	/// <summary>The network or rails used for the transfer.</summary>
	[JsonPropertyName("network")]
	public string network { get; set; }

	/// <summary>Plaid's unique identifier for the origination account that was used for this transfer.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

}


== TransferAuthorizationDecisionRationale.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '–'
[CS1002] Line 5: ; expected
[CS1003] Line 5: Syntax error, ',' expected
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token 'return' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1001] Line 5: Identifier expected
[CS1003] Line 5: Syntax error, '(' expected
[CS1056] Line 7: Unexpected character '`'
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 9: Unexpected character '`'
[CS1056] Line 9: Unexpected character '–'
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 11: Unexpected character '`'
[CS1003] Line 11: Syntax error, ',' expected
[CS1001] Line 11: Identifier expected
[CS1056] Line 11: Unexpected character '`'
[CS1056] Line 11: Unexpected character '–'
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1001] Line 11: Identifier expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1001] Line 11: Identifier expected
[CS1026] Line 11: ) expected
[CS1002] Line 11: ; expected
[CS1513] Line 11: } expected
[CS8803] Line 11: Top-level statements must precede namespace and type declarations.
[CS1002] Line 11: ; expected
[CS1001] Line 11: Identifier expected
[CS1002] Line 11: ; expected
[CS1056] Line 13: Unexpected character '`'
[CS0116] Line 13: A namespace cannot directly contain members such as fields, methods or statements
[CS1056] Line 13: Unexpected character '`'
[CS1056] Line 13: Unexpected character '–'
[CS1003] Line 13: Syntax error, ',' expected
[CS1002] Line 13: ; expected
[CS1022] Line 21: Type or namespace definition, or end-of-file expected

**************************************************


public class TransferAuthorizationDecisionRationale
{
	/// <summary>A code representing the rationale for permitting or declining the proposed transfer. Possible values are:

`NSF` – Transaction likely to result in a return due to insufficient funds.

`RISK` - Transaction is high-risk.

`MANUALLY_VERIFIED_ITEM` – Item created via same-day micro deposits, limited information available. Plaid can only offer `permitted` as a transaction decision.

`LOGIN_REQUIRED` – Unable to collect the account information required for an authorization decision due to Item staleness. Can be rectified using Link update mode.

`ERROR` – Unable to collect the account information required for an authorization decision due to an error.</summary>
	[JsonPropertyName("code")]
	public string code { get; set; }

	/// <summary>A human-readable description of the code associated with a permitted transfer or transfer decline.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

}


== BankTransferUser.cs
==================================================

public class BankTransferUser
{
	/// <summary>The account holder’s full legal name. If the transfer description is `ccd`, this should be the business name of the account holder.</summary>
	[JsonPropertyName("legal_name")]
	public string legal_name { get; set; }

	/// <summary>The account holder’s email.</summary>
	[JsonPropertyName("email_address")]
	public string email_address { get; set; }

	/// <summary>The account holder's routing number. This field is only used in response data. Do not provide this field when making requests.</summary>
	[JsonPropertyName("routing_number")]
	public string routing_number { get; set; }

}


== TransferUserAddressInResponse.cs
==================================================

public class TransferUserAddressInResponse
{
	/// <summary>The street number and name (i.e., "100 Market St.").</summary>
	[JsonPropertyName("street")]
	public string street { get; set; }

	/// <summary>Ex. "San Francisco"</summary>
	[JsonPropertyName("city")]
	public string city { get; set; }

	/// <summary>The state or province (e.g., "California").</summary>
	[JsonPropertyName("region")]
	public string region { get; set; }

	/// <summary>The postal code (e.g., "94103").</summary>
	[JsonPropertyName("postal_code")]
	public string postal_code { get; set; }

	/// <summary>A two-letter country code (e.g., "US").</summary>
	[JsonPropertyName("country")]
	public string country { get; set; }

}


== TransferUserAddressInRequest.cs
==================================================

public class TransferUserAddressInRequest
{
	/// <summary>The street number and name (i.e., "100 Market St.").</summary>
	[JsonPropertyName("street")]
	public string street { get; set; }

	/// <summary>Ex. "San Francisco"</summary>
	[JsonPropertyName("city")]
	public string city { get; set; }

	/// <summary>The state or province (e.g., "California").</summary>
	[JsonPropertyName("region")]
	public string region { get; set; }

	/// <summary>The postal code (e.g., "94103").</summary>
	[JsonPropertyName("postal_code")]
	public string postal_code { get; set; }

	/// <summary>A two-letter country code (e.g., "US").</summary>
	[JsonPropertyName("country")]
	public string country { get; set; }

}


== TransferUserInResponse.cs
==================================================

public class TransferUserInResponse
{
	/// <summary>The user's legal name.</summary>
	[JsonPropertyName("legal_name")]
	public string legal_name { get; set; }

	/// <summary>The user's phone number.</summary>
	[JsonPropertyName("phone_number")]
	public string phone_number { get; set; }

	/// <summary>The user's email address.</summary>
	[JsonPropertyName("email_address")]
	public string email_address { get; set; }

	/// <summary>The address associated with the account holder.</summary>
	[JsonPropertyName("address")]
	public TransferUserAddressInResponse address { get; set; }

}


== TransferUserInRequest.cs
==================================================

public class TransferUserInRequest
{
	/// <summary>The user's legal name.</summary>
	[JsonPropertyName("legal_name")]
	public string legal_name { get; set; }

	/// <summary>The user's phone number.</summary>
	[JsonPropertyName("phone_number")]
	public string phone_number { get; set; }

	/// <summary>The user's email address.</summary>
	[JsonPropertyName("email_address")]
	public string email_address { get; set; }

	/// <summary>The address associated with the account holder.</summary>
	[JsonPropertyName("address")]
	public TransferUserAddressInRequest address { get; set; }

}


== BankTransfer.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 9: Unexpected character '`'
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 9: Unexpected character '`'
[CS1002] Line 9: ; expected
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 11: ; expected
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1002] Line 13: ; expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1519] Line 15: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 15: Unexpected character '`'
[CS1519] Line 15: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 15: Unexpected character '`'
[CS1002] Line 15: ; expected
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1002] Line 17: ; expected
[CS1056] Line 19: Unexpected character '`'
[CS1056] Line 19: Unexpected character '`'
[CS1002] Line 19: ; expected
[CS1002] Line 19: ; expected
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 23: Unexpected character '`'
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 23: Unexpected character '`'
[CS1002] Line 23: ; expected
[CS1519] Line 25: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 25: Unexpected character '`'
[CS1519] Line 25: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 25: Unexpected character '`'
[CS1002] Line 25: ; expected
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1519] Line 27: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 29: Unexpected character '`'
[CS1056] Line 29: Unexpected character '`'
[CS1002] Line 29: ; expected
[CS1519] Line 29: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 29: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 29: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 29: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 31: Unexpected character '`'
[CS1056] Line 31: Unexpected character '`'
[CS1002] Line 31: ; expected
[CS1002] Line 31: ; expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1002] Line 31: ; expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1002] Line 31: ; expected
[CS1002] Line 31: ; expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1002] Line 31: ; expected
[CS1002] Line 31: ; expected
[CS1002] Line 31: ; expected
[CS1519] Line 31: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 31: Invalid token ',' in class, record, struct, or interface member declaration
[CS1056] Line 33: Unexpected character '`'
[CS1056] Line 33: Unexpected character '`'
[CS1002] Line 33: ; expected
[CS1519] Line 33: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 33: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 33: ; expected
[CS1519] Line 35: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 35: Unexpected character '`'
[CS1519] Line 35: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 35: Unexpected character '`'
[CS1519] Line 35: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 35: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 37: Unexpected character '`'
[CS1056] Line 37: Unexpected character '`'
[CS1002] Line 37: ; expected
[CS1519] Line 37: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 37: Invalid token '-' in class, record, struct, or interface member declaration
[CS1003] Line 37: Syntax error, ',' expected
[CS1002] Line 37: ; expected
[CS1002] Line 37: ; expected
[CS1056] Line 37: Unexpected character '’'
[CS1002] Line 37: ; expected
[CS1002] Line 37: ; expected
[CS1002] Line 37: ; expected
[CS1519] Line 37: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 37: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 37: ; expected
[CS1001] Line 37: Identifier expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, '>' expected
[CS1003] Line 37: Syntax error, '(' expected
[CS1001] Line 37: Identifier expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1031] Line 38: Type expected
[CS1001] Line 38: Identifier expected
[CS1026] Line 38: ) expected
[CS1002] Line 38: ; expected
[CS1519] Line 90: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 90: ; expected
[CS1002] Line 90: ; expected
[CS1003] Line 90: Syntax error, ',' expected
[CS1003] Line 90: Syntax error, ',' expected
[CS1001] Line 90: Identifier expected
[CS1002] Line 90: ; expected
[CS1519] Line 91: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 91: ; expected
[CS1002] Line 91: ; expected
[CS1003] Line 91: Syntax error, ',' expected
[CS1002] Line 92: ; expected
[CS1003] Line 92: Syntax error, ',' expected
[CS1002] Line 92: ; expected
[CS1519] Line 92: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 92: Invalid token '/' in class, record, struct, or interface member declaration
[CS1003] Line 92: Syntax error, ',' expected
[CS1002] Line 93: ; expected
[CS1002] Line 93: ; expected
[CS1003] Line 93: Syntax error, ',' expected
[CS1002] Line 93: ; expected
[CS1519] Line 94: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 94: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 94: ; expected
[CS1003] Line 94: Syntax error, ',' expected
[CS1002] Line 94: ; expected
[CS1585] Line 97: Member modifier 'public' must precede the member type and name
[CS1031] Line 95: Type expected
[CS1003] Line 95: Syntax error, ',' expected
[CS1003] Line 95: Syntax error, ',' expected

**************************************************


public class BankTransfer
{
	/// <summary>Plaid’s unique identifier for a bank transfer.</summary>
	[JsonPropertyName("id")]
	public BankTransferID id { get; set; }

	/// <summary>Specifies the use case of the transfer.  Required for transfers on an ACH network.

`"arc"` - Accounts Receivable Entry

`"cbr`" - Cross Border Entry

`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts

`"cie"` - Customer Initiated Entry

`"cor"` - Automated Notification of Change

`"ctx"` - Corporate Trade Exchange

`"iat"` - International

`"mte"` - Machine Transfer Entry

`"pbr"` - Cross Border Entry

`"pop"` - Point-of-Purchase Entry

`"pos"` - Point-of-Sale Entry

`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment

`"rck"` - Re-presented Check Entry

`"tel"` - Telephone-Initiated Entry

`"web"` - Internet-Initiated Entry - debits from a consumer’s account where their authorization is obtained over the Internet</summary>
	[JsonPropertyName("ach_class")]
	public ACHClass ach_class { get; set; }

	/// <summary>The account ID that should be credited/debited for this bank transfer.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.</summary>
	[JsonPropertyName("type")]
	public BankTransferType type { get; set; }

	/// <summary>The legal name and other information for the account holder.</summary>
	[JsonPropertyName("user")]
	public BankTransferUser user { get; set; }

	/// <summary>The amount of the bank transfer (decimal string with two digits of precision e.g. “10.00”).</summary>
	[JsonPropertyName("amount")]
	public BankTransferAmount amount { get; set; }

	/// <summary>The currency of the transfer amount, e.g. "USD"</summary>
	[JsonPropertyName("iso_currency_code")]
	public string iso_currency_code { get; set; }

	/// <summary>The description of the transfer.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

	/// <summary>The datetime when this bank transfer was created. This will be of the form `2006-01-02T15:04:05Z`</summary>
	[JsonPropertyName("created")]
	public DateTime created { get; set; }

	/// <summary>The status of the transfer.</summary>
	[JsonPropertyName("status")]
	public BankTransferStatus status { get; set; }

	/// <summary>The network or rails used for the transfer. Valid options are `ach`, `same-day-ach`, or `wire`.</summary>
	[JsonPropertyName("network")]
	public BankTransferNetwork network { get; set; }

	/// <summary>When `true`, you can still cancel this bank transfer.</summary>
	[JsonPropertyName("cancellable")]
	public bool cancellable { get; set; }

	/// <summary>The failure reason if the type of this transfer is `"failed"` or `"reversed"`. Null value otherwise.</summary>
	[JsonPropertyName("failure_reason")]
	public BankTransferFailure failure_reason { get; set; }

	/// <summary>A string containing the custom tag provided by the client in the create request. Will be null if not provided.</summary>
	[JsonPropertyName("custom_tag")]
	public string custom_tag { get; set; }

	/// <summary>The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
- The JSON values must be Strings (no nested JSON objects allowed)
- Only ASCII characters may be used
- Maximum of 50 key/value pairs
- Maximum key length of 40 characters
- Maximum value length of 500 characters
</summary>
	[JsonPropertyName("metadata")]
	public BankTransferMetadata metadata { get; set; }

	/// <summary>Plaid’s unique identifier for the origination account that was used for this transfer.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

	/// <summary>Indicates the direction of the transfer: `outbound` for API-initiated transfers, or `inbound` for payments received by the FBO account.</summary>
	[JsonPropertyName("direction")]
	public BankTransferDirection direction { get; set; }

}


== Transfer.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 9: Unexpected character '`'
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 9: Unexpected character '`'
[CS1002] Line 9: ; expected
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 11: ; expected
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1002] Line 13: ; expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1519] Line 15: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 15: Unexpected character '`'
[CS1519] Line 15: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 15: Unexpected character '`'
[CS1002] Line 15: ; expected
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1002] Line 17: ; expected
[CS1056] Line 19: Unexpected character '`'
[CS1056] Line 19: Unexpected character '`'
[CS1002] Line 19: ; expected
[CS1002] Line 19: ; expected
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 23: Unexpected character '`'
[CS1519] Line 23: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 23: Unexpected character '`'
[CS1002] Line 23: ; expected
[CS1519] Line 25: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 25: Unexpected character '`'
[CS1519] Line 25: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 25: Unexpected character '`'
[CS1002] Line 25: ; expected
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1519] Line 27: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 29: Unexpected character '`'
[CS1056] Line 29: Unexpected character '`'
[CS1002] Line 29: ; expected
[CS1519] Line 29: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 29: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 29: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 29: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 31: Unexpected character '`'
[CS1056] Line 31: Unexpected character '`'
[CS1002] Line 31: ; expected
[CS1002] Line 31: ; expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1002] Line 31: ; expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1002] Line 31: ; expected
[CS1002] Line 31: ; expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1002] Line 31: ; expected
[CS1002] Line 31: ; expected
[CS1002] Line 31: ; expected
[CS1519] Line 31: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 31: Invalid token ',' in class, record, struct, or interface member declaration
[CS1056] Line 33: Unexpected character '`'
[CS1056] Line 33: Unexpected character '`'
[CS1002] Line 33: ; expected
[CS1519] Line 33: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 33: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 33: ; expected
[CS1519] Line 35: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 35: Unexpected character '`'
[CS1519] Line 35: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 35: Unexpected character '`'
[CS1519] Line 35: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 35: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 37: Unexpected character '`'
[CS1056] Line 37: Unexpected character '`'
[CS1002] Line 37: ; expected
[CS1519] Line 37: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 37: Invalid token '-' in class, record, struct, or interface member declaration
[CS1003] Line 37: Syntax error, ',' expected
[CS1002] Line 37: ; expected
[CS1002] Line 37: ; expected
[CS1056] Line 37: Unexpected character '’'
[CS1002] Line 37: ; expected
[CS1002] Line 37: ; expected
[CS1002] Line 37: ; expected
[CS1519] Line 37: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 37: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 37: ; expected
[CS1001] Line 37: Identifier expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, '>' expected
[CS1003] Line 37: Syntax error, '(' expected
[CS1001] Line 37: Identifier expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1031] Line 38: Type expected
[CS1001] Line 38: Identifier expected
[CS1026] Line 38: ) expected
[CS1002] Line 38: ; expected
[CS1519] Line 82: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 82: ; expected
[CS1002] Line 82: ; expected
[CS1003] Line 82: Syntax error, ',' expected
[CS1003] Line 82: Syntax error, ',' expected
[CS1001] Line 82: Identifier expected
[CS1002] Line 82: ; expected
[CS1519] Line 83: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 83: ; expected
[CS1002] Line 83: ; expected
[CS1003] Line 83: Syntax error, ',' expected
[CS1002] Line 84: ; expected
[CS1003] Line 84: Syntax error, ',' expected
[CS1002] Line 84: ; expected
[CS1519] Line 84: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 84: Invalid token '/' in class, record, struct, or interface member declaration
[CS1003] Line 84: Syntax error, ',' expected
[CS1002] Line 85: ; expected
[CS1002] Line 85: ; expected
[CS1003] Line 85: Syntax error, ',' expected
[CS1002] Line 85: ; expected
[CS1519] Line 86: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 86: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 86: ; expected
[CS1003] Line 86: Syntax error, ',' expected
[CS1002] Line 86: ; expected
[CS1585] Line 89: Member modifier 'public' must precede the member type and name
[CS1031] Line 87: Type expected
[CS1003] Line 87: Syntax error, ',' expected
[CS1003] Line 87: Syntax error, ',' expected

**************************************************


public class Transfer
{
	/// <summary>Plaid’s unique identifier for a transfer.</summary>
	[JsonPropertyName("id")]
	public TransferID id { get; set; }

	/// <summary>Specifies the use case of the transfer.  Required for transfers on an ACH network.

`"arc"` - Accounts Receivable Entry

`"cbr`" - Cross Border Entry

`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts

`"cie"` - Customer Initiated Entry

`"cor"` - Automated Notification of Change

`"ctx"` - Corporate Trade Exchange

`"iat"` - International

`"mte"` - Machine Transfer Entry

`"pbr"` - Cross Border Entry

`"pop"` - Point-of-Purchase Entry

`"pos"` - Point-of-Sale Entry

`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment

`"rck"` - Re-presented Check Entry

`"tel"` - Telephone-Initiated Entry

`"web"` - Internet-Initiated Entry - debits from a consumer’s account where their authorization is obtained over the Internet</summary>
	[JsonPropertyName("ach_class")]
	public ACHClass ach_class { get; set; }

	/// <summary>The account ID that should be credited/debited for this transfer.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.</summary>
	[JsonPropertyName("type")]
	public TransferType type { get; set; }

	/// <summary>The legal name and other information for the account holder.</summary>
	[JsonPropertyName("user")]
	public TransferUserInResponse user { get; set; }

	/// <summary>The amount of the transfer (decimal string with two digits of precision e.g. “10.00”).</summary>
	[JsonPropertyName("amount")]
	public TransferAmount amount { get; set; }

	/// <summary>The description of the transfer.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

	/// <summary>The datetime when this transfer was created. This will be of the form `2006-01-02T15:04:05Z`</summary>
	[JsonPropertyName("created")]
	public DateTime created { get; set; }

	/// <summary>The status of the transfer.</summary>
	[JsonPropertyName("status")]
	public TransferStatus status { get; set; }

	/// <summary>The network or rails used for the transfer. Valid options are `ach` or `same-day-ach`.</summary>
	[JsonPropertyName("network")]
	public TransferNetwork network { get; set; }

	/// <summary>When `true`, you can still cancel this transfer.</summary>
	[JsonPropertyName("cancellable")]
	public bool cancellable { get; set; }

	/// <summary>The failure reason if the type of this transfer is `"failed"` or `"reversed"`. Null value otherwise.</summary>
	[JsonPropertyName("failure_reason")]
	public TransferFailure failure_reason { get; set; }

	/// <summary>The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
- The JSON values must be Strings (no nested JSON objects allowed)
- Only ASCII characters may be used
- Maximum of 50 key/value pairs
- Maximum key length of 40 characters
- Maximum value length of 500 characters
</summary>
	[JsonPropertyName("metadata")]
	public TransferMetadata metadata { get; set; }

	/// <summary>Plaid’s unique identifier for the origination account that was used for this transfer.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

}


== BankTransferGetResponse.cs
==================================================

public class BankTransferGetResponse
{
	/// <summary>Represents a bank transfer within the Bank Transfers API.</summary>
	[JsonPropertyName("bank_transfer")]
	public BankTransfer bank_transfer { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== TransferGetResponse.cs
==================================================

public class TransferGetResponse
{
	/// <summary>Represents a transfer within the Transfers API.</summary>
	[JsonPropertyName("transfer")]
	public Transfer transfer { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== BankTransferGetRequest.cs
==================================================

public class BankTransferGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>Plaid’s unique identifier for a bank transfer.</summary>
	[JsonPropertyName("bank_transfer_id")]
	public BankTransferID bank_transfer_id { get; set; }

}


== TransferGetRequest.cs
==================================================

public class TransferGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>Plaid’s unique identifier for a transfer.</summary>
	[JsonPropertyName("transfer_id")]
	public TransferID transfer_id { get; set; }

}


== AssetReportAuditCopyGetRequest.cs
==================================================

public class AssetReportAuditCopyGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The `audit_copy_token` granting access to the Audit Copy you would like to get.</summary>
	[JsonPropertyName("audit_copy_token")]
	public string audit_copy_token { get; set; }

}


== DepositSwitchStateUpdateWebhook.cs
==================================================

********************* ERRORS *********************

[CS1044] Line 12: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 12: ; expected
[CS1519] Line 12: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 12: Invalid token ',' in class, record, struct, or interface member declaration
[CS1002] Line 12: ; expected
[CS1519] Line 12: Invalid token 'switch' in class, record, struct, or interface member declaration
[CS1519] Line 12: Invalid token 'switch' in class, record, struct, or interface member declaration
[CS1056] Line 14: Unexpected character '`'
[CS1519] Line 14: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 14: Unexpected character '`'
[CS1519] Line 14: Invalid token '`' in class, record, struct, or interface member declaration
[CS1003] Line 14: Syntax error, ',' expected
[CS1002] Line 14: ; expected
[CS1002] Line 14: ; expected
[CS1002] Line 14: ; expected
[CS1002] Line 14: ; expected
[CS1002] Line 14: ; expected
[CS1002] Line 14: ; expected
[CS1002] Line 14: ; expected
[CS1003] Line 14: Syntax error, ',' expected
[CS1002] Line 14: ; expected
[CS1001] Line 14: Identifier expected
[CS1056] Line 16: Unexpected character '`'
[CS1519] Line 16: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 16: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 16: Unexpected character '`'
[CS1519] Line 16: Invalid token '`' in class, record, struct, or interface member declaration
[CS1003] Line 16: Syntax error, ',' expected
[CS1002] Line 16: ; expected
[CS1002] Line 16: ; expected
[CS1002] Line 16: ; expected
[CS1519] Line 16: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 16: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1001] Line 16: Identifier expected
[CS1003] Line 16: Syntax error, '(' expected
[CS1056] Line 18: Unexpected character '`'
[CS1001] Line 18: Identifier expected
[CS1056] Line 18: Unexpected character '`'
[CS1003] Line 18: Syntax error, ',' expected
[CS1010] Line 18: Newline in constant
[CS1012] Line 18: Too many characters in character literal
[CS1056] Line 20: Unexpected character '`'
[CS1003] Line 20: Syntax error, ',' expected
[CS1001] Line 20: Identifier expected
[CS1056] Line 20: Unexpected character '`'
[CS1003] Line 20: Syntax error, ',' expected
[CS1003] Line 20: Syntax error, ',' expected
[CS1003] Line 20: Syntax error, ',' expected
[CS1003] Line 20: Syntax error, ',' expected
[CS1001] Line 20: Identifier expected
[CS1003] Line 20: Syntax error, ',' expected
[CS1003] Line 20: Syntax error, ',' expected
[CS1003] Line 22: Syntax error, ',' expected
[CS1001] Line 22: Identifier expected
[CS1003] Line 22: Syntax error, ',' expected
[CS1003] Line 22: Syntax error, ',' expected
[CS1003] Line 22: Syntax error, ',' expected
[CS1003] Line 22: Syntax error, ',' expected
[CS1031] Line 22: Type expected
[CS8124] Line 22: Tuple must contain at least two elements.
[CS1026] Line 22: ) expected
[CS1001] Line 22: Identifier expected
[CS1003] Line 22: Syntax error, ',' expected
[CS1003] Line 22: Syntax error, ',' expected
[CS1001] Line 22: Identifier expected
[CS1003] Line 22: Syntax error, ',' expected
[CS1003] Line 22: Syntax error, ',' expected
[CS1001] Line 22: Identifier expected
[CS1003] Line 22: Syntax error, ',' expected
[CS1003] Line 22: Syntax error, ',' expected
[CS1040] Line 22: Preprocessor directives must appear as the first non-whitespace character on a line
[CS1001] Line 23: Identifier expected
[CS1026] Line 23: ) expected
[CS1002] Line 23: ; expected

**************************************************


public class DepositSwitchStateUpdateWebhook
{
	/// <summary>`"DEPOSIT_SWITCH"`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`"SWITCH_STATE_UPDATE"`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>
The state, or status, of the deposit switch.

`initialized`: The deposit switch has been initialized with the user entering the information required to submit the deposit switch request.

`processing`: The deposit switch request has been submitted and is being processed.

`completed`: The user's employer has fulfilled and completed the deposit switch request.

`error`: There was an error processing the deposit switch request.

For more information, see the [Deposit Switch API reference](/docs/api/products#deposit_switchget).</summary>
	[JsonPropertyName("state")]
	public string state { get; set; }

	/// <summary>The ID of the deposit switch.</summary>
	[JsonPropertyName("deposit_switch_id")]
	public string deposit_switch_id { get; set; }

}


== DepositSwitchGetResponse.cs
==================================================

********************* ERRORS *********************

[CS1044] Line 16: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 16: ; expected
[CS1519] Line 16: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 16: Invalid token ',' in class, record, struct, or interface member declaration
[CS1002] Line 16: ; expected
[CS1519] Line 16: Invalid token 'switch' in class, record, struct, or interface member declaration
[CS1519] Line 16: Invalid token 'switch' in class, record, struct, or interface member declaration
[CS1056] Line 18: Unexpected character '`'
[CS1519] Line 18: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 18: Unexpected character '`'
[CS1519] Line 18: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 18: Unexpected character '–'
[CS1003] Line 18: Syntax error, ',' expected
[CS1002] Line 18: ; expected
[CS1002] Line 18: ; expected
[CS1002] Line 18: ; expected
[CS1002] Line 18: ; expected
[CS1002] Line 18: ; expected
[CS1002] Line 18: ; expected
[CS1002] Line 18: ; expected
[CS1003] Line 18: Syntax error, ',' expected
[CS1002] Line 18: ; expected
[CS1001] Line 18: Identifier expected
[CS1519] Line 20: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 20: Unexpected character '`'
[CS1519] Line 20: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 20: Unexpected character '`'
[CS1519] Line 20: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 20: Unexpected character '–'
[CS1003] Line 20: Syntax error, ',' expected
[CS1002] Line 20: ; expected
[CS1002] Line 20: ; expected
[CS1002] Line 20: ; expected
[CS1519] Line 20: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 20: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1001] Line 20: Identifier expected
[CS1003] Line 20: Syntax error, '(' expected
[CS1001] Line 20: Identifier expected
[CS1056] Line 22: Unexpected character '`'
[CS1001] Line 22: Identifier expected
[CS1056] Line 22: Unexpected character '`'
[CS1056] Line 22: Unexpected character '–'
[CS1003] Line 22: Syntax error, ',' expected
[CS1010] Line 22: Newline in constant
[CS1012] Line 22: Too many characters in character literal
[CS1056] Line 24: Unexpected character '`'
[CS1003] Line 24: Syntax error, ',' expected
[CS1001] Line 24: Identifier expected
[CS1056] Line 24: Unexpected character '`'
[CS1056] Line 24: Unexpected character '–'
[CS1003] Line 24: Syntax error, ',' expected
[CS1003] Line 24: Syntax error, ',' expected
[CS1003] Line 24: Syntax error, ',' expected
[CS1003] Line 24: Syntax error, ',' expected
[CS1001] Line 24: Identifier expected
[CS1003] Line 24: Syntax error, ',' expected
[CS1003] Line 24: Syntax error, ',' expected
[CS1001] Line 24: Identifier expected
[CS1001] Line 24: Identifier expected
[CS1003] Line 24: Syntax error, ',' expected
[CS1003] Line 24: Syntax error, ',' expected
[CS1001] Line 24: Identifier expected
[CS1003] Line 24: Syntax error, ',' expected
[CS1003] Line 24: Syntax error, ',' expected
[CS1031] Line 25: Type expected
[CS1001] Line 25: Identifier expected
[CS1026] Line 25: ) expected
[CS1002] Line 25: ; expected
[CS1519] Line 30: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 30: Unexpected character '`'
[CS1519] Line 30: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 30: Unexpected character '`'
[CS1519] Line 30: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 30: Unexpected character '–'
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1001] Line 30: Identifier expected
[CS1519] Line 32: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 32: Unexpected character '`'
[CS1519] Line 32: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 32: Unexpected character '`'
[CS1519] Line 32: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 32: Unexpected character '–'
[CS1002] Line 32: ; expected
[CS1002] Line 32: ; expected
[CS1002] Line 32: ; expected
[CS1002] Line 32: ; expected
[CS1002] Line 32: ; expected
[CS1002] Line 32: ; expected
[CS1003] Line 32: Syntax error, ',' expected
[CS1056] Line 34: Unexpected character '`'
[CS1002] Line 34: ; expected
[CS1519] Line 34: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 34: Unexpected character '`'
[CS1519] Line 34: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 34: Unexpected character '–'
[CS1002] Line 34: ; expected
[CS1002] Line 34: ; expected
[CS1002] Line 34: ; expected
[CS1002] Line 34: ; expected
[CS1002] Line 34: ; expected
[CS1002] Line 34: ; expected
[CS1002] Line 34: ; expected
[CS1002] Line 34: ; expected
[CS1002] Line 34: ; expected
[CS1003] Line 34: Syntax error, ',' expected
[CS1010] Line 34: Newline in constant
[CS1012] Line 34: Too many characters in character literal
[CS1002] Line 34: ; expected
[CS1519] Line 71: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 71: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 71: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 76: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 76: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 76: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class DepositSwitchGetResponse
{
	/// <summary>The ID of the deposit switch.</summary>
	[JsonPropertyName("deposit_switch_id")]
	public string deposit_switch_id { get; set; }

	/// <summary>The ID of the bank account the direct deposit was switched to.</summary>
	[JsonPropertyName("target_account_id")]
	public string target_account_id { get; set; }

	/// <summary>The ID of the Item the direct deposit was switched to.</summary>
	[JsonPropertyName("target_item_id")]
	public string target_item_id { get; set; }

	/// <summary>
The state, or status, of the deposit switch.

- `initialized` – The deposit switch has been initialized with the user entering the information required to submit the deposit switch request.

- `processing` – The deposit switch request has been submitted and is being processed.

- `completed` – The user's employer has fulfilled the deposit switch request.

- `error` – There was an error processing the deposit switch request.</summary>
	[JsonPropertyName("state")]
	public string state { get; set; }

	/// <summary>The method used to make the deposit switch.

- `instant` – User instantly switched their direct deposit to a new or existing bank account by connecting their payroll or employer account.

- `mail` – User requested that Plaid contact their employer by mail to make the direct deposit switch.

- `pdf` – User generated a PDF or email to be sent to their employer with the information necessary to make the deposit switch.'</summary>
	[JsonPropertyName("switch_method")]
	public string switch_method { get; set; }

	/// <summary>When `true`, user’s direct deposit goes to multiple banks. When false, user’s direct deposit only goes to the target account. Always `null` if the deposit switch has not been completed.</summary>
	[JsonPropertyName("account_has_multiple_allocations")]
	public bool account_has_multiple_allocations { get; set; }

	/// <summary>When `true`, the target account is allocated the remainder of direct deposit after all other allocations have been deducted. When `false`, user’s direct deposit is allocated as a percent or amount. Always `null` if the deposit switch has not been completed.</summary>
	[JsonPropertyName("is_allocated_remainder")]
	public bool is_allocated_remainder { get; set; }

	/// <summary>The percentage of direct deposit allocated to the target account. Always `null` if the target account is not allocated a percentage or if the deposit switch has not been completed or if `is_allocated_remainder` is true.</summary>
	[JsonPropertyName("percent_allocated")]
	public string percent_allocated { get; set; }

	/// <summary>The dollar amount of direct deposit allocated to the target account. Always `null` if the target account is not allocated an amount or if the deposit switch has not been completed.</summary>
	[JsonPropertyName("amount_allocated")]
	public string amount_allocated { get; set; }

	/// <summary>The name of the employer selected by the user. If the user did not select an employer, the value returned is `null`.</summary>
	[JsonPropertyName("employer_name")]
	public string employer_name { get; set; }

	/// <summary>The ID of the employer selected by the user. If the user did not select an employer, the value returned is `null`.</summary>
	[JsonPropertyName("employer_id")]
	public string employer_id { get; set; }

	/// <summary>The name of the institution selected by the user. If the user did not select an institution, the value returned is `null`.</summary>
	[JsonPropertyName("institution_name")]
	public string institution_name { get; set; }

	/// <summary>The ID of the institution selected by the user. If the user did not select an institution, the value returned is `null`.</summary>
	[JsonPropertyName("institution_id")]
	public string institution_id { get; set; }

	/// <summary>[ISO 8601](https://wikipedia.org/wiki/ISO_8601) date the deposit switch was created.
</summary>
	[JsonPropertyName("date_created")]
	public string date_created { get; set; }

	/// <summary>[ISO 8601](https://wikipedia.org/wiki/ISO_8601) date the deposit switch was completed. Always `null` if the deposit switch has not been completed.
</summary>
	[JsonPropertyName("date_completed")]
	public string date_completed { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== DepositSwitchGetRequest.cs
==================================================

public class DepositSwitchGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The ID of the deposit switch</summary>
	[JsonPropertyName("deposit_switch_id")]
	public string deposit_switch_id { get; set; }

}


== UserPermissionRevokedWebhook.cs
==================================================

public class UserPermissionRevokedWebhook
{
	/// <summary>`ITEM`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`USER_PERMISSION_REVOKED`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

}


== StandaloneInvestmentTransactionType.cs
==================================================

public class StandaloneInvestmentTransactionType
{
	/// <summary>Buying an investment</summary>
	[JsonPropertyName("buy")]
	public StandaloneInvestmentTransactionBuyType buy { get; set; }

	/// <summary>Selling an investment</summary>
	[JsonPropertyName("sell")]
	public StandaloneInvestmentTransactionSellType sell { get; set; }

	/// <summary>A cancellation of a pending transaction</summary>
	[JsonPropertyName("cancel")]
	public string cancel { get; set; }

	/// <summary>Activity that modifies a cash position</summary>
	[JsonPropertyName("cash")]
	public StandaloneInvestmentTransactionCashType cash { get; set; }

	/// <summary>Fees on the account, e.g. commission, bookkeeping, options-related.</summary>
	[JsonPropertyName("fee")]
	public StandaloneInvestmentTransactionFeeType fee { get; set; }

	/// <summary>Activity that modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer</summary>
	[JsonPropertyName("transfer")]
	public StandaloneInvestmentTransactionTransferType transfer { get; set; }

}


== InvestmentTransaction.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 44: Unexpected character '`'
[CS1519] Line 44: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 44: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 44: Unexpected character '`'
[CS1519] Line 44: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 44: ; expected
[CS1519] Line 45: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 45: Unexpected character '`'
[CS1519] Line 45: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 45: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 45: Unexpected character '`'
[CS1519] Line 45: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 45: ; expected
[CS1519] Line 46: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 46: Unexpected character '`'
[CS1519] Line 46: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 46: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 46: Unexpected character '`'
[CS1519] Line 46: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 46: ; expected
[CS1002] Line 46: ; expected
[CS1056] Line 47: Unexpected character '`'
[CS1002] Line 47: ; expected
[CS1519] Line 47: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 47: Unexpected character '`'
[CS1519] Line 47: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 47: ; expected
[CS1002] Line 47: ; expected
[CS1056] Line 48: Unexpected character '`'
[CS1002] Line 48: ; expected
[CS1519] Line 48: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 48: Unexpected character '`'
[CS1519] Line 48: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 48: ; expected
[CS1002] Line 48: ; expected
[CS1519] Line 49: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 49: Unexpected character '`'
[CS1519] Line 49: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 49: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 49: Unexpected character '`'
[CS1519] Line 49: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 49: ; expected
[CS1002] Line 49: ; expected
[CS1519] Line 49: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 49: Invalid token ',' in class, record, struct, or interface member declaration
[CS1002] Line 49: ; expected
[CS1003] Line 49: Syntax error, ',' expected
[CS1002] Line 49: ; expected
[CS1002] Line 49: ; expected
[CS1044] Line 49: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 49: ; expected
[CS1002] Line 51: ; expected
[CS1002] Line 51: ; expected
[CS1002] Line 51: ; expected
[CS1002] Line 51: ; expected
[CS1519] Line 51: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 51: Invalid token ',' in class, record, struct, or interface member declaration
[CS0650] Line 51: Bad array declarator: To declare a managed array the rank specifier precedes the variable's identifier. To declare a fixed size buffer field, use the fixed keyword before the field type.
[CS0270] Line 51: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 51: Syntax error, ',' expected
[CS0270] Line 51: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 51: Syntax error, ',' expected
[CS0270] Line 51: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 51: Syntax error, ',' expected
[CS0270] Line 51: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1002] Line 51: ; expected
[CS8124] Line 51: Tuple must contain at least two elements.
[CS1026] Line 51: ) expected
[CS1519] Line 51: Invalid token ':' in class, record, struct, or interface member declaration
[CS0650] Line 65: Bad array declarator: To declare a managed array the rank specifier precedes the variable's identifier. To declare a fixed size buffer field, use the fixed keyword before the field type.
[CS0270] Line 65: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 65: Syntax error, ',' expected
[CS0270] Line 65: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 65: Syntax error, ',' expected
[CS0270] Line 65: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1002] Line 65: ; expected
[CS8124] Line 65: Tuple must contain at least two elements.
[CS1026] Line 65: ) expected
[CS1519] Line 65: Invalid token ':' in class, record, struct, or interface member declaration

**************************************************


public class InvestmentTransaction
{
	/// <summary>The ID of the Investment transaction, unique across all Plaid transactions. Like all Plaid identifiers, the `investment_transaction_id` is case sensitive.</summary>
	[JsonPropertyName("investment_transaction_id")]
	public string investment_transaction_id { get; set; }

	/// <summary>A legacy field formerly used internally by Plaid to identify certain canceled transactions.</summary>
	[JsonPropertyName("cancel_transaction_id")]
	public string cancel_transaction_id { get; set; }

	/// <summary>The `account_id` of the account against which this transaction posted.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The `security_id` to which this transaction is related.</summary>
	[JsonPropertyName("security_id")]
	public string security_id { get; set; }

	/// <summary>The [ISO 8601](https://wikipedia.org/wiki/ISO_8601) posting date for the transaction, or transacted date for pending transactions.</summary>
	[JsonPropertyName("date")]
	public string date { get; set; }

	/// <summary>The institution’s description of the transaction.</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	/// <summary>The number of units of the security involved in this transaction.</summary>
	[JsonPropertyName("quantity")]
	public string quantity { get; set; }

	/// <summary>The complete value of the transaction. Positive values when cash is debited, e.g. purchases of stock; negative values when cash is credited, e.g. sales of stock. Treatment remains the same for cash-only movements unassociated with securities.</summary>
	[JsonPropertyName("amount")]
	public string amount { get; set; }

	/// <summary>The price of the security at which this transaction occurred.</summary>
	[JsonPropertyName("price")]
	public string price { get; set; }

	/// <summary>The combined value of all fees applied to this transaction</summary>
	[JsonPropertyName("fees")]
	public string fees { get; set; }

	/// <summary>Value is one of the following:
`buy`: Buying an investment
`sell`: Selling an investment
`cancel`: A cancellation of a pending transaction
`cash`: Activity that modifies a cash position
`fee`: A fee on the account
`transfer`: Activity which modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer

For descriptions of possible transaction types and subtypes, see the [Investment transaction types schema](https://plaid.com/docs/api/accounts/#investment-transaction-types-schema).</summary>
	[JsonPropertyName("type")]
	public string type { get; set; }

	/// <summary>For descriptions of possible transaction types and subtypes, see the [Investment transaction types schema](https://plaid.com/docs/api/accounts/#investment-transaction-types-schema).</summary>
	[JsonPropertyName("subtype")]
	public string subtype { get; set; }

	/// <summary>The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-`null`.</summary>
	[JsonPropertyName("iso_currency_code")]
	public string iso_currency_code { get; set; }

	/// <summary>The unofficial currency code associated with the holding. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.</summary>
	[JsonPropertyName("unofficial_currency_code")]
	public string unofficial_currency_code { get; set; }

}


== Security.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 45: Unexpected character '`'
[CS1519] Line 45: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 45: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 45: Unexpected character '`'
[CS1519] Line 45: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 45: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 45: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 45: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 45: Invalid token ',' in class, record, struct, or interface member declaration
[CS1002] Line 45: ; expected
[CS1056] Line 47: Unexpected character '`'
[CS1002] Line 47: ; expected
[CS1519] Line 47: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 47: Unexpected character '`'
[CS1519] Line 47: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 47: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 47: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 47: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 47: Invalid token ',' in class, record, struct, or interface member declaration
[CS1002] Line 47: ; expected
[CS1056] Line 49: Unexpected character '`'
[CS1002] Line 49: ; expected
[CS1519] Line 49: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 49: Unexpected character '`'
[CS1519] Line 49: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 49: ; expected
[CS1056] Line 51: Unexpected character '`'
[CS1002] Line 51: ; expected
[CS1519] Line 51: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 51: Unexpected character '`'
[CS1519] Line 51: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 51: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 51: Invalid token '-' in class, record, struct, or interface member declaration
[CS1003] Line 51: Syntax error, ',' expected
[CS1002] Line 51: ; expected
[CS1002] Line 51: ; expected
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 53: Unexpected character '`'
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1001] Line 53: Identifier expected
[CS1003] Line 53: Syntax error, '[' expected
[CS1056] Line 53: Unexpected character '`'
[CS1003] Line 53: Syntax error, ',' expected
[CS1003] Line 53: Syntax error, ',' expected
[CS1003] Line 53: Syntax error, ',' expected
[CS1003] Line 53: Syntax error, ',' expected
[CS1003] Line 53: Syntax error, ',' expected
[CS1056] Line 55: Unexpected character '`'
[CS1003] Line 55: Syntax error, ',' expected
[CS1056] Line 55: Unexpected character '`'
[CS1003] Line 55: Syntax error, ',' expected
[CS1003] Line 55: Syntax error, ',' expected
[CS1003] Line 55: Syntax error, ',' expected
[CS1001] Line 55: Identifier expected
[CS1003] Line 55: Syntax error, ',' expected
[CS1056] Line 57: Unexpected character '`'
[CS1003] Line 57: Syntax error, ',' expected
[CS1003] Line 57: Syntax error, ',' expected
[CS1056] Line 57: Unexpected character '`'
[CS1003] Line 57: Syntax error, ',' expected
[CS1003] Line 57: Syntax error, ',' expected
[CS1003] Line 57: Syntax error, ',' expected
[CS1003] Line 57: Syntax error, ',' expected
[CS1003] Line 57: Syntax error, ',' expected
[CS1003] Line 57: Syntax error, ',' expected
[CS1003] Line 57: Syntax error, ',' expected
[CS1001] Line 57: Identifier expected
[CS1003] Line 57: Syntax error, ',' expected
[CS1056] Line 59: Unexpected character '`'
[CS1003] Line 59: Syntax error, ',' expected
[CS1056] Line 59: Unexpected character '`'
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1525] Line 59: Invalid expression term '/'
[CS1525] Line 59: Invalid expression term '['
[CS1003] Line 60: Syntax error, ',' expected
[CS0443] Line 61: Syntax error; value expected
[CS1003] Line 60: Syntax error, ']' expected
[CS1002] Line 60: ; expected
[CS0650] Line 77: Bad array declarator: To declare a managed array the rank specifier precedes the variable's identifier. To declare a fixed size buffer field, use the fixed keyword before the field type.
[CS0270] Line 77: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 77: Syntax error, ',' expected
[CS0270] Line 77: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 77: Syntax error, ',' expected
[CS0270] Line 77: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1002] Line 77: ; expected
[CS8124] Line 77: Tuple must contain at least two elements.
[CS1026] Line 77: ) expected
[CS1519] Line 77: Invalid token ':' in class, record, struct, or interface member declaration

**************************************************


public class Security
{
	/// <summary>A unique, Plaid-specific identifier for the security, used to associate securities with holdings. Like all Plaid identifiers, the `security_id` is case sensitive.</summary>
	[JsonPropertyName("security_id")]
	public string security_id { get; set; }

	/// <summary>12-character ISIN, a globally unique securities identifier.</summary>
	[JsonPropertyName("isin")]
	public string isin { get; set; }

	/// <summary>9-character CUSIP, an identifier assigned to North American securities.</summary>
	[JsonPropertyName("cusip")]
	public string cusip { get; set; }

	/// <summary>7-character SEDOL, an identifier assigned to securities in the UK.</summary>
	[JsonPropertyName("sedol")]
	public string sedol { get; set; }

	/// <summary>An identifier given to the security by the institution</summary>
	[JsonPropertyName("institution_security_id")]
	public string institution_security_id { get; set; }

	/// <summary>If `institution_security_id` is present, this field indicates the Plaid `institution_id` of the institution to whom the identifier belongs.</summary>
	[JsonPropertyName("institution_id")]
	public string institution_id { get; set; }

	/// <summary>In certain cases, Plaid will provide the ID of another security whose performance resembles this security, typically when the original security has low volume, or when a private security can be modeled with a publicly traded security.</summary>
	[JsonPropertyName("proxy_security_id")]
	public string proxy_security_id { get; set; }

	/// <summary>A descriptive name for the security, suitable for display.</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	/// <summary>The security’s trading symbol for publicly traded securities, and otherwise a short identifier if available.</summary>
	[JsonPropertyName("ticker_symbol")]
	public string ticker_symbol { get; set; }

	/// <summary>Indicates that a security is a highly liquid asset and can be treated like cash.</summary>
	[JsonPropertyName("is_cash_equivalent")]
	public bool is_cash_equivalent { get; set; }

	/// <summary>The security type of the holding. Valid security types are:

`cash`: Cash, currency, and money market funds

`derivative`: Options, warrants, and other derivative instruments

`equity`: Domestic and foreign equities

`etf`: Multi-asset exchange-traded investment funds

`fixed income`: Bonds and certificates of deposit (CDs)

`loan`: Loans and loan receivables.

`mutual fund`: Open- and closed-end vehicles pooling funds of multiple investors.

`other`: Unknown or other investment types</summary>
	[JsonPropertyName("type")]
	public string type { get; set; }

	/// <summary>Price of the security at the close of the previous trading session. `null` for non-public securities. If the security is a foreign currency or a cryptocurrency this field will be updated daily and will be priced in USD.</summary>
	[JsonPropertyName("close_price")]
	public string close_price { get; set; }

	/// <summary>Date for which `close_price` is accurate. Always `null` if `close_price` is `null`.</summary>
	[JsonPropertyName("close_price_as_of")]
	public string close_price_as_of { get; set; }

	/// <summary>The ISO-4217 currency code of the price given. Always `null` if `unofficial_currency_code` is non-`null`.</summary>
	[JsonPropertyName("iso_currency_code")]
	public string iso_currency_code { get; set; }

	/// <summary>The unofficial currency code associated with the security. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.</summary>
	[JsonPropertyName("unofficial_currency_code")]
	public string unofficial_currency_code { get; set; }

}


== Holding.cs
==================================================

********************* ERRORS *********************

[CS0650] Line 37: Bad array declarator: To declare a managed array the rank specifier precedes the variable's identifier. To declare a fixed size buffer field, use the fixed keyword before the field type.
[CS0270] Line 37: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 37: Syntax error, ',' expected
[CS0270] Line 37: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 37: Syntax error, ',' expected
[CS0270] Line 37: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1002] Line 37: ; expected
[CS8124] Line 37: Tuple must contain at least two elements.
[CS1026] Line 37: ) expected
[CS1519] Line 37: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class Holding
{
	/// <summary>The Plaid `account_id` associated with the holding.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The Plaid `security_id` associated with the holding.</summary>
	[JsonPropertyName("security_id")]
	public string security_id { get; set; }

	/// <summary>The last price given by the institution for this security.</summary>
	[JsonPropertyName("institution_price")]
	public string institution_price { get; set; }

	/// <summary>The date at which `institution_price` was current.</summary>
	[JsonPropertyName("institution_price_as_of")]
	public string institution_price_as_of { get; set; }

	/// <summary>The value of the holding, as reported by the institution.</summary>
	[JsonPropertyName("institution_value")]
	public string institution_value { get; set; }

	/// <summary>The cost basis of the holding.</summary>
	[JsonPropertyName("cost_basis")]
	public string cost_basis { get; set; }

	/// <summary>The total quantity of the asset held, as reported by the financial institution. If the security is an option, `quantity` will reflect the total number of options (typically the number of contracts multiplied by 100), not the number of contracts.</summary>
	[JsonPropertyName("quantity")]
	public string quantity { get; set; }

	/// <summary>The ISO-4217 currency code of the holding. Always `null` if `unofficial_currency_code` is non-`null`.</summary>
	[JsonPropertyName("iso_currency_code")]
	public string iso_currency_code { get; set; }

	/// <summary>The unofficial currency code associated with the holding. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
</summary>
	[JsonPropertyName("unofficial_currency_code")]
	public string unofficial_currency_code { get; set; }

}


== PaymentStatusUpdateWebhook.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1003] Line 17: Syntax error, '(' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1001] Line 17: Identifier expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1001] Line 17: Identifier expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1001] Line 17: Identifier expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1001] Line 17: Identifier expected
[CS1001] Line 17: Identifier expected
[CS1056] Line 19: Unexpected character '`'
[CS1003] Line 19: Syntax error, ',' expected
[CS1001] Line 19: Identifier expected
[CS1056] Line 19: Unexpected character '`'
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1001] Line 19: Identifier expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1001] Line 19: Identifier expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1001] Line 19: Identifier expected
[CS1001] Line 19: Identifier expected
[CS1056] Line 21: Unexpected character '`'
[CS1003] Line 21: Syntax error, ',' expected
[CS1001] Line 21: Identifier expected
[CS1056] Line 21: Unexpected character '`'
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1001] Line 21: Identifier expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1056] Line 23: Unexpected character '`'
[CS1003] Line 23: Syntax error, ',' expected
[CS1001] Line 23: Identifier expected
[CS1056] Line 23: Unexpected character '`'
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1056] Line 25: Unexpected character '`'
[CS1003] Line 25: Syntax error, ',' expected
[CS1001] Line 25: Identifier expected
[CS1056] Line 25: Unexpected character '`'
[CS1003] Line 25: Syntax error, ',' expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1056] Line 27: Unexpected character '`'
[CS1003] Line 27: Syntax error, ',' expected
[CS1001] Line 27: Identifier expected
[CS1056] Line 27: Unexpected character '`'
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1001] Line 27: Identifier expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1001] Line 27: Identifier expected
[CS1001] Line 27: Identifier expected
[CS1056] Line 29: Unexpected character '`'
[CS1003] Line 29: Syntax error, ',' expected
[CS1001] Line 29: Identifier expected
[CS1056] Line 29: Unexpected character '`'
[CS1003] Line 29: Syntax error, ',' expected
[CS1003] Line 29: Syntax error, ',' expected
[CS1003] Line 29: Syntax error, ',' expected
[CS1001] Line 29: Identifier expected
[CS1003] Line 29: Syntax error, ',' expected
[CS1003] Line 29: Syntax error, ',' expected
[CS1003] Line 29: Syntax error, ',' expected
[CS1001] Line 29: Identifier expected
[CS1001] Line 29: Identifier expected
[CS1056] Line 31: Unexpected character '`'
[CS1003] Line 31: Syntax error, ',' expected
[CS1001] Line 31: Identifier expected
[CS1056] Line 31: Unexpected character '`'
[CS1003] Line 31: Syntax error, ',' expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1001] Line 31: Identifier expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1001] Line 31: Identifier expected
[CS1001] Line 31: Identifier expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1001] Line 31: Identifier expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1031] Line 32: Type expected
[CS1001] Line 32: Identifier expected
[CS1026] Line 32: ) expected
[CS1002] Line 32: ; expected
[CS1056] Line 37: Unexpected character '`'
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 37: Unexpected character '`'
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 37: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 37: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 37: ; expected
[CS1002] Line 37: ; expected
[CS1003] Line 37: Syntax error, '(' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1001] Line 37: Identifier expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1001] Line 37: Identifier expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1001] Line 37: Identifier expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1001] Line 37: Identifier expected
[CS1001] Line 37: Identifier expected
[CS1056] Line 39: Unexpected character '`'
[CS1003] Line 39: Syntax error, ',' expected
[CS1001] Line 39: Identifier expected
[CS1056] Line 39: Unexpected character '`'
[CS1003] Line 39: Syntax error, ',' expected
[CS1003] Line 39: Syntax error, ',' expected
[CS1003] Line 39: Syntax error, ',' expected
[CS1003] Line 39: Syntax error, ',' expected
[CS1003] Line 39: Syntax error, ',' expected
[CS1003] Line 39: Syntax error, ',' expected
[CS1001] Line 39: Identifier expected
[CS1003] Line 39: Syntax error, ',' expected
[CS1003] Line 39: Syntax error, ',' expected
[CS1001] Line 39: Identifier expected
[CS1003] Line 39: Syntax error, ',' expected
[CS1003] Line 39: Syntax error, ',' expected
[CS1001] Line 39: Identifier expected
[CS1001] Line 39: Identifier expected
[CS1056] Line 41: Unexpected character '`'
[CS1003] Line 41: Syntax error, ',' expected
[CS1001] Line 41: Identifier expected
[CS1056] Line 41: Unexpected character '`'
[CS1003] Line 41: Syntax error, ',' expected
[CS1003] Line 41: Syntax error, ',' expected
[CS1003] Line 41: Syntax error, ',' expected
[CS1003] Line 41: Syntax error, ',' expected
[CS1001] Line 41: Identifier expected
[CS1003] Line 41: Syntax error, ',' expected
[CS1003] Line 41: Syntax error, ',' expected
[CS1003] Line 41: Syntax error, ',' expected
[CS1056] Line 43: Unexpected character '`'
[CS1003] Line 43: Syntax error, ',' expected
[CS1001] Line 43: Identifier expected
[CS1056] Line 43: Unexpected character '`'
[CS1003] Line 43: Syntax error, ',' expected
[CS1003] Line 43: Syntax error, ',' expected
[CS1003] Line 43: Syntax error, ',' expected
[CS1003] Line 43: Syntax error, ',' expected
[CS1003] Line 43: Syntax error, ',' expected
[CS1003] Line 43: Syntax error, ',' expected
[CS1003] Line 43: Syntax error, ',' expected
[CS1003] Line 43: Syntax error, ',' expected
[CS1003] Line 43: Syntax error, ',' expected
[CS1003] Line 43: Syntax error, ',' expected
[CS1056] Line 45: Unexpected character '`'
[CS1003] Line 45: Syntax error, ',' expected
[CS1001] Line 45: Identifier expected
[CS1056] Line 45: Unexpected character '`'
[CS1003] Line 45: Syntax error, ',' expected
[CS1003] Line 45: Syntax error, ',' expected
[CS1003] Line 45: Syntax error, ',' expected
[CS1003] Line 45: Syntax error, ',' expected
[CS1003] Line 45: Syntax error, ',' expected
[CS1056] Line 47: Unexpected character '`'
[CS1003] Line 47: Syntax error, ',' expected
[CS1001] Line 47: Identifier expected
[CS1056] Line 47: Unexpected character '`'
[CS1003] Line 47: Syntax error, ',' expected
[CS1003] Line 47: Syntax error, ',' expected
[CS1003] Line 47: Syntax error, ',' expected
[CS1003] Line 47: Syntax error, ',' expected
[CS1003] Line 47: Syntax error, ',' expected
[CS1003] Line 47: Syntax error, ',' expected
[CS1003] Line 47: Syntax error, ',' expected
[CS1003] Line 47: Syntax error, ',' expected
[CS1001] Line 47: Identifier expected
[CS1003] Line 47: Syntax error, ',' expected
[CS1003] Line 47: Syntax error, ',' expected
[CS1001] Line 47: Identifier expected
[CS1001] Line 47: Identifier expected
[CS1056] Line 49: Unexpected character '`'
[CS1003] Line 49: Syntax error, ',' expected
[CS1001] Line 49: Identifier expected
[CS1056] Line 49: Unexpected character '`'
[CS1003] Line 49: Syntax error, ',' expected
[CS1003] Line 49: Syntax error, ',' expected
[CS1003] Line 49: Syntax error, ',' expected
[CS1001] Line 49: Identifier expected
[CS1003] Line 49: Syntax error, ',' expected
[CS1003] Line 49: Syntax error, ',' expected
[CS1003] Line 49: Syntax error, ',' expected
[CS1001] Line 49: Identifier expected
[CS1001] Line 49: Identifier expected
[CS1056] Line 51: Unexpected character '`'
[CS1003] Line 51: Syntax error, ',' expected
[CS1001] Line 51: Identifier expected
[CS1056] Line 51: Unexpected character '`'
[CS1003] Line 51: Syntax error, ',' expected
[CS1003] Line 51: Syntax error, ',' expected
[CS1001] Line 51: Identifier expected
[CS1003] Line 51: Syntax error, ',' expected
[CS1003] Line 51: Syntax error, ',' expected
[CS1001] Line 51: Identifier expected
[CS1001] Line 51: Identifier expected
[CS1003] Line 51: Syntax error, ',' expected
[CS1003] Line 51: Syntax error, ',' expected
[CS1001] Line 51: Identifier expected
[CS1003] Line 51: Syntax error, ',' expected
[CS1003] Line 51: Syntax error, ',' expected
[CS1031] Line 52: Type expected
[CS1001] Line 52: Identifier expected
[CS1026] Line 52: ) expected
[CS1002] Line 52: ; expected

**************************************************


public class PaymentStatusUpdateWebhook
{
	/// <summary>`PAYMENT_INITIATION`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`PAYMENT_STATUS_UPDATE`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>The `payment_id` for the payment being updated</summary>
	[JsonPropertyName("payment_id")]
	public string payment_id { get; set; }

	/// <summary>The new status of the payment.

`PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.

`PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.

`PAYMENT_STATUS_INITIATED`: The payment has been successfully initiated and is considered complete.

`PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.

`PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.

`PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.

`PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.

`PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.</summary>
	[JsonPropertyName("new_payment_status")]
	public string new_payment_status { get; set; }

	/// <summary>The previous status of the payment.

`PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.

`PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.

`PAYMENT_STATUS_INITIATED`: The payment has been successfully initiated and is considered complete.

`PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.

`PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.

`PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.

`PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.

`PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.</summary>
	[JsonPropertyName("old_payment_status")]
	public string old_payment_status { get; set; }

	/// <summary>The original value of the reference when creating the payment.</summary>
	[JsonPropertyName("original_reference")]
	public string original_reference { get; set; }

	/// <summary>The value of the reference sent to the bank after adjustment to pass bank validation rules.</summary>
	[JsonPropertyName("adjusted_reference")]
	public string adjusted_reference { get; set; }

	/// <summary>The original value of the `start_date` provided during the creation of a standing order. If the payment is not a standing order, this field will be `null`.</summary>
	[JsonPropertyName("original_start_date")]
	public string original_start_date { get; set; }

	/// <summary>The start date sent to the bank after adjusting for holidays or weekends.  Will be provided in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). If the start date did not require adjustment, or if the payment is not a standing order, this field will be `null`.</summary>
	[JsonPropertyName("adjusted_start_date")]
	public string adjusted_start_date { get; set; }

	/// <summary>The timestamp of the update, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2017-09-14T14:42:19.350Z"`</summary>
	[JsonPropertyName("timestamp")]
	public DateTime timestamp { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

}


== AssetReportItem.cs
==================================================

public class AssetReportItem
{
	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

	/// <summary>The full financial institution name associated with the Item.</summary>
	[JsonPropertyName("institution_name")]
	public string institution_name { get; set; }

	/// <summary>The id of the financial institution associated with the Item.</summary>
	[JsonPropertyName("institution_id")]
	public string institution_id { get; set; }

	/// <summary>The date and time when this Item’s data was last retrieved from the financial institution, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.</summary>
	[JsonPropertyName("date_last_updated")]
	public DateTime date_last_updated { get; set; }

	/// <summary>Data about each of the accounts open on the Item.</summary>
	[JsonPropertyName("accounts")]
	public AccountAssets[] accounts { get; set; }

}


== AssetReport.cs
==================================================

public class AssetReport
{
	/// <summary>A unique ID identifying an Asset Report. Like all Plaid identifiers, this ID is case sensitive.</summary>
	[JsonPropertyName("asset_report_id")]
	public AssetReportId asset_report_id { get; set; }

	/// <summary>An identifier you determine and submit for the Asset Report.</summary>
	[JsonPropertyName("client_report_id")]
	public string client_report_id { get; set; }

	/// <summary>The date and time when the Asset Report was created, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (e.g. "2018-04-12T03:32:11Z").</summary>
	[JsonPropertyName("date_generated")]
	public DateTime date_generated { get; set; }

	/// <summary>The duration of transaction history you requested</summary>
	[JsonPropertyName("days_requested")]
	public string days_requested { get; set; }

	/// <summary>The user object allows you to provide additional information about the user to be appended to the Asset Report. All fields are optional. The `first_name`, `last_name`, and `ssn` fields are required if you would like the Report to be eligible for Fannie Mae’s Day 1 Certainty™ program.</summary>
	[JsonPropertyName("user")]
	public AssetReportUser user { get; set; }

	/// <summary>Data returned by Plaid about each of the Items included in the Asset Report.</summary>
	[JsonPropertyName("items")]
	public AssetReportItem[] items { get; set; }

}


== StandaloneAccountType.cs
==================================================

public class StandaloneAccountType
{
	/// <summary>An account type holding cash, in which funds are deposited. Supported products for `depository` accounts are: Auth, Balance, Transactions, Identity, Payment Initiation, and Assets.</summary>
	[JsonPropertyName("depository")]
	public DepositoryAccount depository { get; set; }

	/// <summary>A credit card type account. Supported products for `credit` accounts are: Balance, Transactions, Identity, and Liabilities.</summary>
	[JsonPropertyName("credit")]
	public CreditAccount credit { get; set; }

	/// <summary>A loan type account. Supported products for `loan` accounts are: Balance, Liabilities, and Transactions.</summary>
	[JsonPropertyName("loan")]
	public LoanAccount loan { get; set; }

	/// <summary>An investment account. Supported products for `investment` accounts are: Balance and Investments.</summary>
	[JsonPropertyName("investment")]
	public InvestmentAccountSubtype investment { get; set; }

	/// <summary>Other or unknown account type. Supported products for `other` accounts are: Balance, Transactions, Identity, and Assets.</summary>
	[JsonPropertyName("other")]
	public string other { get; set; }

}


== StandaloneCurrencyCodeList.cs
==================================================

public class StandaloneCurrencyCodeList
{
	/// <summary>Plaid supports all ISO 4217 currency codes.</summary>
	[JsonPropertyName("iso_currency_code")]
	public string iso_currency_code { get; set; }

	/// <summary>List of unofficial currency codes</summary>
	[JsonPropertyName("unofficial_currency_code")]
	public UnofficialCurrencyCodeList unofficial_currency_code { get; set; }

}


== AssetReportUser.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 21: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 21: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 21: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 21: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class AssetReportUser
{
	/// <summary>An identifier you determine and submit for the user.</summary>
	[JsonPropertyName("client_user_id")]
	public string client_user_id { get; set; }

	/// <summary>The user's first name. Required for the Fannie Mae Day 1 Certainty™ program.</summary>
	[JsonPropertyName("first_name")]
	public string first_name { get; set; }

	/// <summary>The user's middle name</summary>
	[JsonPropertyName("middle_name")]
	public string middle_name { get; set; }

	/// <summary>The user's last name.  Required for the Fannie Mae Day 1 Certainty™ program.</summary>
	[JsonPropertyName("last_name")]
	public string last_name { get; set; }

	/// <summary>The user's Social Security Number. Required for the Fannie Mae Day 1 Certainty™ program.

Format: "ddd-dd-dddd"</summary>
	[JsonPropertyName("ssn")]
	public string ssn { get; set; }

	/// <summary>The user's phone number, in E.164 format: +{countrycode}{number}. For example: "+14151234567". Phone numbers provided in other formats will be parsed on a best-effort basis.</summary>
	[JsonPropertyName("phone_number")]
	public string phone_number { get; set; }

	/// <summary>The user's email address.</summary>
	[JsonPropertyName("email")]
	public string email { get; set; }

}


== PaymentAmount.cs
==================================================

public class PaymentAmount
{
	/// <summary>The ISO-4217 currency code of the payment. For standing orders, `"GBP"` must be used.</summary>
	[JsonPropertyName("currency")]
	public string currency { get; set; }

	/// <summary>The amount of the payment. Must contain at most two digits of precision e.g. `1.23`. Minimum accepted value is `1`.</summary>
	[JsonPropertyName("value")]
	public string value { get; set; }

}


== Warning.cs
==================================================

public class Warning
{
	/// <summary>The warning type, which will always be `ASSET_REPORT_WARNING`</summary>
	[JsonPropertyName("warning_type")]
	public string warning_type { get; set; }

	/// <summary>The warning code identifies a specific kind of warning. Currently, the only possible warning code is `OWNERS_UNAVAILABLE`, which indicates that account-owner information is not available.</summary>
	[JsonPropertyName("warning_code")]
	public string warning_code { get; set; }

	/// <summary>An error object and associated `item_id` used to identify a specific Item and error when a batch operation operating on multiple Items has encountered an error in one of the Items.</summary>
	[JsonPropertyName("cause")]
	public Cause cause { get; set; }

}


== Cause.cs
==================================================

public class Cause
{
	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

}


== AssetsErrorWebhook.cs
==================================================

public class AssetsErrorWebhook
{
	/// <summary>`ASSETS`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`ERROR`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

	/// <summary>The ID associated with the Asset Report.</summary>
	[JsonPropertyName("asset_report_id")]
	public string asset_report_id { get; set; }

}


== AssetsProductReadyWebhook.cs
==================================================

public class AssetsProductReadyWebhook
{
	/// <summary>`ASSETS`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`PRODUCT_READY`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>The `asset_report_id` that can be provided to `/asset_report/get` to retrieve the Asset Report.</summary>
	[JsonPropertyName("asset_report_id")]
	public string asset_report_id { get; set; }

}


== LiabilitiesDefaultUpdateWebhook.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 25: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 25: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 25: Unexpected character '`'
[CS1001] Line 25: Identifier expected
[CS1001] Line 25: Identifier expected
[CS1056] Line 25: Unexpected character '`'
[CS8803] Line 26: Top-level statements must precede namespace and type declarations.
[CS1525] Line 25: Invalid expression term '<'
[CS1525] Line 26: Invalid expression term '/'
[CS1525] Line 26: Invalid expression term '['
[CS1002] Line 27: ; expected
[CS1022] Line 30: Type or namespace definition, or end-of-file expected

**************************************************


public class LiabilitiesDefaultUpdateWebhook
{
	/// <summary>`LIABILITIES`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`DEFAULT_UPDATE`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

	/// <summary>An array of `account_id`'s for accounts that contain new liabilities.</summary>
	[JsonPropertyName("account_ids_with_new_liabilities")]
	public string[] account_ids_with_new_liabilities { get; set; }

	/// <summary>An object with keys of `account_id`'s that are mapped to their respective liabilities fields that changed.

Example: `{ "XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58": ["past_amount_due"] }`
</summary>
	[JsonPropertyName("account_ids_with_updated_liabilities")]
	public string account_ids_with_updated_liabilities { get; set; }

}


== HoldingsDefaultUpdateWebhook.cs
==================================================

public class HoldingsDefaultUpdateWebhook
{
	/// <summary>`HOLDINGS`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`DEFAULT_UPDATE`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

	/// <summary>The number of new holdings reported since the last time this webhook was fired.</summary>
	[JsonPropertyName("new_holdings")]
	public string new_holdings { get; set; }

	/// <summary>The number of updated holdings reported since the last time this webhook was fired.</summary>
	[JsonPropertyName("updated_holdings")]
	public string updated_holdings { get; set; }

}


== InvestmentsDefaultUpdateWebhook.cs
==================================================

public class InvestmentsDefaultUpdateWebhook
{
	/// <summary>`INVESTMENTS_TRANSACTIONS`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`DEFAULT_UPDATE`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

	/// <summary>The number of new transactions reported since the last time this webhook was fired.</summary>
	[JsonPropertyName("new_investments_transactions")]
	public string new_investments_transactions { get; set; }

	/// <summary>The number of canceled transactions reported since the last time this webhook was fired.</summary>
	[JsonPropertyName("canceled_investments_transactions")]
	public string canceled_investments_transactions { get; set; }

}


== BankTransfersEventsUpdateWebhook.cs
==================================================

public class BankTransfersEventsUpdateWebhook
{
	/// <summary>`BANK_TRANSFERS`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`BANK_TRANSFERS_EVENTS_UPDATE`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

}


== Recaptcha_RequiredError.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 28: ; expected
[CS1002] Line 28: ; expected
[CS1002] Line 28: ; expected
[CS1519] Line 28: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token ',' in class, record, struct, or interface member declaration
[CS1002] Line 28: ; expected
[CS1002] Line 28: ; expected
[CS1002] Line 28: ; expected
[CS1002] Line 28: ; expected
[CS1519] Line 28: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 28: Unexpected character '`'
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 28: Unexpected character '`'
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 28: Unexpected character '`'
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 28: Unexpected character '`'
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class Recaptcha_RequiredError
{
	/// <summary>RECAPTCHA_ERROR</summary>
	[JsonPropertyName("error_type")]
	public string error_type { get; set; }

	/// <summary>RECAPTCHA_REQUIRED</summary>
	[JsonPropertyName("error_code")]
	public string error_code { get; set; }

	[JsonPropertyName("display_message")]
	public string display_message { get; set; }

	/// <summary>400</summary>
	[JsonPropertyName("http_code")]
	public string http_code { get; set; }

	/// <summary>Your user will be prompted to solve a Google reCAPTCHA challenge in the Link Recaptcha pane. If they solve the challenge successfully, the user's request is resubmitted and they are directed to the next Item creation step.</summary>
	[JsonPropertyName("link_user_experience")]
	public string link_user_experience { get; set; }

	/// <summary>Plaid's fraud system detects abusive traffic and considers a variety of parameters throughout Item creation requests. When a request is considered risky or possibly fraudulent, Link presents a reCAPTCHA for the user to solve.</summary>
	[JsonPropertyName("common_causes")]
	public string common_causes { get; set; }

	/// <summary>Link will automatically guide your user through reCAPTCHA verification. As a general rule, we recommend instrumenting basic fraud monitoring to detect and protect your website from spam and abuse.

If your user cannot verify their session, please submit a Support ticket with the following identifiers: `link_session_id` or `request_id`</summary>
	[JsonPropertyName("troubleshooting_steps")]
	public string troubleshooting_steps { get; set; }

}


== ItemProductReadyWebhook.cs
==================================================

public class ItemProductReadyWebhook
{
	/// <summary>`INCOME`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`PRODUCT_READY`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

}


== ItemErrorWebhook.cs
==================================================

public class ItemErrorWebhook
{
	/// <summary>`ITEM`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`ERROR`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

}


== PendingExpirationWebhook.cs
==================================================

public class PendingExpirationWebhook
{
	/// <summary>`ITEM`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`PENDING_EXPIRATION`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

	/// <summary>The date and time at which the Item's access consent will expire, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format</summary>
	[JsonPropertyName("consent_expiration_time")]
	public DateTime consent_expiration_time { get; set; }

}


== WebhookUpdateAcknowledgedWebhook.cs
==================================================

public class WebhookUpdateAcknowledgedWebhook
{
	/// <summary>`ITEM`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`WEBHOOK_UPDATE_ACKNOWLEDGED`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

	/// <summary>The new webhook URL</summary>
	[JsonPropertyName("new_webhook_url")]
	public string new_webhook_url { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

}


== VerificationExpiredWebhook.cs
==================================================

public class VerificationExpiredWebhook
{
	/// <summary>`AUTH`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`VERIFICATION_EXPIRED`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

	/// <summary>The `account_id` of the account associated with the webhook</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

}


== JWTHeader.cs
==================================================

public class JWTHeader
{
	[JsonPropertyName("id")]
	public string id { get; set; }

}


== AutomaticallyVerifiedWebhook.cs
==================================================

public class AutomaticallyVerifiedWebhook
{
	/// <summary>`AUTH`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`AUTOMATICALLY_VERIFIED`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>The `account_id` of the account associated with the webhook</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

}


== PaystubOverride.cs
==================================================

public class PaystubOverride
{
	/// <summary>The employer on the paystub.</summary>
	[JsonPropertyName("employer")]
	public string employer { get; set; }

	/// <summary>The employee on the paystub.</summary>
	[JsonPropertyName("employee")]
	public string employee { get; set; }

	[JsonPropertyName("income_breakdown")]
	public IncomeBreakdown[] income_breakdown { get; set; }

	/// <summary>Details about the pay period.</summary>
	[JsonPropertyName("pay_period_details")]
	public PayPeriodDetails pay_period_details { get; set; }

}


== IncomeOverride.cs
==================================================

public class IncomeOverride
{
	/// <summary>A list of paystubs associated with the account.</summary>
	[JsonPropertyName("paystubs")]
	public PaystubOverride[] paystubs { get; set; }

}


== InflowModel.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 6: Unexpected character '`'
[CS1002] Line 6: ; expected
[CS1519] Line 6: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 6: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 6: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 6: Unexpected character '`'
[CS1519] Line 6: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 6: ; expected
[CS1002] Line 6: ; expected
[CS1519] Line 6: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 6: Unexpected character '`'
[CS1519] Line 6: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 6: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 6: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 6: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 6: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 6: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 6: Unexpected character '`'
[CS1519] Line 6: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 6: ; expected
[CS1002] Line 6: ; expected
[CS1002] Line 6: ; expected
[CS1002] Line 6: ; expected
[CS1002] Line 6: ; expected
[CS1002] Line 6: ; expected
[CS1002] Line 6: ; expected
[CS1519] Line 7: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 7: Unexpected character '`'
[CS1519] Line 7: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 7: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 7: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 7: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 7: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 7: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 7: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 7: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 7: Unexpected character '`'
[CS1519] Line 7: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 7: ; expected
[CS1519] Line 7: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 7: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 7: ; expected
[CS1002] Line 7: ; expected
[CS1002] Line 7: ; expected
[CS1002] Line 7: ; expected
[CS1002] Line 7: ; expected
[CS1002] Line 7: ; expected
[CS1002] Line 7: ; expected
[CS1002] Line 7: ; expected
[CS1002] Line 7: ; expected
[CS1002] Line 7: ; expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1002] Line 7: ; expected
[CS1003] Line 7: Syntax error, '(' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1031] Line 8: Type expected
[CS1001] Line 8: Identifier expected
[CS1026] Line 8: ) expected
[CS1002] Line 8: ; expected

**************************************************


public class InflowModel
{
	/// <summary>Inflow model. One of the following:

`none`: No income
`monthly-income`: Income occurs once per month `monthly-balance-payment`: Pays off the balance on a liability account at the given statement day of month
`monthly-interest-only-payment`: Makes an interest-only payment on a liability account at the given statement day of month. Note that account types supported by Liabilities will accrue interest in the Sandbox. The types are account type `credit` with subtype `credit` or `paypal`, and account type `loan` with subtype `student` or `mortgage`.</summary>
	[JsonPropertyName("type")]
	public string type { get; set; }

	/// <summary>Amount of income per month. This value is required if `type` is `monthly-income`.</summary>
	[JsonPropertyName("income_amount")]
	public string income_amount { get; set; }

	/// <summary>Number between 1 and 28, or `last` meaning the last day of the month. The day of the month on which the income transaction will appear. The name of the income transaction. This field is required if `type` is `monthly-income`, `monthly-balance-payment` or `monthly-interest-only-payment`.</summary>
	[JsonPropertyName("payment_day_of_month")]
	public string payment_day_of_month { get; set; }

	/// <summary>The name of the income transaction. This field is required if `type` is `monthly-income`, `monthly-balance-payment` or `monthly-interest-only-payment`.</summary>
	[JsonPropertyName("transaction_name")]
	public string transaction_name { get; set; }

	/// <summary>Number between 1 and 28, or `last` meaning the last day of the month. The day of the month on which the balance is calculated for the next payment. The name of the income transaction. This field is required if `type` is `monthly-balance-payment` or `monthly-interest-only-payment`.</summary>
	[JsonPropertyName("statement_day_of_month")]
	public string statement_day_of_month { get; set; }

}


== StudentLoanRepaymentModel.cs
==================================================

public class StudentLoanRepaymentModel
{
	/// <summary>The only currently supported value for this field is `standard`.</summary>
	[JsonPropertyName("type")]
	public string type { get; set; }

	/// <summary>Configures the number of months before repayment starts.</summary>
	[JsonPropertyName("non_repayment_months")]
	public string non_repayment_months { get; set; }

	/// <summary>Configures the number of months of repayments before the loan is paid off.</summary>
	[JsonPropertyName("repayment_months")]
	public string repayment_months { get; set; }

}


== LiabilityOverride.cs
==================================================

public class LiabilityOverride
{
	/// <summary>The type of the liability object, either `credit` or `student`. Mortgages are not currently supported in the custom Sandbox.</summary>
	[JsonPropertyName("type")]
	public string type { get; set; }

	/// <summary>The purchase APR percentage value. For simplicity, this is the only interest rate used to calculate interest charges. Can only be set if `type` is `credit`.</summary>
	[JsonPropertyName("purchase_apr")]
	public string purchase_apr { get; set; }

	/// <summary>The cash APR percentage value. Can only be set if `type` is `credit`.</summary>
	[JsonPropertyName("cash_apr")]
	public string cash_apr { get; set; }

	/// <summary>The balance transfer APR percentage value. Can only be set if `type` is `credit`. Can only be set if `type` is `credit`.</summary>
	[JsonPropertyName("balance_transfer_apr")]
	public string balance_transfer_apr { get; set; }

	/// <summary>The special APR percentage value. Can only be set if `type` is `credit`.</summary>
	[JsonPropertyName("special_apr")]
	public string special_apr { get; set; }

	/// <summary>Override the `last_payment_amount` field. Can only be set if `type` is `credit`.</summary>
	[JsonPropertyName("last_payment_amount")]
	public string last_payment_amount { get; set; }

	/// <summary>Override the `minimum_payment_amount` field. Can only be set if `type` is `credit` or `student`.</summary>
	[JsonPropertyName("minimum_payment_amount")]
	public string minimum_payment_amount { get; set; }

	/// <summary>Override the `is_overdue` field</summary>
	[JsonPropertyName("is_overdue")]
	public bool is_overdue { get; set; }

	/// <summary>The date on which the loan was initially lent, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Can only be set if `type` is `student`.</summary>
	[JsonPropertyName("origination_date")]
	public string origination_date { get; set; }

	/// <summary>The original loan principal. Can only be set if `type` is `student`.</summary>
	[JsonPropertyName("principal")]
	public string principal { get; set; }

	/// <summary>The interest rate on the loan as a percentage. Can only be set if `type` is `student`.</summary>
	[JsonPropertyName("nominal_apr")]
	public string nominal_apr { get; set; }

	/// <summary>If set, interest capitalization begins at the given number of months after loan origination. By default interest is never capitalized. Can only be set if `type` is `student`.</summary>
	[JsonPropertyName("interest_capitalization_grace_period_months")]
	public string interest_capitalization_grace_period_months { get; set; }

	/// <summary>Student loan repayment information used to configure Sandbox test data for the Liabilities product</summary>
	[JsonPropertyName("repayment_model")]
	public StudentLoanRepaymentModel repayment_model { get; set; }

	/// <summary>Override the `expected_payoff_date` field. Can only be set if `type` is `student`.</summary>
	[JsonPropertyName("expected_payoff_date")]
	public string expected_payoff_date { get; set; }

	/// <summary>Override the `guarantor` field. Can only be set if `type` is `student`.</summary>
	[JsonPropertyName("guarantor")]
	public string guarantor { get; set; }

	/// <summary>Override the `is_federal` field. Can only be set if `type` is `student`.</summary>
	[JsonPropertyName("is_federal")]
	public bool is_federal { get; set; }

	/// <summary>Override the `loan_name` field. Can only be set if `type` is `student`.</summary>
	[JsonPropertyName("loan_name")]
	public string loan_name { get; set; }

	/// <summary>An object representing the status of the student loan</summary>
	[JsonPropertyName("loan_status")]
	public StudentLoanStatus loan_status { get; set; }

	/// <summary>Override the `payment_reference_number` field. Can only be set if `type` is `student`.</summary>
	[JsonPropertyName("payment_reference_number")]
	public string payment_reference_number { get; set; }

	/// <summary>Information about the student's eligibility in the Public Service Loan Forgiveness program. This is only returned if the institution is Fedloan (`ins_116527`). </summary>
	[JsonPropertyName("pslf_status")]
	public PSLFStatus pslf_status { get; set; }

	/// <summary>Override the `repayment_plan.description` field. Can only be set if `type` is `student`.</summary>
	[JsonPropertyName("repayment_plan_description")]
	public string repayment_plan_description { get; set; }

	/// <summary>Override the `repayment_plan.type` field. Can only be set if `type` is `student`. Possible values are: `"extended graduated"`, `"extended standard"`, `"graduated"`, `"income-contingent repayment"`, `"income-based repayment"`, `"interest only"`, `"other"`, `"pay as you earn"`, `"revised pay as you earn"`, or `"standard"`.</summary>
	[JsonPropertyName("repayment_plan_type")]
	public string repayment_plan_type { get; set; }

	/// <summary>Override the `sequence_number` field. Can only be set if `type` is `student`.</summary>
	[JsonPropertyName("sequence_number")]
	public string sequence_number { get; set; }

	/// <summary>A physical mailing address.</summary>
	[JsonPropertyName("servicer_address")]
	public Address servicer_address { get; set; }

}


== Investments_TransactionsOverride.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 24: Unexpected character '`'
[CS1519] Line 24: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 24: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 24: Unexpected character '`'
[CS1519] Line 24: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 24: ; expected
[CS1519] Line 25: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 25: Unexpected character '`'
[CS1519] Line 25: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 25: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 25: Unexpected character '`'
[CS1519] Line 25: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 25: ; expected
[CS1519] Line 26: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 26: Unexpected character '`'
[CS1519] Line 26: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 26: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 26: Unexpected character '`'
[CS1519] Line 26: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 26: ; expected
[CS1002] Line 26: ; expected
[CS1056] Line 27: Unexpected character '`'
[CS1002] Line 27: ; expected
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 27: ; expected
[CS1002] Line 27: ; expected
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 28: Unexpected character '`'
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 28: Unexpected character '`'
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 28: ; expected
[CS1002] Line 28: ; expected
[CS1519] Line 28: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token ',' in class, record, struct, or interface member declaration
[CS1002] Line 28: ; expected
[CS1003] Line 28: Syntax error, ',' expected
[CS1002] Line 28: ; expected
[CS1002] Line 28: ; expected
[CS1044] Line 28: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 28: ; expected
[CS1585] Line 30: Member modifier 'public' must precede the member type and name
[CS1031] Line 28: Type expected
[CS1003] Line 28: Syntax error, ',' expected
[CS1003] Line 28: Syntax error, ',' expected

**************************************************


public class Investments_TransactionsOverride
{
	/// <summary>Posting date for the transaction. Must be formatted as an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date.</summary>
	[JsonPropertyName("date")]
	public string date { get; set; }

	/// <summary>The institution's description of the transaction.</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	/// <summary>The number of units of the security involved in this transaction. Must be positive if the type is a buy and negative if the type is a sell.</summary>
	[JsonPropertyName("quantity")]
	public string quantity { get; set; }

	/// <summary>The price of the security at which this transaction occurred.</summary>
	[JsonPropertyName("price")]
	public string price { get; set; }

	/// <summary>The combined value of all fees applied to this transaction.</summary>
	[JsonPropertyName("fees")]
	public string fees { get; set; }

	/// <summary>The type of the investment transaction. Possible values are:
`buy`: Buying an investment
`sell`: Selling an investment
`cash`: Activity that modifies a cash position
`fee`: A fee on the account
`transfer`: Activity that modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer</summary>
	[JsonPropertyName("type")]
	public string type { get; set; }

	/// <summary>Either a valid `iso_currency_code` or `unofficial_currency_code`</summary>
	[JsonPropertyName("currency")]
	public string currency { get; set; }

	/// <summary>Specify the security associated with the holding or investment transaction. When inputting custom security data to the Sandbox, Plaid will perform post-data-retrieval normalization and enrichment. These processes may cause the data returned by the Sandbox to be slightly different from the data you input. An ISO-4217 currency code and a security identifier (`ticker_symbol`, `cusip`, `isin`, or `sedol`) are required.</summary>
	[JsonPropertyName("security")]
	public SecurityOverride security { get; set; }

}


== HoldingsOverride.cs
==================================================

public class HoldingsOverride
{
	/// <summary>The last price given by the institution for this security</summary>
	[JsonPropertyName("institution_price")]
	public string institution_price { get; set; }

	/// <summary>The date at which `institution_price` was current. Must be formatted as an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date.</summary>
	[JsonPropertyName("institution_price_as_of")]
	public string institution_price_as_of { get; set; }

	/// <summary>The average original value of the holding. Multiple cost basis values for the same security purchased at different prices are not supported.</summary>
	[JsonPropertyName("cost_basis")]
	public string cost_basis { get; set; }

	/// <summary>The total quantity of the asset held, as reported by the financial institution.</summary>
	[JsonPropertyName("quantity")]
	public string quantity { get; set; }

	/// <summary>Either a valid `iso_currency_code` or `unofficial_currency_code`</summary>
	[JsonPropertyName("currency")]
	public string currency { get; set; }

	/// <summary>Specify the security associated with the holding or investment transaction. When inputting custom security data to the Sandbox, Plaid will perform post-data-retrieval normalization and enrichment. These processes may cause the data returned by the Sandbox to be slightly different from the data you input. An ISO-4217 currency code and a security identifier (`ticker_symbol`, `cusip`, `isin`, or `sedol`) are required.</summary>
	[JsonPropertyName("security")]
	public SecurityOverride security { get; set; }

}


== SecurityOverride.cs
==================================================

public class SecurityOverride
{
	/// <summary>12-character ISIN, a globally unique securities identifier.</summary>
	[JsonPropertyName("isin")]
	public string isin { get; set; }

	/// <summary>9-character CUSIP, an identifier assigned to North American securities.</summary>
	[JsonPropertyName("cusip")]
	public string cusip { get; set; }

	/// <summary>7-character SEDOL, an identifier assigned to securities in the UK.</summary>
	[JsonPropertyName("sedol")]
	public string sedol { get; set; }

	/// <summary>A descriptive name for the security, suitable for display.</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	/// <summary>The security’s trading symbol for publicly traded securities, and otherwise a short identifier if available.</summary>
	[JsonPropertyName("ticker_symbol")]
	public string ticker_symbol { get; set; }

	/// <summary>Either a valid `iso_currency_code` or `unofficial_currency_code`</summary>
	[JsonPropertyName("currency")]
	public string currency { get; set; }

}


== TransactionOverride.cs
==================================================

public class TransactionOverride
{
	/// <summary>The date of the transaction, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Transaction dates in the past or present will result in posted transactions; transaction dates in the future will result in pending transactions. Transactions in Sandbox will move from pending to posted once their transaction date has been reached.</summary>
	[JsonPropertyName("date_transacted")]
	public string date_transacted { get; set; }

	/// <summary>The date the transaction posted, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format</summary>
	[JsonPropertyName("date_posted")]
	public string date_posted { get; set; }

	/// <summary>The transaction amount. Can be negative.</summary>
	[JsonPropertyName("amount")]
	public string amount { get; set; }

	/// <summary>The transaction description.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

	/// <summary>The ISO-4217 format currency code for the transaction.</summary>
	[JsonPropertyName("currency")]
	public string currency { get; set; }

}


== Numbers.cs
==================================================

public class Numbers
{
	/// <summary>Will be used for the account number.</summary>
	[JsonPropertyName("account")]
	public string account { get; set; }

	/// <summary>Must be a valid ACH routing number.</summary>
	[JsonPropertyName("ach_routing")]
	public string ach_routing { get; set; }

	/// <summary>Must be a valid wire transfer routing number.</summary>
	[JsonPropertyName("ach_wire_routing")]
	public string ach_wire_routing { get; set; }

	/// <summary>EFT institution number. Must be specified alongside `eft_branch`.</summary>
	[JsonPropertyName("eft_institution")]
	public string eft_institution { get; set; }

	/// <summary>EFT branch number. Must be specified alongside `eft_institution`.</summary>
	[JsonPropertyName("eft_branch")]
	public string eft_branch { get; set; }

	/// <summary>Bank identifier code (BIC). Must be specified alongside `international_iban`.</summary>
	[JsonPropertyName("international_bic")]
	public string international_bic { get; set; }

	/// <summary>International bank account number (IBAN). If no account number is specified via `account`, will also be used as the account number by default. Must be specified alongside `international_bic`.</summary>
	[JsonPropertyName("international_iban")]
	public string international_iban { get; set; }

	/// <summary>BACS sort code</summary>
	[JsonPropertyName("bacs_sort_code")]
	public string bacs_sort_code { get; set; }

}


== Meta.cs
==================================================

public class Meta
{
	/// <summary>The account's name</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	/// <summary>The account's official name</summary>
	[JsonPropertyName("official_name")]
	public string official_name { get; set; }

	/// <summary>The account's limit</summary>
	[JsonPropertyName("limit")]
	public string limit { get; set; }

}


== OverrideAccounts.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1056] Line 7: Unexpected character '`'
[CS1002] Line 7: ; expected
[CS1519] Line 7: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 7: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 7: Unexpected character '`'
[CS1056] Line 9: Unexpected character '`'
[CS1002] Line 9: ; expected
[CS1519] Line 9: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 9: Unexpected character '`'
[CS1056] Line 11: Unexpected character '`'
[CS1002] Line 11: ; expected
[CS1519] Line 11: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1056] Line 13: Unexpected character '`'
[CS1002] Line 13: ; expected
[CS1519] Line 13: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 13: ; expected
[CS1002] Line 15: ; expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS8124] Line 15: Tuple must contain at least two elements.
[CS1026] Line 15: ) expected
[CS1519] Line 15: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 24: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 24: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 24: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class OverrideAccounts
{
	/// <summary>`investment:` Investment account

`credit:` Credit card

`depository:` Depository account

`loan:` Loan account

`payroll:` Payroll acccount

`other:` Non-specified account type

See the [Account type schema](https://plaid.com/docs/api/accounts#account-type-schema) for a full listing of account types and corresponding subtypes.</summary>
	[JsonPropertyName("type")]
	public OverrideAccountType type { get; set; }

	/// <summary>See the [Account type schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes.</summary>
	[JsonPropertyName("subtype")]
	public AccountSubtype subtype { get; set; }

	/// <summary>If provided, the account will start with this amount as the current balance.
</summary>
	[JsonPropertyName("starting_balance")]
	public string starting_balance { get; set; }

	/// <summary>If provided, the account will always have this amount as its  available balance, regardless of current balance or changes in transactions over time.</summary>
	[JsonPropertyName("force_available_balance")]
	public string force_available_balance { get; set; }

	/// <summary>ISO-4217 currency code. If provided, the account will be denominated in the given currency. Transactions will also be in this currency by default.</summary>
	[JsonPropertyName("currency")]
	public string currency { get; set; }

	/// <summary>Allows specifying the metadata of the test account</summary>
	[JsonPropertyName("meta")]
	public Meta meta { get; set; }

	/// <summary>Account and bank identifier number data used to configure the test account. All values are optional.</summary>
	[JsonPropertyName("numbers")]
	public Numbers numbers { get; set; }

	/// <summary>Specify the list of transactions on the account.</summary>
	[JsonPropertyName("transactions")]
	public TransactionOverride[] transactions { get; set; }

	/// <summary>Specify the holdings on the account.</summary>
	[JsonPropertyName("holdings")]
	public HoldingsOverride holdings { get; set; }

	/// <summary>Specify the list of investments transactions on the account.</summary>
	[JsonPropertyName("investment_transactions")]
	public Investments_TransactionsOverride investment_transactions { get; set; }

	/// <summary>Data about the owner or owners of an account. Any fields not specified will be filled in with default Sandbox information.</summary>
	[JsonPropertyName("identity")]
	public OwnerOverride identity { get; set; }

	/// <summary>Used to configure Sandbox test data for the Liabilities product</summary>
	[JsonPropertyName("liability")]
	public LiabilityOverride liability { get; set; }

	/// <summary>The `inflow_model` allows you to model a test account that receives regular income or make regular payments on a loan. Any transactions generated by the `inflow_model` will appear in addition to randomly generated test data or transactions specified by `override_accounts`.</summary>
	[JsonPropertyName("inflow_model")]
	public InflowModel inflow_model { get; set; }

	/// <summary>Specify payroll data on the account.</summary>
	[JsonPropertyName("income")]
	public IncomeOverride income { get; set; }

}


== MFA.cs
==================================================

********************* ERRORS *********************

[CS1003] Line 5: Syntax error, ',' expected
[CS1056] Line 5: Unexpected character '`'
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1056] Line 5: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1056] Line 7: Unexpected character '`'
[CS1002] Line 7: ; expected
[CS1519] Line 7: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 7: Unexpected character '`'
[CS1519] Line 7: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 7: ; expected
[CS1519] Line 7: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 7: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 7: ; expected
[CS1003] Line 9: Syntax error, '(' expected
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1031] Line 10: Type expected
[CS1001] Line 10: Identifier expected
[CS1026] Line 10: ) expected
[CS1002] Line 10: ; expected
[CS1519] Line 26: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 26: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 26: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class MFA
{
	/// <summary>Possible values are `device`, `selections`, or `questions`.

If value is `device`, the MFA answer is `1234`.

If value is `selections`, the MFA answer is always the first option.

If value is `questions`, the MFA answer is  `answer_<i>_<j>` for the j-th question in the i-th round, starting from 0. For example, the answer to the first question in the second round is `answer_1_0`.</summary>
	[JsonPropertyName("type")]
	public string type { get; set; }

	/// <summary>Number of rounds of questions. Required if value of `type` is `questions`. </summary>
	[JsonPropertyName("question_rounds")]
	public string question_rounds { get; set; }

	/// <summary>Number of questions per round. Required if value of `type` is `questions`. If value of type is `selections`, default value is 2.</summary>
	[JsonPropertyName("questions_per_round")]
	public string questions_per_round { get; set; }

	/// <summary>Number of rounds of selections, used if `type` is `selections`. Defaults to 1.</summary>
	[JsonPropertyName("selection_rounds")]
	public string selection_rounds { get; set; }

	/// <summary>Number of available answers per question, used if `type` is `selection`. Defaults to 2.
</summary>
	[JsonPropertyName("selections_per_question")]
	public string selections_per_question { get; set; }

}


== UserCustomPassword.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 9: ; expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1519] Line 9: Invalid token ''s creation date. Different Items created on different dates with the same seed for transactions data will have different dates for the transactions. The number of days between each transaction and the Item creation will remain constant. For example, an Item created on December 15 might show a transaction on December 14. An Item created on December 20, using the same seed, would show that same transaction occurring on December 19.</summary>' in class, record, struct, or interface member declaration
[CS1010] Line 9: Newline in constant
[CS1012] Line 9: Too many characters in character literal
[CS1519] Line 9: Invalid token ''s creation date. Different Items created on different dates with the same seed for transactions data will have different dates for the transactions. The number of days between each transaction and the Item creation will remain constant. For example, an Item created on December 15 might show a transaction on December 14. An Item created on December 20, using the same seed, would show that same transaction occurring on December 19.</summary>' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1056] Line 28: Unexpected character '`'
[CS1056] Line 28: Unexpected character '`'
[CS1056] Line 29: Unexpected character '`'
[CS1056] Line 29: Unexpected character '`'
[CS1056] Line 30: Unexpected character '`'
[CS1056] Line 30: Unexpected character '`'
[CS1056] Line 31: Unexpected character '`'
[CS1056] Line 31: Unexpected character '`'
[CS1056] Line 32: Unexpected character '`'
[CS1056] Line 32: Unexpected character '`'
[CS1056] Line 33: Unexpected character '`'
[CS1056] Line 33: Unexpected character '`'
[CS1056] Line 34: Unexpected character '`'
[CS1056] Line 34: Unexpected character '`'
[CS1056] Line 35: Unexpected character '`'
[CS1056] Line 35: Unexpected character '`'
[CS1056] Line 36: Unexpected character '`'
[CS1056] Line 36: Unexpected character '`'
[CS1056] Line 37: Unexpected character '`'
[CS1056] Line 37: Unexpected character '`'
[CS1056] Line 38: Unexpected character '`'
[CS1056] Line 38: Unexpected character '`'
[CS1056] Line 39: Unexpected character '`'
[CS1056] Line 39: Unexpected character '`'
[CS1519] Line 39: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 39: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class UserCustomPassword
{
	/// <summary>The version of the password schema to use, possible values are 1 or 2. The default value is 2. You should only specify 1 if you know it is necessary for your test suite.</summary>
	[JsonPropertyName("version")]
	public string version { get; set; }

	/// <summary>A seed, in the form of a string, that will be used to randomly generate account and transaction data, if this data is not specified using the `override_accounts` argument. If no seed is specified, the randomly generated data will be different each time.

Note that transactions data is generated relative to the Item's creation date. Different Items created on different dates with the same seed for transactions data will have different dates for the transactions. The number of days between each transaction and the Item creation will remain constant. For example, an Item created on December 15 might show a transaction on December 14. An Item created on December 20, using the same seed, would show that same transaction occurring on December 19.</summary>
	[JsonPropertyName("seed")]
	public string seed { get; set; }

	/// <summary>An array of account overrides to configure the accounts for the Item. By default, if no override is specified, transactions and account data will be randomly generated based on the account type and subtype, and other products will have fixed or empty data.</summary>
	[JsonPropertyName("override_accounts")]
	public OverrideAccounts[] override_accounts { get; set; }

	/// <summary>Specifies the multi-factor authentication settings to use with this test account</summary>
	[JsonPropertyName("mfa")]
	public MFA mfa { get; set; }

	/// <summary>You may trigger a reCAPTCHA in Plaid Link in the Sandbox environment by using the recaptcha field. Possible values are `good` or `bad`. A value of `good` will result in successful Item creation and `bad` will result in a `RECAPTCHA_BAD` error to simulate a failed reCAPTCHA. Both values require the reCAPTCHA to be manually solved within Plaid Link.</summary>
	[JsonPropertyName("recaptcha")]
	public string recaptcha { get; set; }

	/// <summary>An error code to force on Item creation. Possible values are:

`"INSTITUTION_NOT_RESPONDING"`
`"INSTITUTION_NO_LONGER_SUPPORTED"`
`"INVALID_CREDENTIALS"`
`"INVALID_MFA"`
`"ITEM_LOCKED"`
`"ITEM_LOGIN_REQUIRED"`
`"ITEM_NOT_SUPPORTED"`
`"INVALID_LINK_TOKEN"`
`"MFA_NOT_SUPPORTED"`
`"NO_ACCOUNTS"`
`"PLAID_ERROR"`
`"PRODUCTS_NOT_SUPPORTED"`
`"USER_SETUP_REQUIRED"`</summary>
	[JsonPropertyName("force_error")]
	public string force_error { get; set; }

}


== ProductStatusBreakdown.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 8: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 8: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 8: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class ProductStatusBreakdown
{
	/// <summary>The percentage of login attempts that are successful, expressed as a decimal.</summary>
	[JsonPropertyName("success")]
	public string success { get; set; }

	/// <summary>The percentage of logins that are failing due to an internal Plaid issue, expressed as a decimal.
</summary>
	[JsonPropertyName("error_plaid")]
	public string error_plaid { get; set; }

	/// <summary>The percentage of logins that are failing due to an issue in the institution's system, expressed as a decimal.</summary>
	[JsonPropertyName("error_institution")]
	public string error_institution { get; set; }

	/// <summary>The `refresh_interval` may be `DELAYED` or `STOPPED` even when the success rate is high. This value is only returned for Transactions status breakdowns.</summary>
	[JsonPropertyName("refresh_interval")]
	public string refresh_interval { get; set; }

}


== ProductStatus.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 4: Unexpected character '`'
[CS1519] Line 4: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 4: Unexpected character '`'
[CS1519] Line 4: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 4: ; expected
[CS1002] Line 4: ; expected
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1001] Line 5: Identifier expected
[CS1003] Line 5: Syntax error, ',' expected
[CS1003] Line 5: Syntax error, '>' expected
[CS1003] Line 5: Syntax error, '(' expected
[CS1001] Line 5: Identifier expected
[CS1003] Line 5: Syntax error, ',' expected
[CS1003] Line 5: Syntax error, ',' expected
[CS1031] Line 6: Type expected
[CS1001] Line 6: Identifier expected
[CS1026] Line 6: ) expected
[CS1002] Line 6: ; expected
[CS1519] Line 10: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 10: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 10: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class ProductStatus
{
	/// <summary>`HEALTHY`: the majority of requests are successful
`DEGRADED`: only some requests are successful
`DOWN`: all requests are failing</summary>
	[JsonPropertyName("status")]
	public string status { get; set; }

	/// <summary>[ISO 8601](https://wikipedia.org/wiki/ISO_8601) formatted timestamp of the last status change for the institution.
</summary>
	[JsonPropertyName("last_status_change")]
	public DateTime last_status_change { get; set; }

	/// <summary>A detailed breakdown of the institution's performance for a request type. The values for `success`, `error_plaid`, and `error_institution` sum to 1.</summary>
	[JsonPropertyName("breakdown")]
	public ProductStatusBreakdown breakdown { get; set; }

}


== ExternalPaymentRefundDetails.cs
==================================================

public class ExternalPaymentRefundDetails
{
	/// <summary>The name of the account holder.</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	/// <summary>The International Bank Account Number (IBAN) for the account.</summary>
	[JsonPropertyName("iban")]
	public string iban { get; set; }

	[JsonPropertyName("bacs")]
	public RecipientBACSNullable bacs { get; set; }

}


== ExternalPaymentOptions.cs
==================================================

public class ExternalPaymentOptions
{
	/// <summary>When `true`, Plaid will attempt to request refund details from the payee's financial institution.  Support varies between financial institutions and will not always be available.  If refund details could be retrieved, they will be available in the `/payment_initiation/payment/get` response.</summary>
	[JsonPropertyName("request_refund_details")]
	public bool request_refund_details { get; set; }

	/// <summary>The International Bank Account Number (IBAN) for the payer's account. If provided, the end user will be able to send payments only from the specified bank account.</summary>
	[JsonPropertyName("iban")]
	public string iban { get; set; }

	[JsonPropertyName("bacs")]
	public PaymentInitiationOptionalRestrictionBacs bacs { get; set; }

	/// <summary>The EMI (E-Money Institution) account that this payment is associated with, if any. This EMI account is used as an intermediary account to enable Plaid to reconcile the settlement of funds for Payment Initiation requests.</summary>
	[JsonPropertyName("emi_account_id")]
	public string emi_account_id { get; set; }

}


== ExternalPaymentScheduleBase.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 9: ; expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1002] Line 9: ; expected
[CS1519] Line 9: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token ',' in class, record, struct, or interface member declaration
[CS1056] Line 9: Unexpected character '`'
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 9: Unexpected character '`'
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1519] Line 9: Invalid token '1' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token '1' in class, record, struct, or interface member declaration
[CS8124] Line 9: Tuple must contain at least two elements.
[CS1003] Line 9: Syntax error, ',' expected
[CS1002] Line 9: ; expected
[CS8124] Line 9: Tuple must contain at least two elements.
[CS1519] Line 9: Invalid token '.' in class, record, struct, or interface member declaration
[CS1002] Line 11: ; expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1002] Line 11: ; expected
[CS1519] Line 11: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token ',' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1002] Line 11: ; expected
[CS1519] Line 11: Invalid token '28' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token '28' in class, record, struct, or interface member declaration
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1519] Line 11: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1003] Line 11: Syntax error, '(' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1001] Line 11: Identifier expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1026] Line 11: ) expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1519] Line 11: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token '-' in class, record, struct, or interface member declaration
[CS1003] Line 11: Syntax error, ',' expected
[CS1044] Line 11: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 11: ; expected
[CS1001] Line 11: Identifier expected
[CS1001] Line 11: Identifier expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, '>' expected
[CS1003] Line 11: Syntax error, '(' expected
[CS1001] Line 11: Identifier expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1031] Line 12: Type expected
[CS1001] Line 12: Identifier expected
[CS1026] Line 12: ) expected
[CS1002] Line 12: ; expected
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1044] Line 17: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 17: ; expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token ',' in class, record, struct, or interface member declaration
[CS1003] Line 17: Syntax error, ',' expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token 'do' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token 'do' in class, record, struct, or interface member declaration
[CS1001] Line 17: Identifier expected
[CS1519] Line 17: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '>' in class, record, struct, or interface member declaration
[CS1002] Line 22: ; expected
[CS1519] Line 22: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 22: Unexpected character '`'
[CS1519] Line 22: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 22: Unexpected character '`'
[CS1519] Line 22: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 22: ; expected
[CS1002] Line 22: ; expected
[CS1002] Line 22: ; expected
[CS1001] Line 22: Identifier expected
[CS1002] Line 22: ; expected
[CS1519] Line 22: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 22: ; expected
[CS1002] Line 22: ; expected
[CS1519] Line 22: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 22: Unexpected character '`'
[CS1519] Line 22: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 22: Unexpected character '`'
[CS1519] Line 22: Invalid token '`' in class, record, struct, or interface member declaration
[CS1044] Line 22: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 22: ; expected
[CS1003] Line 22: Syntax error, ',' expected
[CS1002] Line 22: ; expected
[CS1002] Line 22: ; expected
[CS1002] Line 22: ; expected
[CS1044] Line 22: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 22: ; expected
[CS1519] Line 22: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 22: ; expected
[CS1519] Line 22: Invalid token 'do' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token 'do' in class, record, struct, or interface member declaration
[CS1001] Line 22: Identifier expected
[CS1519] Line 22: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class ExternalPaymentScheduleBase
{
	/// <summary>The frequency interval of the payment.</summary>
	[JsonPropertyName("interval")]
	public PaymentScheduleInterval interval { get; set; }

	/// <summary>The day of the interval on which to schedule the payment.

If the payment interval is weekly, `interval_execution_day` should be an integer from 1 (Monday) to 7 (Sunday).

If the payment interval is monthly, `interval_execution_day` should be an integer indicating which day of the month to make the payment on. Integers from 1 to 28 can be used to make a payment on that day of the month. Negative integers from -1 to -5 can be used to make a payment relative to the end of the month. To make a payment on the last day of the month, use -1; to make the payment on the second-to-last day, use -2, and so on.</summary>
	[JsonPropertyName("interval_execution_day")]
	public int interval_execution_day { get; set; }

	/// <summary>A date in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). Standing order payments will begin on the first `interval_execution_day` on or after the `start_date`.

If the first `interval_execution_day` on or after the start date is also the same day that `/payment_initiation/payment/create` was called, the bank *may* make the first payment on that day, but it is not guaranteed to do so.</summary>
	[JsonPropertyName("start_date")]
	public string start_date { get; set; }

	/// <summary>A date in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). Standing order payments will end on the last `interval_execution_day` on or before the `end_date`.
If the only `interval_execution_day` between the start date and the end date (inclusive) is also the same day that `/payment_initiation/payment/create` was called, the bank *may* make a payment on that day, but it is not guaranteed to do so.</summary>
	[JsonPropertyName("end_date")]
	public string end_date { get; set; }

	/// <summary>The start date sent to the bank after adjusting for holidays or weekends.  Will be provided in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). If the start date did not require adjustment, this field will be `null`.</summary>
	[JsonPropertyName("adjusted_start_date")]
	public string adjusted_start_date { get; set; }

}


== PaymentInitiationAddress.cs
==================================================

public class PaymentInitiationAddress
{
	/// <summary>An array of length 1-2 representing the street address where the recipient is located. Maximum of 70 characters.</summary>
	[JsonPropertyName("street")]
	public string[] street { get; set; }

	/// <summary>The city where the recipient is located. Maximum of 35 characters.</summary>
	[JsonPropertyName("city")]
	public string city { get; set; }

	/// <summary>The postal code where the recipient is located. Maximum of 16 characters.</summary>
	[JsonPropertyName("postal_code")]
	public string postal_code { get; set; }

	/// <summary>The ISO 3166-1 alpha-2 country code where the recipient is located.</summary>
	[JsonPropertyName("country")]
	public string country { get; set; }

}


== PaymentInitiationStandingOrderMetadata.cs
==================================================

public class PaymentInitiationStandingOrderMetadata
{
	/// <summary>Indicates whether the institution supports closed-ended standing orders by providing an end date.</summary>
	[JsonPropertyName("supports_standing_order_end_date")]
	public bool supports_standing_order_end_date { get; set; }

	/// <summary>This is only applicable to `MONTHLY` standing orders. Indicates whether the institution supports negative integers (-1 to -5) for setting up a `MONTHLY` standing order relative to the end of the month.</summary>
	[JsonPropertyName("supports_standing_order_negative_execution_days")]
	public bool supports_standing_order_negative_execution_days { get; set; }

	/// <summary>A list of the valid standing order intervals supported by the institution.</summary>
	[JsonPropertyName("valid_standing_order_intervals")]
	public PaymentScheduleInterval[] valid_standing_order_intervals { get; set; }

}


== PaymentInitiationMetadata.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 9: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 9: Unexpected character '`'
[CS1056] Line 9: Unexpected character '`'
[CS1519] Line 10: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 10: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class PaymentInitiationMetadata
{
	/// <summary>Indicates whether the institution supports payments from a different country.</summary>
	[JsonPropertyName("supports_international_payments")]
	public bool supports_international_payments { get; set; }

	/// <summary>A mapping of currency to maximum payment amount (denominated in the smallest unit of currency) supported by the insitution.

Example: `{"GBP": "10000"}`
</summary>
	[JsonPropertyName("maximum_payment_amount")]
	public string maximum_payment_amount { get; set; }

	/// <summary>Indicates whether the institution supports returning refund details when initiating a payment.</summary>
	[JsonPropertyName("supports_refund_details")]
	public bool supports_refund_details { get; set; }

	/// <summary>Metadata specifically related to valid Payment Initiation standing order configurations for the institution.</summary>
	[JsonPropertyName("standing_order_metadata")]
	public PaymentInitiationStandingOrderMetadata standing_order_metadata { get; set; }

}


== AuthSupportedMethods.cs
==================================================

public class AuthSupportedMethods
{
	/// <summary>Indicates if instant auth is supported.</summary>
	[JsonPropertyName("instant_auth")]
	public bool instant_auth { get; set; }

	/// <summary>Indicates if instant match is supported.</summary>
	[JsonPropertyName("instant_match")]
	public bool instant_match { get; set; }

	/// <summary>Indicates if automated microdeposits are supported.</summary>
	[JsonPropertyName("automated_micro_deposits")]
	public bool automated_micro_deposits { get; set; }

}


== AuthMetadata.cs
==================================================

public class AuthMetadata
{
	/// <summary>Metadata specifically related to which auth methods an institution supports.</summary>
	[JsonPropertyName("supported_methods")]
	public AuthSupportedMethods supported_methods { get; set; }

}


== APR.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 4: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class APR
{
	/// <summary>Annual Percentage Rate applied.
</summary>
	[JsonPropertyName("apr_percentage")]
	public string apr_percentage { get; set; }

	/// <summary>The type of balance to which the APR applies.</summary>
	[JsonPropertyName("apr_type")]
	public string apr_type { get; set; }

	/// <summary>Amount of money that is subjected to the APR if a balance was carried beyond payment due date. How it is calculated can vary by card issuer. It is often calculated as an average daily balance.</summary>
	[JsonPropertyName("balance_subject_to_apr")]
	public string balance_subject_to_apr { get; set; }

	/// <summary>Amount of money charged due to interest from last statement.</summary>
	[JsonPropertyName("interest_charge_amount")]
	public string interest_charge_amount { get; set; }

}


== ServicerAddressData.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 8: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 8: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 8: Unexpected character '`'
[CS1056] Line 8: Unexpected character '`'
[CS1519] Line 8: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 8: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class ServicerAddressData
{
	/// <summary>The full city name</summary>
	[JsonPropertyName("city")]
	public string city { get; set; }

	/// <summary>The region or state
Example: `"NC"`</summary>
	[JsonPropertyName("region")]
	public string region { get; set; }

	/// <summary>The full street address
Example: `"564 Main Street, APT 15"`</summary>
	[JsonPropertyName("street")]
	public string street { get; set; }

	/// <summary>The postal code</summary>
	[JsonPropertyName("postal_code")]
	public string postal_code { get; set; }

	/// <summary>The ISO 3166-1 alpha-2 country code</summary>
	[JsonPropertyName("country")]
	public string country { get; set; }

}


== PSLFStatus.cs
==================================================

public class PSLFStatus
{
	/// <summary>The estimated date borrower will have completed 120 qualifying monthly payments. Returned in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).</summary>
	[JsonPropertyName("estimated_eligibility_date")]
	public string estimated_eligibility_date { get; set; }

	/// <summary>The number of qualifying payments that have been made.</summary>
	[JsonPropertyName("payments_made")]
	public string payments_made { get; set; }

	/// <summary>The number of qualifying payments remaining.</summary>
	[JsonPropertyName("payments_remaining")]
	public string payments_remaining { get; set; }

}


== StudentRepaymentPlan.cs
==================================================

public class StudentRepaymentPlan
{
	/// <summary>The description of the repayment plan as provided by the servicer.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

	/// <summary>The type of the repayment plan.</summary>
	[JsonPropertyName("type")]
	public string type { get; set; }

}


== StudentLoanStatus.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 4: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class StudentLoanStatus
{
	/// <summary>The date until which the loan will be in its current status. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
</summary>
	[JsonPropertyName("end_date")]
	public string end_date { get; set; }

	/// <summary>The status type of the student loan</summary>
	[JsonPropertyName("type")]
	public string type { get; set; }

}


== MortgagePropertyAddress.cs
==================================================

public class MortgagePropertyAddress
{
	/// <summary>The city name.</summary>
	[JsonPropertyName("city")]
	public string city { get; set; }

	/// <summary>The ISO 3166-1 alpha-2 country code.</summary>
	[JsonPropertyName("country")]
	public string country { get; set; }

	/// <summary>The five or nine digit postal code.</summary>
	[JsonPropertyName("postal_code")]
	public string postal_code { get; set; }

	/// <summary>The region or state (example "NC").</summary>
	[JsonPropertyName("region")]
	public string region { get; set; }

	/// <summary>The full street address (example "564 Main Street, Apt 15").</summary>
	[JsonPropertyName("street")]
	public string street { get; set; }

}


== MortgageInterestRate.cs
==================================================

public class MortgageInterestRate
{
	/// <summary>Percentage value (interest rate of current mortgage, not APR) of interest payable on a loan.</summary>
	[JsonPropertyName("percentage")]
	public string percentage { get; set; }

	/// <summary>The type of interest charged (fixed or variable).</summary>
	[JsonPropertyName("type")]
	public string type { get; set; }

}


== MortgageLiability.cs
==================================================

public class MortgageLiability
{
	/// <summary>The ID of the account that this liability belongs to.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The account number of the loan.</summary>
	[JsonPropertyName("account_number")]
	public string account_number { get; set; }

	/// <summary>The current outstanding amount charged for late payment.</summary>
	[JsonPropertyName("current_late_fee")]
	public string current_late_fee { get; set; }

	/// <summary>Total amount held in escrow to pay taxes and insurance on behalf of the borrower.</summary>
	[JsonPropertyName("escrow_balance")]
	public string escrow_balance { get; set; }

	/// <summary>Indicates whether the borrower has private mortgage insurance in effect.</summary>
	[JsonPropertyName("has_pmi")]
	public bool has_pmi { get; set; }

	/// <summary>Indicates whether the borrower will pay a penalty for early payoff of mortgage.</summary>
	[JsonPropertyName("has_prepayment_penalty")]
	public bool has_prepayment_penalty { get; set; }

	/// <summary>Object containing metadata about the interest rate for the mortgage.</summary>
	[JsonPropertyName("interest_rate")]
	public MortgageInterestRate interest_rate { get; set; }

	/// <summary>The amount of the last payment.</summary>
	[JsonPropertyName("last_payment_amount")]
	public string last_payment_amount { get; set; }

	/// <summary>The date of the last payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).</summary>
	[JsonPropertyName("last_payment_date")]
	public string last_payment_date { get; set; }

	/// <summary>Description of the type of loan, for example `conventional`, `fixed`, or `variable`. This field is provided directly from the loan servicer and does not have an enumerated set of possible values.</summary>
	[JsonPropertyName("loan_type_description")]
	public string loan_type_description { get; set; }

	/// <summary>Full duration of mortgage as at origination (e.g. `10 year`).</summary>
	[JsonPropertyName("loan_term")]
	public string loan_term { get; set; }

	/// <summary>Original date on which mortgage is due in full. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).</summary>
	[JsonPropertyName("maturity_date")]
	public string maturity_date { get; set; }

	/// <summary>The amount of the next payment.</summary>
	[JsonPropertyName("next_monthly_payment")]
	public string next_monthly_payment { get; set; }

	/// <summary>The due date for the next payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).</summary>
	[JsonPropertyName("next_payment_due_date")]
	public string next_payment_due_date { get; set; }

	/// <summary>The date on which the loan was initially lent. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).</summary>
	[JsonPropertyName("origination_date")]
	public string origination_date { get; set; }

	/// <summary>The original principal balance of the mortgage.</summary>
	[JsonPropertyName("origination_principal_amount")]
	public string origination_principal_amount { get; set; }

	/// <summary>Amount of loan (principal + interest) past due for payment.</summary>
	[JsonPropertyName("past_due_amount")]
	public string past_due_amount { get; set; }

	/// <summary>Object containing fields describing property address.</summary>
	[JsonPropertyName("property_address")]
	public MortgagePropertyAddress property_address { get; set; }

	/// <summary>The year to date (YTD) interest paid.</summary>
	[JsonPropertyName("ytd_interest_paid")]
	public string ytd_interest_paid { get; set; }

	/// <summary>The YTD principal paid.</summary>
	[JsonPropertyName("ytd_principal_paid")]
	public string ytd_principal_paid { get; set; }

}


== CreditCardLiability.cs
==================================================

public class CreditCardLiability
{
	/// <summary>The ID of the account that this liability belongs to.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The various interest rates that apply to the account.</summary>
	[JsonPropertyName("aprs")]
	public APR[] aprs { get; set; }

	/// <summary>true if a payment is currently overdue. Availability for this field is limited.</summary>
	[JsonPropertyName("is_overdue")]
	public bool is_overdue { get; set; }

	/// <summary>The amount of the last payment.</summary>
	[JsonPropertyName("last_payment_amount")]
	public string last_payment_amount { get; set; }

	/// <summary>The date of the last payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). Availability for this field is limited.</summary>
	[JsonPropertyName("last_payment_date")]
	public string last_payment_date { get; set; }

	/// <summary>The date of the last statement. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).</summary>
	[JsonPropertyName("last_statement_issue_date")]
	public string last_statement_issue_date { get; set; }

	/// <summary>The total amount owed as of the last statement issued</summary>
	[JsonPropertyName("last_statement_balance")]
	public string last_statement_balance { get; set; }

	/// <summary>The minimum payment due for the next billing cycle.</summary>
	[JsonPropertyName("minimum_payment_amount")]
	public string minimum_payment_amount { get; set; }

	/// <summary>The due date for the next payment. The due date is `null` if a payment is not expected. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).</summary>
	[JsonPropertyName("next_payment_due_date")]
	public string next_payment_due_date { get; set; }

}


== StudentLoan.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 52: ; expected
[CS1002] Line 52: ; expected
[CS1002] Line 52: ; expected
[CS1002] Line 52: ; expected
[CS1002] Line 52: ; expected
[CS1002] Line 52: ; expected
[CS1003] Line 52: Syntax error, '(' expected
[CS1003] Line 52: Syntax error, ',' expected
[CS1003] Line 52: Syntax error, ',' expected
[CS1003] Line 52: Syntax error, ',' expected
[CS1003] Line 52: Syntax error, ',' expected
[CS1003] Line 52: Syntax error, ',' expected
[CS1003] Line 52: Syntax error, ',' expected
[CS1003] Line 52: Syntax error, ',' expected
[CS1001] Line 52: Identifier expected
[CS1003] Line 52: Syntax error, ',' expected
[CS1003] Line 52: Syntax error, ',' expected
[CS1001] Line 52: Identifier expected
[CS1003] Line 52: Syntax error, ',' expected
[CS1003] Line 52: Syntax error, ',' expected
[CS1003] Line 52: Syntax error, ',' expected
[CS1031] Line 52: Type expected
[CS8124] Line 52: Tuple must contain at least two elements.
[CS1026] Line 52: ) expected
[CS1001] Line 52: Identifier expected
[CS1056] Line 52: Unexpected character '`'
[CS1003] Line 52: Syntax error, ',' expected
[CS1001] Line 52: Identifier expected
[CS1056] Line 52: Unexpected character '`'
[CS1002] Line 52: ; expected
[CS1519] Line 52: Invalid token ',' in class, record, struct, or interface member declaration
[CS1056] Line 52: Unexpected character '`'
[CS1001] Line 52: Identifier expected
[CS1056] Line 52: Unexpected character '`'
[CS1002] Line 52: ; expected
[CS1519] Line 52: Invalid token ',' in class, record, struct, or interface member declaration
[CS1002] Line 52: ; expected
[CS1056] Line 52: Unexpected character '`'
[CS1001] Line 52: Identifier expected
[CS1056] Line 52: Unexpected character '`'
[CS1002] Line 52: ; expected
[CS1519] Line 52: Invalid token ',' in class, record, struct, or interface member declaration
[CS1056] Line 52: Unexpected character '`'
[CS1001] Line 52: Identifier expected
[CS1056] Line 52: Unexpected character '`'
[CS1002] Line 52: ; expected
[CS1519] Line 52: Invalid token ',' in class, record, struct, or interface member declaration
[CS1056] Line 52: Unexpected character '`'
[CS1001] Line 52: Identifier expected
[CS1056] Line 52: Unexpected character '`'
[CS1002] Line 52: ; expected
[CS1519] Line 52: Invalid token ',' in class, record, struct, or interface member declaration
[CS1056] Line 52: Unexpected character '`'
[CS1001] Line 52: Identifier expected
[CS1056] Line 52: Unexpected character '`'
[CS1002] Line 52: ; expected
[CS1519] Line 52: Invalid token ',' in class, record, struct, or interface member declaration
[CS1002] Line 52: ; expected
[CS1002] Line 52: ; expected
[CS1056] Line 52: Unexpected character '`'
[CS1001] Line 52: Identifier expected
[CS1056] Line 52: Unexpected character '`'
[CS1002] Line 52: ; expected
[CS1519] Line 52: Invalid token '.' in class, record, struct, or interface member declaration
[CS1056] Line 53: Unexpected character '`'
[CS1001] Line 53: Identifier expected
[CS1056] Line 53: Unexpected character '`'
[CS1002] Line 53: ; expected
[CS1003] Line 53: Syntax error, ',' expected
[CS1056] Line 53: Unexpected character '$'
[CS1002] Line 53: ; expected
[CS1519] Line 53: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 53: ; expected
[CS1519] Line 53: Invalid token 'in' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token 'in' in class, record, struct, or interface member declaration
[CS1001] Line 53: Identifier expected
[CS1519] Line 53: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 62: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 62: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 62: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class StudentLoan
{
	/// <summary>The ID of the account that this liability belongs to.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The account number of the loan. For some institutions, this may be a masked version of the number (e.g., the last 4 digits instead of the entire number).</summary>
	[JsonPropertyName("account_number")]
	public string account_number { get; set; }

	/// <summary>The dates on which loaned funds were disbursed or will be disbursed. These are often in the past. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).</summary>
	[JsonPropertyName("disbursement_dates")]
	public string[] disbursement_dates { get; set; }

	/// <summary>The date when the student loan is expected to be paid off. Availability for this field is limited. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).</summary>
	[JsonPropertyName("expected_payoff_date")]
	public string expected_payoff_date { get; set; }

	/// <summary>The guarantor of the student loan.</summary>
	[JsonPropertyName("guarantor")]
	public string guarantor { get; set; }

	/// <summary>The interest rate on the loan as a percentage.</summary>
	[JsonPropertyName("interest_rate_percentage")]
	public string interest_rate_percentage { get; set; }

	/// <summary>`true` if a payment is currently overdue. Availability for this field is limited.</summary>
	[JsonPropertyName("is_overdue")]
	public bool is_overdue { get; set; }

	/// <summary>The amount of the last payment.</summary>
	[JsonPropertyName("last_payment_amount")]
	public string last_payment_amount { get; set; }

	/// <summary>The date of the last payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).</summary>
	[JsonPropertyName("last_payment_date")]
	public string last_payment_date { get; set; }

	/// <summary>The date of the last statement. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).</summary>
	[JsonPropertyName("last_statement_issue_date")]
	public string last_statement_issue_date { get; set; }

	/// <summary>The type of loan, e.g., "Consolidation Loans".</summary>
	[JsonPropertyName("loan_name")]
	public string loan_name { get; set; }

	/// <summary>An object representing the status of the student loan</summary>
	[JsonPropertyName("loan_status")]
	public StudentLoanStatus loan_status { get; set; }

	/// <summary>The minimum payment due for the next billing cycle. There are some exceptions:
Some institutions require a minimum payment across all loans associated with an account number. Our API presents that same minimum payment amount on each loan. The institutions that do this are: Great Lakes ( `ins_116861`), Firstmark (`ins_116295`), Commonbond Firstmark Services (`ins_116950`), Nelnet (`ins_116528`), EdFinancial Services (`ins_116304`), Granite State (`ins_116308`), and Oklahoma Student Loan Authority (`ins_116945`).
Firstmark (`ins_116295` ) will display as $0 if there is an autopay program in effect.</summary>
	[JsonPropertyName("minimum_payment_amount")]
	public string minimum_payment_amount { get; set; }

	/// <summary>The due date for the next payment. The due date is `null` if a payment is not expected. A payment is not expected if `loan_status.type` is `deferment`, `in_school`, `consolidated`, `paid in full`, or `transferred`. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).</summary>
	[JsonPropertyName("next_payment_due_date")]
	public string next_payment_due_date { get; set; }

	/// <summary>The date on which the loan was initially lent. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
</summary>
	[JsonPropertyName("origination_date")]
	public string origination_date { get; set; }

	/// <summary>The original principal balance of the loan.</summary>
	[JsonPropertyName("origination_principal_amount")]
	public string origination_principal_amount { get; set; }

	/// <summary>The total dollar amount of the accrued interest balance. For Sallie Mae ( `ins_116944`), this amount is included in the current balance of the loan, so this field will return as `null`.</summary>
	[JsonPropertyName("outstanding_interest_amount")]
	public string outstanding_interest_amount { get; set; }

	/// <summary>The relevant account number that should be used to reference this loan for payments. In the majority of cases, `payment_reference_number` will match a`ccount_number,` but in some institutions, such as Great Lakes (`ins_116861`), it will be different.</summary>
	[JsonPropertyName("payment_reference_number")]
	public string payment_reference_number { get; set; }

	/// <summary>Information about the student's eligibility in the Public Service Loan Forgiveness program. This is only returned if the institution is Fedloan (`ins_116527`). </summary>
	[JsonPropertyName("pslf_status")]
	public PSLFStatus pslf_status { get; set; }

	/// <summary>An object representing the repayment plan for the student loan</summary>
	[JsonPropertyName("repayment_plan")]
	public StudentRepaymentPlan repayment_plan { get; set; }

	/// <summary>The sequence number of the student loan. Heartland ECSI (`ins_116948`) does not make this field available.</summary>
	[JsonPropertyName("sequence_number")]
	public string sequence_number { get; set; }

	/// <summary>The address of the student loan servicer. This is generally the remittance address to which payments should be sent.</summary>
	[JsonPropertyName("servicer_address")]
	public ServicerAddressData servicer_address { get; set; }

	/// <summary>The year to date (YTD) interest paid. Availability for this field is limited.</summary>
	[JsonPropertyName("ytd_interest_paid")]
	public string ytd_interest_paid { get; set; }

	/// <summary>The year to date (YTD) principal paid. Availability for this field is limited.</summary>
	[JsonPropertyName("ytd_principal_paid")]
	public string ytd_principal_paid { get; set; }

}


== LiabilitiesObject.cs
==================================================

public class LiabilitiesObject
{
	/// <summary>The credit accounts returned.</summary>
	[JsonPropertyName("credit")]
	public CreditCardLiability[] credit { get; set; }

	/// <summary>The mortgage accounts returned.</summary>
	[JsonPropertyName("mortgage")]
	public MortgageLiability[] mortgage { get; set; }

	/// <summary>The student loan accounts returned.</summary>
	[JsonPropertyName("student")]
	public StudentLoan[] student { get; set; }

}


== OwnerOverride.cs
==================================================

public class OwnerOverride
{
	/// <summary>A list of names associated with the account by the financial institution. These should always be the names of individuals, even for business accounts. Note that the same name data will be used for all accounts associated with an Item.</summary>
	[JsonPropertyName("names")]
	public string[] names { get; set; }

	/// <summary>A list of phone numbers associated with the account.</summary>
	[JsonPropertyName("phone_numbers")]
	public PhoneNumber[] phone_numbers { get; set; }

	/// <summary>A list of email addresses associated with the account.</summary>
	[JsonPropertyName("emails")]
	public Email[] emails { get; set; }

	/// <summary>Data about the various addresses associated with the account.</summary>
	[JsonPropertyName("addresses")]
	public Address[] addresses { get; set; }

}


== Owner.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1044] Line 5: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token 'in' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token 'in' in class, record, struct, or interface member declaration
[CS1010] Line 5: Newline in constant
[CS1012] Line 5: Too many characters in character literal
[CS1002] Line 5: ; expected

**************************************************


public class Owner
{
	/// <summary>A list of names associated with the account by the financial institution. These should always be the names of individuals, even for business accounts. If the name of a business is reported, please contact Plaid Support. In the case of a joint account, Plaid will make a best effort to report the names of all account holders.

If an Item contains multiple accounts with different owner names, some institutions will report all names associated with the Item in each account's `names` array.</summary>
	[JsonPropertyName("names")]
	public string[] names { get; set; }

	/// <summary>A list of phone numbers associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.</summary>
	[JsonPropertyName("phone_numbers")]
	public PhoneNumber[] phone_numbers { get; set; }

	/// <summary>A list of email addresses associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.</summary>
	[JsonPropertyName("emails")]
	public Email[] emails { get; set; }

	/// <summary>Data about the various addresses associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.</summary>
	[JsonPropertyName("addresses")]
	public Address[] addresses { get; set; }

}


== HistoricalBalance.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1519] Line 9: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token ',' in class, record, struct, or interface member declaration
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1519] Line 9: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token 'in' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token 'in' in class, record, struct, or interface member declaration
[CS1002] Line 9: ; expected
[CS1519] Line 9: Invalid token 'as' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token 'as' in class, record, struct, or interface member declaration
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1001] Line 9: Identifier expected
[CS1519] Line 9: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token '>' in class, record, struct, or interface member declaration
[CS0650] Line 19: Bad array declarator: To declare a managed array the rank specifier precedes the variable's identifier. To declare a fixed size buffer field, use the fixed keyword before the field type.
[CS0270] Line 19: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 19: Syntax error, ',' expected
[CS0270] Line 19: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 19: Syntax error, ',' expected
[CS0270] Line 19: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1002] Line 19: ; expected
[CS8124] Line 19: Tuple must contain at least two elements.
[CS1026] Line 19: ) expected
[CS1519] Line 19: Invalid token ':' in class, record, struct, or interface member declaration

**************************************************


public class HistoricalBalance
{
	/// <summary>The date of the calculated historical balance, in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD)</summary>
	[JsonPropertyName("date")]
	public string date { get; set; }

	/// <summary>The total amount of funds in the account, calculated from the `current` balance in the `balance` object by subtracting inflows and adding back outflows according to the posted date of each transaction.

If the account has any pending transactions, historical balance amounts on or after the date of the earliest pending transaction may differ if retrieved in subsequent Asset Reports as a result of those pending transactions posting.</summary>
	[JsonPropertyName("current")]
	public string current { get; set; }

	/// <summary>The ISO-4217 currency code of the balance. Always `null` if `unofficial_currency_code` is non-`null`.</summary>
	[JsonPropertyName("iso_currency_code")]
	public string iso_currency_code { get; set; }

	/// <summary>The unofficial currency code associated with the balance. Always `null` if `iso_currency_code` is non-`null`.

See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.</summary>
	[JsonPropertyName("unofficial_currency_code")]
	public string unofficial_currency_code { get; set; }

}


== AddressData.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 8: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 8: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 8: Unexpected character '`'
[CS1056] Line 8: Unexpected character '`'
[CS1519] Line 8: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 8: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class AddressData
{
	/// <summary>The full city name</summary>
	[JsonPropertyName("city")]
	public string city { get; set; }

	/// <summary>The region or state
Example: `"NC"`</summary>
	[JsonPropertyName("region")]
	public string region { get; set; }

	/// <summary>The full street address
Example: `"564 Main Street, APT 15"`</summary>
	[JsonPropertyName("street")]
	public string street { get; set; }

	/// <summary>The postal code</summary>
	[JsonPropertyName("postal_code")]
	public string postal_code { get; set; }

	/// <summary>The ISO 3166-1 alpha-2 country code</summary>
	[JsonPropertyName("country")]
	public string country { get; set; }

}


== Address.cs
==================================================

public class Address
{
	/// <summary>Data about the components comprising an address.</summary>
	[JsonPropertyName("data")]
	public AddressData data { get; set; }

	/// <summary>When `true`, identifies the address as the primary address on an account.</summary>
	[JsonPropertyName("primary")]
	public bool primary { get; set; }

}


== Email.cs
==================================================

public class Email
{
	/// <summary>The email address.</summary>
	[JsonPropertyName("data")]
	public string data { get; set; }

	/// <summary>When `true`, identifies the email address as the primary email on an account.</summary>
	[JsonPropertyName("primary")]
	public bool primary { get; set; }

	/// <summary>The type of email account as described by the financial institution.</summary>
	[JsonPropertyName("type")]
	public string type { get; set; }

}


== PhoneNumber.cs
==================================================

public class PhoneNumber
{
	/// <summary>The phone number.</summary>
	[JsonPropertyName("data")]
	public string data { get; set; }

	/// <summary>When `true`, identifies the phone number as the primary number on an account.</summary>
	[JsonPropertyName("primary")]
	public bool primary { get; set; }

	/// <summary>The type of phone number.</summary>
	[JsonPropertyName("type")]
	public string type { get; set; }

}


== InitialUpdateWebhook.cs
==================================================

public class InitialUpdateWebhook
{
	/// <summary>`TRANSACTIONS`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`INITIAL_UPDATE`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>The error code associated with the webhook.</summary>
	[JsonPropertyName("error")]
	public string error { get; set; }

	/// <summary>The number of new, unfetched transactions available.</summary>
	[JsonPropertyName("new_transactions")]
	public string new_transactions { get; set; }

	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

}


== HistoricalUpdateWebhook.cs
==================================================

public class HistoricalUpdateWebhook
{
	/// <summary>`TRANSACTIONS`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`HISTORICAL_UPDATE`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

	/// <summary>The number of new, unfetched transactions available</summary>
	[JsonPropertyName("new_transactions")]
	public string new_transactions { get; set; }

	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

}


== DefaultUpdateWebhook.cs
==================================================

public class DefaultUpdateWebhook
{
	/// <summary>`TRANSACTIONS`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`DEFAULT_UPDATE`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

	/// <summary>The number of new transactions detected since the last time this webhook was fired.</summary>
	[JsonPropertyName("new_transactions")]
	public string new_transactions { get; set; }

	/// <summary>The `item_id` of the Item the webhook relates to.</summary>
	[JsonPropertyName("item_id")]
	public string item_id { get; set; }

}


== TransactionsRemovedWebhook.cs
==================================================

public class TransactionsRemovedWebhook
{
	/// <summary>`TRANSACTIONS`</summary>
	[JsonPropertyName("webhook_type")]
	public string webhook_type { get; set; }

	/// <summary>`TRANSACTIONS_REMOVED`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

	/// <summary>An array of `transaction_ids` corresponding to the removed transactions</summary>
	[JsonPropertyName("removed_transactions")]
	public string[] removed_transactions { get; set; }

	/// <summary>The `item_id` of the Item associated with this webhook, warning, or error</summary>
	[JsonPropertyName("item_id")]
	public ItemId item_id { get; set; }

}


== PersonalFinanceCategory.cs
==================================================

public class PersonalFinanceCategory
{
	/// <summary>A high level category that communicates the broad category of the transaction.</summary>
	[JsonPropertyName("primary")]
	public string primary { get; set; }

	/// <summary>Provides additional granularity to the primary categorization.</summary>
	[JsonPropertyName("detailed")]
	public string detailed { get; set; }

}


== Category.cs
==================================================

public class Category
{
	/// <summary>An identifying number for the category. `category_id` is a Plaid-specific identifier and does not necessarily correspond to merchant category codes.</summary>
	[JsonPropertyName("category_id")]
	public string category_id { get; set; }

	/// <summary>`place` for physical transactions or `special` for other transactions such as bank charges.</summary>
	[JsonPropertyName("group")]
	public string group { get; set; }

	/// <summary>A hierarchical array of the categories to which this `category_id` belongs.</summary>
	[JsonPropertyName("hierarchy")]
	public string[] hierarchy { get; set; }

}


== PaymentMeta.cs
==================================================

public class PaymentMeta
{
	/// <summary>The transaction reference number supplied by the financial institution.</summary>
	[JsonPropertyName("reference_number")]
	public string reference_number { get; set; }

	/// <summary>The ACH PPD ID for the payer.</summary>
	[JsonPropertyName("ppd_id")]
	public string ppd_id { get; set; }

	/// <summary>For transfers, the party that is receiving the transaction.</summary>
	[JsonPropertyName("payee")]
	public string payee { get; set; }

	/// <summary>The party initiating a wire transfer. Will be `null` if the transaction is not a wire transfer.</summary>
	[JsonPropertyName("by_order_of")]
	public string by_order_of { get; set; }

	/// <summary>For transfers, the party that is paying the transaction.</summary>
	[JsonPropertyName("payer")]
	public string payer { get; set; }

	/// <summary>The type of transfer, e.g. 'ACH'</summary>
	[JsonPropertyName("payment_method")]
	public string payment_method { get; set; }

	/// <summary>The name of the payment processor</summary>
	[JsonPropertyName("payment_processor")]
	public string payment_processor { get; set; }

	/// <summary>The payer-supplied description of the transfer.</summary>
	[JsonPropertyName("reason")]
	public string reason { get; set; }

}


== InstitutionStatus.cs
==================================================

public class InstitutionStatus
{
	/// <summary>A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.</summary>
	[JsonPropertyName("item_logins")]
	public ProductStatus item_logins { get; set; }

	/// <summary>A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.</summary>
	[JsonPropertyName("transactions_updates")]
	public ProductStatus transactions_updates { get; set; }

	/// <summary>A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.</summary>
	[JsonPropertyName("auth")]
	public ProductStatus auth { get; set; }

	/// <summary>A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.</summary>
	[JsonPropertyName("balance")]
	public ProductStatus balance { get; set; }

	/// <summary>A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.</summary>
	[JsonPropertyName("identity")]
	public ProductStatus identity { get; set; }

	/// <summary>A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.</summary>
	[JsonPropertyName("investments_updates")]
	public ProductStatus investments_updates { get; set; }

	/// <summary>A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.</summary>
	[JsonPropertyName("liabilities_updates")]
	public ProductStatus liabilities_updates { get; set; }

	/// <summary>A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.</summary>
	[JsonPropertyName("liabilities")]
	public ProductStatus liabilities { get; set; }

	/// <summary>A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.</summary>
	[JsonPropertyName("investments")]
	public ProductStatus investments { get; set; }

	/// <summary>Details of recent health incidents associated with the institution.</summary>
	[JsonPropertyName("health_incidents")]
	public HealthIncident[] health_incidents { get; set; }

}


== Institution.cs
==================================================

********************* ERRORS *********************

[CS1003] Line 41: Syntax error, ',' expected
[CS1002] Line 41: ; expected
[CS1519] Line 41: Invalid token 'in' in class, record, struct, or interface member declaration
[CS1519] Line 41: Invalid token 'in' in class, record, struct, or interface member declaration
[CS1002] Line 41: ; expected
[CS1002] Line 41: ; expected
[CS1002] Line 41: ; expected
[CS1513] Line 41: } expected
[CS1002] Line 41: ; expected
[CS1056] Line 41: Unexpected character '`'
[CS8803] Line 41: Top-level statements must precede namespace and type declarations.
[CS1525] Line 41: Invalid expression term '/'
[CS1002] Line 41: ; expected
[CS1056] Line 41: Unexpected character '`'
[CS1003] Line 41: Syntax error, ',' expected
[CS1056] Line 41: Unexpected character '`'
[CS1056] Line 41: Unexpected character '`'
[CS1002] Line 42: ; expected
[CS1022] Line 54: Type or namespace definition, or end-of-file expected

**************************************************


public class Institution
{
	/// <summary>Unique identifier for the institution</summary>
	[JsonPropertyName("institution_id")]
	public string institution_id { get; set; }

	/// <summary>The official name of the institution</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	/// <summary>A list of the Plaid products supported by the institution. Note that only institutions that support Instant Auth will return `auth` in the product array; institutions that do not list `auth` may still support other Auth methods such as Instant Match or Automated Micro-deposit Verification. For more details, see [Full Auth coverage](https://plaid.com/docs/auth/coverage/).</summary>
	[JsonPropertyName("products")]
	public Products[] products { get; set; }

	/// <summary>A list of the country codes supported by the institution.</summary>
	[JsonPropertyName("country_codes")]
	public CountryCode[] country_codes { get; set; }

	/// <summary>The URL for the institution's website</summary>
	[JsonPropertyName("url")]
	public string url { get; set; }

	/// <summary>Hexadecimal representation of the primary color used by the institution</summary>
	[JsonPropertyName("primary_color")]
	public string primary_color { get; set; }

	/// <summary>Base64 encoded representation of the institution's logo</summary>
	[JsonPropertyName("logo")]
	public string logo { get; set; }

	/// <summary>A partial list of routing numbers associated with the institution. This list is provided for the purpose of looking up institutions by routing number. It is not comprehensive and should never be used as a complete list of routing numbers for an institution.</summary>
	[JsonPropertyName("routing_numbers")]
	public string[] routing_numbers { get; set; }

	/// <summary>Indicates that the institution has an OAuth login flow. This is primarily relevant to institutions with European country codes.</summary>
	[JsonPropertyName("oauth")]
	public bool oauth { get; set; }

	/// <summary>The status of an institution is determined by the health of its Item logins, Transactions updates, Investments updates, Liabilities updates, Auth requests, Balance requests, Identity requests, Investments requests, and Liabilities requests. A login attempt is conducted during the initial Item add in Link. If there is not enough traffic to accurately calculate an institution's status, Plaid will return null rather than potentially inaccurate data.

Institution status is accessible in the Dashboard and via the API using the `/institutions/get_by_id` endpoint with the `include_status` option set to true. Note that institution status is not available in the Sandbox environment.
</summary>
	[JsonPropertyName("status")]
	public InstitutionStatus status { get; set; }

	/// <summary>Metadata that captures what specific payment configurations an institution supports when making Payment Initiation requests.</summary>
	[JsonPropertyName("payment_initiation_metadata")]
	public PaymentInitiationMetadata payment_initiation_metadata { get; set; }

	/// <summary>Metadata that captures information about the Auth features of an institution.</summary>
	[JsonPropertyName("auth_metadata")]
	public AuthMetadata auth_metadata { get; set; }

}


== TransactionStreamAmount.cs
==================================================

********************* ERRORS *********************

[CS0650] Line 9: Bad array declarator: To declare a managed array the rank specifier precedes the variable's identifier. To declare a fixed size buffer field, use the fixed keyword before the field type.
[CS0270] Line 9: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 9: Syntax error, ',' expected
[CS0270] Line 9: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 9: Syntax error, ',' expected
[CS0270] Line 9: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1002] Line 9: ; expected
[CS8124] Line 9: Tuple must contain at least two elements.
[CS1026] Line 9: ) expected
[CS1519] Line 9: Invalid token ':' in class, record, struct, or interface member declaration

**************************************************


public class TransactionStreamAmount
{
	/// <summary>represents the numerical value of an amount.</summary>
	[JsonPropertyName("amount")]
	public string amount { get; set; }

	/// <summary>The ISO-4217 currency code of the amount. Always `null` if `unofficial_currency_code` is non-`null`.

See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.</summary>
	[JsonPropertyName("iso_currency_code")]
	public string iso_currency_code { get; set; }

	/// <summary>The unofficial currency code of the amount. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.</summary>
	[JsonPropertyName("unofficial_currency_code")]
	public string unofficial_currency_code { get; set; }

}


== TransactionStream.cs
==================================================

public class TransactionStream
{
	/// <summary>The ID of the account to which the stream belongs</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>A unique id for the stream</summary>
	[JsonPropertyName("stream_id")]
	public string stream_id { get; set; }

	/// <summary>The ID of the category to which this transaction belongs. See [Categories](https://plaid.com/docs/#category-overview).</summary>
	[JsonPropertyName("category_id")]
	public string category_id { get; set; }

	/// <summary>A hierarchical array of the categories to which this transaction belongs. See [Categories](https://plaid.com/docs/#category-overview).</summary>
	[JsonPropertyName("category")]
	public string[] category { get; set; }

	/// <summary>A description of the transaction stream.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

	/// <summary>The posted date of the earliest transaction in the stream.</summary>
	[JsonPropertyName("first_date")]
	public string first_date { get; set; }

	/// <summary>The posted date of the latest transaction in the stream.</summary>
	[JsonPropertyName("last_date")]
	public string last_date { get; set; }

	/// <summary>describes the frequency of the transaction stream.</summary>
	[JsonPropertyName("frequency")]
	public RecurringTransactionFrequency frequency { get; set; }

	/// <summary>An array of Plaid transaction IDs belonging to the stream, sorted by posted date.</summary>
	[JsonPropertyName("transaction_ids")]
	public string[] transaction_ids { get; set; }

	/// <summary>Object with data pertaining to an amount on the transaction stream.</summary>
	[JsonPropertyName("average_amount")]
	public TransactionStreamAmount average_amount { get; set; }

	/// <summary>indicates whether the transaction stream is still live.</summary>
	[JsonPropertyName("is_active")]
	public bool is_active { get; set; }

}


== Location.cs
==================================================

public class Location
{
	/// <summary>The street address where the transaction occurred.</summary>
	[JsonPropertyName("address")]
	public string address { get; set; }

	/// <summary>The city where the transaction occurred.</summary>
	[JsonPropertyName("city")]
	public string city { get; set; }

	/// <summary>The region or state where the transaction occurred.</summary>
	[JsonPropertyName("region")]
	public string region { get; set; }

	/// <summary>The postal code where the transaction occurred.</summary>
	[JsonPropertyName("postal_code")]
	public string postal_code { get; set; }

	/// <summary>The ISO 3166-1 alpha-2 country code where the transaction occurred.</summary>
	[JsonPropertyName("country")]
	public string country { get; set; }

	/// <summary>The latitude where the transaction occurred.</summary>
	[JsonPropertyName("lat")]
	public string lat { get; set; }

	/// <summary>The longitude where the transaction occurred.</summary>
	[JsonPropertyName("lon")]
	public string lon { get; set; }

	/// <summary>The merchant defined store number where the transaction occurred.</summary>
	[JsonPropertyName("store_number")]
	public string store_number { get; set; }

}


== TransactionBase.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1001] Line 5: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1519] Line 7: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 7: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 7: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 7: Unexpected character '`'
[CS1002] Line 7: ; expected
[CS1002] Line 7: ; expected
[CS1002] Line 7: ; expected
[CS1001] Line 7: Identifier expected
[CS1003] Line 7: Syntax error, '(' expected
[CS1056] Line 9: Unexpected character '`'
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 11: Unexpected character '`'
[CS1003] Line 11: Syntax error, ',' expected
[CS1001] Line 11: Identifier expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1056] Line 11: Unexpected character '`'
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1001] Line 11: Identifier expected
[CS1001] Line 11: Identifier expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 12: Syntax error, ',' expected
[CS1001] Line 12: Identifier expected
[CS1003] Line 12: Syntax error, ',' expected
[CS1003] Line 12: Syntax error, ',' expected
[CS1031] Line 13: Type expected
[CS1001] Line 13: Identifier expected
[CS1026] Line 13: ) expected
[CS1002] Line 13: ; expected
[CS1056] Line 22: Unexpected character '`'
[CS1002] Line 22: ; expected
[CS1519] Line 22: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 22: Unexpected character '`'
[CS1519] Line 22: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 22: ; expected
[CS1002] Line 22: ; expected
[CS1002] Line 22: ; expected
[CS1003] Line 22: Syntax error, ',' expected
[CS1056] Line 22: Unexpected character '`'
[CS1002] Line 22: ; expected
[CS1519] Line 22: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '/' in class, record, struct, or interface member declaration
[CS1056] Line 22: Unexpected character '`'
[CS1519] Line 22: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 22: Unexpected character '`'
[CS1519] Line 22: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 22: Unexpected character '`'
[CS1519] Line 22: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 22: ; expected
[CS1003] Line 22: Syntax error, ',' expected
[CS1002] Line 22: ; expected
[CS1002] Line 22: ; expected
[CS1002] Line 22: ; expected
[CS1001] Line 22: Identifier expected
[CS1519] Line 22: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 22: Invalid token '>' in class, record, struct, or interface member declaration
[CS1056] Line 28: Unexpected character '`'
[CS1002] Line 28: ; expected
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 28: Unexpected character '`'
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 28: ; expected
[CS1002] Line 28: ; expected
[CS1002] Line 28: ; expected
[CS1003] Line 28: Syntax error, ',' expected
[CS1056] Line 28: Unexpected character '`'
[CS1002] Line 28: ; expected
[CS1519] Line 28: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token '/' in class, record, struct, or interface member declaration
[CS1056] Line 28: Unexpected character '`'
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 28: Unexpected character '`'
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 28: Unexpected character '`'
[CS1519] Line 28: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 28: ; expected
[CS1003] Line 28: Syntax error, ',' expected
[CS1002] Line 28: ; expected
[CS1002] Line 28: ; expected
[CS1002] Line 28: ; expected
[CS1001] Line 28: Identifier expected
[CS1519] Line 28: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 28: Invalid token '>' in class, record, struct, or interface member declaration
[CS1056] Line 38: Unexpected character '`'
[CS1002] Line 38: ; expected
[CS1519] Line 38: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 38: Unexpected character '`'
[CS1519] Line 38: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 38: ; expected
[CS1002] Line 38: ; expected
[CS1002] Line 38: ; expected
[CS1003] Line 38: Syntax error, ',' expected
[CS1056] Line 38: Unexpected character '`'
[CS1002] Line 38: ; expected
[CS1519] Line 38: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 38: Unexpected character '`'
[CS1519] Line 38: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 38: Unexpected character '`'
[CS1519] Line 38: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 38: Unexpected character '`'
[CS1519] Line 38: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 38: ; expected
[CS1044] Line 38: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 38: ; expected
[CS1002] Line 38: ; expected
[CS1002] Line 38: ; expected
[CS1056] Line 38: Unexpected character '`'
[CS1002] Line 38: ; expected
[CS1519] Line 38: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 38: Unexpected character '`'
[CS1519] Line 38: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 38: ; expected
[CS1002] Line 38: ; expected
[CS1002] Line 38: ; expected
[CS1003] Line 38: Syntax error, ',' expected
[CS1056] Line 38: Unexpected character '`'
[CS1002] Line 38: ; expected
[CS1519] Line 38: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '/' in class, record, struct, or interface member declaration
[CS1056] Line 38: Unexpected character '`'
[CS1519] Line 38: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 38: Unexpected character '`'
[CS1519] Line 38: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 38: Unexpected character '`'
[CS1519] Line 38: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 38: ; expected
[CS1003] Line 38: Syntax error, ',' expected
[CS1002] Line 38: ; expected
[CS1002] Line 38: ; expected
[CS1002] Line 38: ; expected
[CS1001] Line 38: Identifier expected
[CS1519] Line 38: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 38: Invalid token '>' in class, record, struct, or interface member declaration
[CS1056] Line 48: Unexpected character '`'
[CS1002] Line 48: ; expected
[CS1519] Line 48: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 48: Unexpected character '`'
[CS1519] Line 48: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 48: ; expected
[CS1002] Line 48: ; expected
[CS1002] Line 48: ; expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1056] Line 48: Unexpected character '`'
[CS1002] Line 48: ; expected
[CS1519] Line 48: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 48: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 48: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 48: Unexpected character '`'
[CS1519] Line 48: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 48: ; expected
[CS1003] Line 48: Syntax error, '(' expected
[CS1001] Line 48: Identifier expected
[CS1056] Line 48: Unexpected character '`'
[CS1003] Line 48: Syntax error, ',' expected
[CS1001] Line 48: Identifier expected
[CS1056] Line 48: Unexpected character '`'
[CS1003] Line 48: Syntax error, ',' expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1056] Line 48: Unexpected character '`'
[CS1003] Line 48: Syntax error, ',' expected
[CS1001] Line 48: Identifier expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1001] Line 48: Identifier expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1056] Line 48: Unexpected character '`'
[CS1003] Line 48: Syntax error, ',' expected
[CS1001] Line 48: Identifier expected
[CS1056] Line 48: Unexpected character '`'
[CS1003] Line 48: Syntax error, ',' expected
[CS1001] Line 48: Identifier expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1001] Line 48: Identifier expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1001] Line 48: Identifier expected
[CS1056] Line 48: Unexpected character '`'
[CS1003] Line 48: Syntax error, ',' expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1001] Line 48: Identifier expected
[CS1001] Line 48: Identifier expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1001] Line 48: Identifier expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1003] Line 48: Syntax error, ',' expected
[CS1031] Line 49: Type expected
[CS1001] Line 49: Identifier expected
[CS1026] Line 49: ) expected
[CS1002] Line 49: ; expected
[CS0650] Line 70: Bad array declarator: To declare a managed array the rank specifier precedes the variable's identifier. To declare a fixed size buffer field, use the fixed keyword before the field type.
[CS0270] Line 70: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 70: Syntax error, ',' expected
[CS0270] Line 70: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 70: Syntax error, ',' expected
[CS0270] Line 70: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1002] Line 70: ; expected
[CS8124] Line 70: Tuple must contain at least two elements.
[CS1026] Line 70: ) expected
[CS1519] Line 70: Invalid token ':' in class, record, struct, or interface member declaration

**************************************************


public class TransactionBase
{
	/// <summary>Please use the `payment_channel` field, `transaction_type` will be deprecated in the future.

`digital:` transactions that took place online.

`place:` transactions that were made at a physical location.

`special:` transactions that relate to banks, e.g. fees or deposits.

`unresolved:` transactions that do not fit into the other three types.
</summary>
	[JsonPropertyName("transaction_type")]
	public string transaction_type { get; set; }

	/// <summary>The ID of a posted transaction's associated pending transaction, where applicable.</summary>
	[JsonPropertyName("pending_transaction_id")]
	public string pending_transaction_id { get; set; }

	/// <summary>The ID of the category to which this transaction belongs. See [Categories](https://plaid.com/docs/#category-overview).

If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.</summary>
	[JsonPropertyName("category_id")]
	public string category_id { get; set; }

	/// <summary>A hierarchical array of the categories to which this transaction belongs. See [Categories](https://plaid.com/docs/#category-overview).

If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.</summary>
	[JsonPropertyName("category")]
	public string[] category { get; set; }

	/// <summary>A representation of where a transaction took place</summary>
	[JsonPropertyName("location")]
	public Location location { get; set; }

	/// <summary>Transaction information specific to inter-bank transfers. If the transaction was not an inter-bank transfer, all fields will be `null`.

If the `transactions` object was returned by a Transactions endpoint such as `/transactions/get`, the `payment_meta` key will always appear, but no data elements are guaranteed. If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.</summary>
	[JsonPropertyName("payment_meta")]
	public PaymentMeta payment_meta { get; set; }

	/// <summary>The name of the account owner. This field is not typically populated and only relevant when dealing with sub-accounts.</summary>
	[JsonPropertyName("account_owner")]
	public string account_owner { get; set; }

	/// <summary>The merchant name or transaction description.

If the `transactions` object was returned by a Transactions endpoint such as `/transactions/get`, this field will always appear. If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	/// <summary>The string returned by the financial institution to describe the transaction. For transactions returned by `/transactions/get`, this field is in beta and will be omitted unless the client is both enrolled in the closed beta program and has set `options.include_original_description` to `true`.</summary>
	[JsonPropertyName("original_description")]
	public string original_description { get; set; }

	/// <summary>The ID of the account in which this transaction occurred.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The settled value of the transaction, denominated in the account's currency, as stated in `iso_currency_code` or `unofficial_currency_code`. Positive values when money moves out of the account; negative values when money moves in. For example, debit card purchases are positive; credit card payments, direct deposits, and refunds are negative.</summary>
	[JsonPropertyName("amount")]
	public string amount { get; set; }

	/// <summary>The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-null.</summary>
	[JsonPropertyName("iso_currency_code")]
	public string iso_currency_code { get; set; }

	/// <summary>The unofficial currency code associated with the transaction. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.</summary>
	[JsonPropertyName("unofficial_currency_code")]
	public string unofficial_currency_code { get; set; }

	/// <summary>For pending transactions, the date that the transaction occurred; for posted transactions, the date that the transaction posted. Both dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DD` ).</summary>
	[JsonPropertyName("date")]
	public string date { get; set; }

	/// <summary>When `true`, identifies the transaction as pending or unsettled. Pending transaction details (name, type, amount, category ID) may change before they are settled.</summary>
	[JsonPropertyName("pending")]
	public bool pending { get; set; }

	/// <summary>The unique ID of the transaction. Like all Plaid identifiers, the `transaction_id` is case sensitive.</summary>
	[JsonPropertyName("transaction_id")]
	public string transaction_id { get; set; }

}


== RecipientBACS.cs
==================================================

public class RecipientBACS
{
	/// <summary>The account number of the account. Maximum of 10 characters.</summary>
	[JsonPropertyName("account")]
	public string account { get; set; }

	/// <summary>The 6-character sort code of the account.</summary>
	[JsonPropertyName("sort_code")]
	public string sort_code { get; set; }

}


== NumbersBACS.cs
==================================================

public class NumbersBACS
{
	/// <summary>The Plaid account ID associated with the account numbers</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The BACS account number for the account</summary>
	[JsonPropertyName("account")]
	public string account { get; set; }

	/// <summary>The BACS sort code for the account</summary>
	[JsonPropertyName("sort_code")]
	public string sort_code { get; set; }

}


== NumbersInternational.cs
==================================================

public class NumbersInternational
{
	/// <summary>The Plaid account ID associated with the account numbers</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The International Bank Account Number (IBAN) for the account</summary>
	[JsonPropertyName("iban")]
	public string iban { get; set; }

	/// <summary>The Bank Identifier Code (BIC) for the account</summary>
	[JsonPropertyName("bic")]
	public string bic { get; set; }

}


== NumbersEFT.cs
==================================================

public class NumbersEFT
{
	/// <summary>The Plaid account ID associated with the account numbers</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The EFT account number for the account</summary>
	[JsonPropertyName("account")]
	public string account { get; set; }

	/// <summary>The EFT institution number for the account</summary>
	[JsonPropertyName("institution")]
	public string institution { get; set; }

	/// <summary>The EFT branch number for the account</summary>
	[JsonPropertyName("branch")]
	public string branch { get; set; }

}


== NumbersACH.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 9: ; expected
[CS1519] Line 9: Invalid token 'using' in class, record, struct, or interface member declaration
[CS1513] Line 9: } expected
[CS8803] Line 9: Top-level statements must precede namespace and type declarations.
[CS1002] Line 9: ; expected
[CS1056] Line 9: Unexpected character '`'
[CS1001] Line 9: Identifier expected
[CS1056] Line 9: Unexpected character '`'
[CS1002] Line 9: ; expected
[CS1022] Line 9: Type or namespace definition, or end-of-file expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1044] Line 9: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1003] Line 9: Syntax error, ',' expected
[CS1010] Line 9: Newline in constant
[CS1012] Line 9: Too many characters in character literal
[CS1002] Line 9: ; expected
[CS1022] Line 21: Type or namespace definition, or end-of-file expected

**************************************************


public class NumbersACH
{
	/// <summary>The Plaid account ID associated with the account numbers</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The ACH account number for the account.

Note that when using OAuth with Chase Bank (`ins_56`), Chase will issue "tokenized" routing and account numbers, which are not the user's actual account and routing numbers. These tokenized numbers should work identically to normal account and routing numbers. The digits returned in the mask field will continue to reflect the actual account number, rather than the tokenized account number. If a user revokes their permissions to your app, the tokenized numbers will continue to work for ACH deposits, but not withdrawals.</summary>
	[JsonPropertyName("account")]
	public string account { get; set; }

	/// <summary>The ACH routing number for the account. If the institution is `ins_56`, this may be a tokenized routing number. For more information, see the description of the `account` field.</summary>
	[JsonPropertyName("routing")]
	public string routing { get; set; }

	/// <summary>The wire transfer routing number for the account, if available</summary>
	[JsonPropertyName("wire_routing")]
	public string wire_routing { get; set; }

}


== AccountBalance.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1056] Line 5: Unexpected character '`'
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token ',' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1003] Line 7: Syntax error, '(' expected
[CS1056] Line 7: Unexpected character '`'
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1001] Line 11: Identifier expected
[CS1056] Line 11: Unexpected character '`'
[CS1003] Line 11: Syntax error, ',' expected
[CS1001] Line 11: Identifier expected
[CS1056] Line 11: Unexpected character '`'
[CS1003] Line 11: Syntax error, ',' expected
[CS1026] Line 11: ) expected
[CS1002] Line 11: ; expected
[CS1001] Line 11: Identifier expected
[CS1514] Line 11: { expected
[CS1056] Line 11: Unexpected character '`'
[CS1055] Line 11: An add or remove accessor expected
[CS1056] Line 11: Unexpected character '`'
[CS1055] Line 11: An add or remove accessor expected
[CS1055] Line 11: An add or remove accessor expected
[CS1055] Line 11: An add or remove accessor expected
[CS1055] Line 11: An add or remove accessor expected
[CS1055] Line 11: An add or remove accessor expected
[CS1055] Line 11: An add or remove accessor expected
[CS1055] Line 11: An add or remove accessor expected
[CS1055] Line 11: An add or remove accessor expected
[CS1056] Line 11: Unexpected character '`'
[CS1055] Line 11: An add or remove accessor expected
[CS1056] Line 11: Unexpected character '`'
[CS1055] Line 11: An add or remove accessor expected
[CS1055] Line 11: An add or remove accessor expected
[CS1055] Line 11: An add or remove accessor expected
[CS1056] Line 11: Unexpected character '`'
[CS1056] Line 11: Unexpected character '`'
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1056] Line 13: Unexpected character '`'
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS1055] Line 13: An add or remove accessor expected
[CS8180] Line 13: { or ; or => expected
[CS1056] Line 13: Unexpected character '`'
[CS1002] Line 15: ; expected
[CS1056] Line 15: Unexpected character '`'
[CS1002] Line 15: ; expected
[CS1056] Line 15: Unexpected character '`'
[CS1525] Line 15: Invalid expression term 'is'
[CS1525] Line 15: Invalid expression term ''
[CS1002] Line 15: ; expected
[CS1056] Line 15: Unexpected character '`'
[CS1002] Line 15: ; expected
[CS1056] Line 15: Unexpected character '`'
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1056] Line 15: Unexpected character '`'
[CS1002] Line 15: ; expected
[CS1002] Line 15: ; expected
[CS1056] Line 15: Unexpected character '`'
[CS1525] Line 15: Invalid expression term '<'
[CS1525] Line 15: Invalid expression term '/'
[CS1525] Line 15: Invalid expression term '['
[CS1002] Line 16: ; expected
[CS1513] Line 16: } expected
[CS1513] Line 16: } expected
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1519] Line 21: Invalid token '`' in class, record, struct, or interface member declaration
[CS1044] Line 21: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 21: ; expected
[CS1002] Line 21: ; expected
[CS1002] Line 21: ; expected
[CS1002] Line 21: ; expected
[CS1002] Line 21: ; expected
[CS1002] Line 21: ; expected
[CS1002] Line 21: ; expected
[CS1003] Line 23: Syntax error, '(' expected
[CS1056] Line 23: Unexpected character '`'
[CS1001] Line 23: Identifier expected
[CS1056] Line 23: Unexpected character '`'
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1001] Line 23: Identifier expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1001] Line 23: Identifier expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1001] Line 23: Identifier expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1001] Line 23: Identifier expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1031] Line 23: Type expected
[CS8124] Line 23: Tuple must contain at least two elements.
[CS1026] Line 23: ) expected
[CS1001] Line 23: Identifier expected
[CS1056] Line 23: Unexpected character '`'
[CS1003] Line 23: Syntax error, ',' expected
[CS1001] Line 23: Identifier expected
[CS1056] Line 23: Unexpected character '`'
[CS1002] Line 23: ; expected
[CS1519] Line 23: Invalid token '.' in class, record, struct, or interface member declaration
[CS1002] Line 23: ; expected
[CS1002] Line 23: ; expected
[CS1519] Line 23: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 23: Invalid token ',' in class, record, struct, or interface member declaration
[CS1010] Line 23: Newline in constant
[CS1012] Line 23: Too many characters in character literal
[CS1002] Line 23: ; expected
[CS1519] Line 25: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 25: Unexpected character '`'
[CS1519] Line 25: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 25: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 25: Unexpected character '`'
[CS1519] Line 25: Invalid token '`' in class, record, struct, or interface member declaration
[CS1044] Line 25: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 25: ; expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1002] Line 25: ; expected
[CS1002] Line 25: ; expected
[CS1002] Line 25: ; expected
[CS1519] Line 25: Invalid token 'as' in class, record, struct, or interface member declaration
[CS1519] Line 25: Invalid token 'as' in class, record, struct, or interface member declaration
[CS1002] Line 25: ; expected
[CS1003] Line 27: Syntax error, '(' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1056] Line 27: Unexpected character '`'
[CS1003] Line 27: Syntax error, ',' expected
[CS1001] Line 27: Identifier expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1001] Line 27: Identifier expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1001] Line 27: Identifier expected
[CS1056] Line 27: Unexpected character '`'
[CS1026] Line 27: ) expected
[CS1519] Line 27: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1003] Line 27: Syntax error, ',' expected
[CS1002] Line 27: ; expected
[CS1519] Line 27: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token ',' in class, record, struct, or interface member declaration
[CS1002] Line 27: ; expected
[CS1002] Line 27: ; expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1002] Line 27: ; expected
[CS1519] Line 27: Invalid token 'as' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token 'as' in class, record, struct, or interface member declaration
[CS1002] Line 27: ; expected
[CS1002] Line 27: ; expected
[CS1002] Line 27: ; expected
[CS1002] Line 27: ; expected
[CS1044] Line 27: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 27: ; expected
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token 'as' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token 'as' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1002] Line 27: ; expected
[CS1519] Line 27: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 29: ; expected
[CS1519] Line 29: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 29: Unexpected character '`'
[CS1519] Line 29: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 29: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 29: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 29: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 29: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 29: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 29: Unexpected character '`'
[CS1519] Line 29: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 29: ; expected
[CS1519] Line 29: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 29: Unexpected character '`'
[CS1519] Line 29: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 29: Unexpected character '`'
[CS1003] Line 29: Syntax error, '[' expected
[CS1001] Line 29: Identifier expected
[CS1031] Line 29: Type expected
[CS1001] Line 29: Identifier expected
[CS1056] Line 29: Unexpected character '`'
[CS1003] Line 29: Syntax error, ',' expected
[CS1001] Line 29: Identifier expected
[CS1056] Line 29: Unexpected character '`'
[CS1003] Line 29: Syntax error, ',' expected
[CS1003] Line 29: Syntax error, ',' expected
[CS1056] Line 29: Unexpected character '`'
[CS1056] Line 29: Unexpected character '`'
[CS1003] Line 29: Syntax error, ',' expected
[CS1001] Line 29: Identifier expected
[CS1003] Line 29: Syntax error, ',' expected
[CS1003] Line 29: Syntax error, ',' expected
[CS1031] Line 30: Type expected
[CS1001] Line 30: Identifier expected
[CS1003] Line 30: Syntax error, ']' expected
[CS1514] Line 30: { expected
[CS1513] Line 30: } expected
[CS1519] Line 35: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 35: Unexpected character '`'
[CS1519] Line 35: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 35: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 35: Unexpected character '`'
[CS1519] Line 35: Invalid token '`' in class, record, struct, or interface member declaration
[CS1001] Line 35: Identifier expected
[CS1003] Line 35: Syntax error, ',' expected
[CS1002] Line 35: ; expected
[CS1002] Line 35: ; expected
[CS1519] Line 35: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 35: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 35: ; expected
[CS1519] Line 35: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 35: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 35: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 35: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 35: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1519] Line 35: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1001] Line 35: Identifier expected
[CS1002] Line 35: ; expected
[CS1519] Line 35: Invalid token 'in' in class, record, struct, or interface member declaration
[CS1519] Line 35: Invalid token 'in' in class, record, struct, or interface member declaration
[CS1002] Line 37: ; expected
[CS1519] Line 37: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 37: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 37: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 37: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 37: ; expected
[CS1519] Line 37: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1519] Line 37: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1056] Line 37: Unexpected character '`'
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 37: Unexpected character '`'
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1001] Line 37: Identifier expected
[CS1001] Line 37: Identifier expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, '>' expected
[CS1003] Line 37: Syntax error, '(' expected
[CS1001] Line 37: Identifier expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1031] Line 38: Type expected
[CS1001] Line 38: Identifier expected
[CS1026] Line 38: ) expected
[CS1002] Line 38: ; expected
[CS0650] Line 47: Bad array declarator: To declare a managed array the rank specifier precedes the variable's identifier. To declare a fixed size buffer field, use the fixed keyword before the field type.
[CS0270] Line 47: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 47: Syntax error, ',' expected
[CS0270] Line 47: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 47: Syntax error, ',' expected
[CS0270] Line 47: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1002] Line 47: ; expected
[CS8124] Line 47: Tuple must contain at least two elements.
[CS1026] Line 47: ) expected
[CS1519] Line 47: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 53: ; expected
[CS1002] Line 53: ; expected
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 53: Unexpected character '`'
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 53: Unexpected character '`'
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 53: ; expected
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 53: Unexpected character '`'
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 53: Unexpected character '`'
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 53: Unexpected character '`'
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 53: Unexpected character '`'
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS8124] Line 53: Tuple must contain at least two elements.
[CS1519] Line 53: Invalid token '.' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class AccountBalance
{
	/// <summary>The amount of funds available to be withdrawn from the account, as determined by the financial institution.

For `credit`-type accounts, the `available` balance typically equals the `limit` less the `current` balance, less any pending outflows plus any pending inflows.

For `depository`-type accounts, the `available` balance typically equals the `current` balance less any pending outflows plus any pending inflows. For `depository`-type accounts, the `available` balance does not include the overdraft limit.

For `investment`-type accounts, the `available` balance is the total cash available to withdraw as presented by the institution.

Note that not all institutions calculate the `available`  balance. In the event that `available` balance is unavailable, Plaid will return an `available` balance value of `null`.

Available balance may be cached and is not guaranteed to be up-to-date in realtime unless the value was returned by `/accounts/balance/get`.

If `current` is `null` this field is guaranteed not to be `null`.</summary>
	[JsonPropertyName("available")]
	public string available { get; set; }

	/// <summary>The total amount of funds in or owed by the account.

For `credit`-type accounts, a positive balance indicates the amount owed; a negative amount indicates the lender owing the account holder.

For `loan`-type accounts, the current balance is the principal remaining on the loan, except in the case of student loan accounts at Sallie Mae (`ins_116944`). For Sallie Mae student loans, the account's balance includes both principal and any outstanding interest.

For `investment`-type accounts, the current balance is the total value of assets as presented by the institution.

Note that balance information may be cached unless the value was returned by `/accounts/balance/get`; if the Item is enabled for Transactions, the balance will be at least as recent as the most recent Transaction update. If you require realtime balance information, use the `available` balance as provided by `/accounts/balance/get`.

When returned by `/accounts/balance/get`, this field may be `null`. When this happens, `available` is guaranteed not to be `null`.</summary>
	[JsonPropertyName("current")]
	public string current { get; set; }

	/// <summary>For `credit`-type accounts, this represents the credit limit.

For `depository`-type accounts, this represents the pre-arranged overdraft limit, which is common for current (checking) accounts in Europe.

In North America, this field is typically only available for `credit`-type accounts.</summary>
	[JsonPropertyName("limit")]
	public string limit { get; set; }

	/// <summary>The ISO-4217 currency code of the balance. Always null if `unofficial_currency_code` is non-null.</summary>
	[JsonPropertyName("iso_currency_code")]
	public string iso_currency_code { get; set; }

	/// <summary>The unofficial currency code associated with the balance. Always null if `iso_currency_code` is non-null. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `unofficial_currency_code`s.</summary>
	[JsonPropertyName("unofficial_currency_code")]
	public string unofficial_currency_code { get; set; }

	/// <summary>Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the last time that the balance for the given account has been updated

This is currently only provided when the `min_last_updated_datetime` is passed when calling `/accounts/balance/get` for `ins_128026` (Capital One).</summary>
	[JsonPropertyName("last_updated_datetime")]
	public DateTime last_updated_datetime { get; set; }

}


== AccountBase.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1585] Line 5: Member modifier 'new' must precede the member type and name
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1003] Line 5: Syntax error, '(' expected
[CS1001] Line 5: Identifier expected
[CS1003] Line 5: Syntax error, ',' expected
[CS1001] Line 5: Identifier expected
[CS1026] Line 5: ) expected
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1056] Line 5: Unexpected character '`'
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 7: ; expected
[CS1002] Line 7: ; expected
[CS1056] Line 7: Unexpected character '`'
[CS1002] Line 7: ; expected
[CS1519] Line 7: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 7: Unexpected character '`'
[CS1519] Line 7: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 7: ; expected
[CS1044] Line 7: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 7: ; expected
[CS1519] Line 7: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 7: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1003] Line 7: Syntax error, '(' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 9: Unexpected character '`'
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1031] Line 10: Type expected
[CS1001] Line 10: Identifier expected
[CS1026] Line 10: ) expected
[CS1002] Line 10: ; expected
[CS1056] Line 31: Unexpected character '`'
[CS1519] Line 31: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 31: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 31: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 31: Unexpected character '`'
[CS1056] Line 33: Unexpected character '`'
[CS1002] Line 33: ; expected
[CS1519] Line 33: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 33: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 33: Unexpected character '`'
[CS1056] Line 35: Unexpected character '`'
[CS1002] Line 35: ; expected
[CS1519] Line 35: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 35: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 35: Unexpected character '`'
[CS1056] Line 37: Unexpected character '`'
[CS1002] Line 37: ; expected
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 37: Unexpected character '`'
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 37: ; expected
[CS1519] Line 37: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1519] Line 37: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1056] Line 37: Unexpected character '`'
[CS1519] Line 37: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 37: Invalid token '/' in class, record, struct, or interface member declaration
[CS1056] Line 37: Unexpected character '`'
[CS1002] Line 37: ; expected
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 37: Unexpected character '`'
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 37: Unexpected character '`'
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 39: Unexpected character '`'
[CS1519] Line 39: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 39: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 39: Unexpected character '`'
[CS1519] Line 39: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 39: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 39: ; expected
[CS1002] Line 41: ; expected
[CS1003] Line 41: Syntax error, ',' expected
[CS1003] Line 41: Syntax error, ',' expected
[CS8124] Line 41: Tuple must contain at least two elements.
[CS1026] Line 41: ) expected
[CS1519] Line 41: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 51: Unexpected character '`'
[CS1519] Line 51: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 51: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 51: Unexpected character '`'
[CS1519] Line 51: Invalid token '`' in class, record, struct, or interface member declaration
[CS1003] Line 51: Syntax error, ',' expected
[CS1002] Line 51: ; expected
[CS1002] Line 51: ; expected
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 53: Unexpected character '`'
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 53: Unexpected character '`'
[CS1519] Line 53: Invalid token '`' in class, record, struct, or interface member declaration
[CS1003] Line 53: Syntax error, ',' expected
[CS1002] Line 53: ; expected
[CS1002] Line 53: ; expected
[CS1519] Line 53: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 53: Invalid token '-' in class, record, struct, or interface member declaration
[CS1003] Line 53: Syntax error, '(' expected
[CS1001] Line 53: Identifier expected
[CS1003] Line 53: Syntax error, ',' expected
[CS1003] Line 53: Syntax error, ',' expected
[CS1003] Line 53: Syntax error, ',' expected
[CS1003] Line 53: Syntax error, ',' expected
[CS1003] Line 53: Syntax error, ',' expected
[CS1001] Line 53: Identifier expected
[CS1001] Line 53: Identifier expected
[CS1056] Line 55: Unexpected character '`'
[CS1003] Line 55: Syntax error, ',' expected
[CS1001] Line 55: Identifier expected
[CS1056] Line 55: Unexpected character '`'
[CS1003] Line 55: Syntax error, ',' expected
[CS1003] Line 55: Syntax error, ',' expected
[CS1003] Line 55: Syntax error, ',' expected
[CS1003] Line 55: Syntax error, ',' expected
[CS1001] Line 55: Identifier expected
[CS1056] Line 57: Unexpected character '`'
[CS1003] Line 57: Syntax error, ',' expected
[CS1001] Line 57: Identifier expected
[CS1056] Line 57: Unexpected character '`'
[CS1003] Line 57: Syntax error, ',' expected
[CS1003] Line 57: Syntax error, ',' expected
[CS1003] Line 57: Syntax error, ',' expected
[CS1003] Line 57: Syntax error, ',' expected
[CS1001] Line 57: Identifier expected
[CS1056] Line 59: Unexpected character '`'
[CS1003] Line 59: Syntax error, ',' expected
[CS1001] Line 59: Identifier expected
[CS1056] Line 59: Unexpected character '`'
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1001] Line 59: Identifier expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1003] Line 59: Syntax error, ',' expected
[CS1056] Line 61: Unexpected character '`'
[CS1003] Line 61: Syntax error, ',' expected
[CS1001] Line 61: Identifier expected
[CS1056] Line 61: Unexpected character '`'
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1001] Line 61: Identifier expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1001] Line 61: Identifier expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 61: Syntax error, ',' expected
[CS1003] Line 62: Syntax error, ',' expected
[CS1001] Line 62: Identifier expected
[CS1003] Line 62: Syntax error, ',' expected
[CS1003] Line 62: Syntax error, ',' expected
[CS1031] Line 63: Type expected
[CS1001] Line 63: Identifier expected
[CS1026] Line 63: ) expected
[CS1002] Line 63: ; expected

**************************************************


public class AccountBase
{
	/// <summary>Plaid’s unique identifier for the account. This value will not change unless Plaid can't reconcile the account with the data returned by the financial institution. This may occur, for example, when the name of the account changes. If this happens a new `account_id` will be assigned to the account.

The `account_id` can also change if the `access_token` is deleted and the same credentials that were used to generate that `access_token` are used to generate a new `access_token` on a later date. In that case, the new `account_id` will be different from the old `account_id`.

If an account with a specific `account_id` disappears instead of changing, the account is likely closed. Closed accounts are not returned by the Plaid API.

Like all Plaid identifiers, the `account_id` is case sensitive.</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>A set of fields describing the balance for an account. Balance information may be cached unless the balance object was returned by `/accounts/balance/get`.</summary>
	[JsonPropertyName("balances")]
	public AccountBalance balances { get; set; }

	/// <summary>The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user.</summary>
	[JsonPropertyName("mask")]
	public string mask { get; set; }

	/// <summary>The name of the account, either assigned by the user or by the financial institution itself</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	/// <summary>The official name of the account as given by the financial institution</summary>
	[JsonPropertyName("official_name")]
	public string official_name { get; set; }

	/// <summary>`investment:` Investment account

`credit:` Credit card

`depository:` Depository account

`loan:` Loan account

`brokerage`: An investment account. Used for `/assets/` endpoints only; other endpoints use `investment`.

`other:` Non-specified account type

See the [Account type schema](https://plaid.com/docs/api/accounts#account-type-schema) for a full listing of account types and corresponding subtypes.</summary>
	[JsonPropertyName("type")]
	public AccountType type { get; set; }

	/// <summary>See the [Account type schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes.</summary>
	[JsonPropertyName("subtype")]
	public AccountSubtype subtype { get; set; }

	/// <summary>The current verification status of an Auth Item initiated through Automated or Manual micro-deposits.  Returned for Auth Items only.

`pending_automatic_verification`: The Item is pending automatic verification

`pending_manual_verification`: The Item is pending manual micro-deposit verification. Items remain in this state until the user successfully verifies the two amounts.

`automatically_verified`: The Item has successfully been automatically verified	

`manually_verified`: The Item has successfully been manually verified

`verification_expired`: Plaid was unable to automatically verify the deposit within 7 calendar days and will no longer attempt to validate the Item. Users may retry by submitting their information again through Link.

`verification_failed`: The Item failed manual micro-deposit verification because the user exhausted all 3 verification attempts. Users may retry by submitting their information again through Link.	
	</summary>
	[JsonPropertyName("verification_status")]
	public string verification_status { get; set; }

}


== ItemStatus.cs
==================================================

public class ItemStatus
{
	/// <summary>Information about the last successful and failed investments update for the Item.</summary>
	[JsonPropertyName("investments")]
	public ItemStatusInvestments investments { get; set; }

	/// <summary>Information about the last successful and failed transactions update for the Item.</summary>
	[JsonPropertyName("transactions")]
	public ItemStatusTransactions transactions { get; set; }

	/// <summary>Information about the last webhook fired for the Item.</summary>
	[JsonPropertyName("last_webhook")]
	public ItemStatusLastWebhook last_webhook { get; set; }

}


== ItemStatusLastWebhook.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 4: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class ItemStatusLastWebhook
{
	/// <summary>[ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of when the webhook was fired.
</summary>
	[JsonPropertyName("sent_at")]
	public DateTime sent_at { get; set; }

	/// <summary>The last webhook code sent.</summary>
	[JsonPropertyName("code_sent")]
	public string code_sent { get; set; }

}


== ItemStatusInvestments.cs
==================================================

public class ItemStatusInvestments
{
	/// <summary>[ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last successful investments update for the Item. The status will update each time Plaid successfully connects with the institution, regardless of whether any new data is available in the update.</summary>
	[JsonPropertyName("last_successful_update")]
	public DateTime last_successful_update { get; set; }

	/// <summary>[ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last failed investments update for the Item. The status will update each time Plaid fails an attempt to connect with the institution, regardless of whether any new data is available in the update.</summary>
	[JsonPropertyName("last_failed_update")]
	public DateTime last_failed_update { get; set; }

}


== ItemStatusTransactions.cs
==================================================

public class ItemStatusTransactions
{
	/// <summary>[ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last successful transactions update for the Item. The status will update each time Plaid successfully connects with the institution, regardless of whether any new data is available in the update.</summary>
	[JsonPropertyName("last_successful_update")]
	public DateTime last_successful_update { get; set; }

	/// <summary>[ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last failed transactions update for the Item. The status will update each time Plaid fails an attempt to connect with the institution, regardless of whether any new data is available in the update.</summary>
	[JsonPropertyName("last_failed_update")]
	public DateTime last_failed_update { get; set; }

}


== Error.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1002] Line 17: ; expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1002] Line 17: ; expected
[CS1001] Line 17: Identifier expected
[CS1001] Line 17: Identifier expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, '>' expected
[CS1003] Line 17: Syntax error, '(' expected
[CS1001] Line 17: Identifier expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1031] Line 18: Type expected
[CS1001] Line 18: Identifier expected
[CS1026] Line 18: ) expected
[CS1002] Line 18: ; expected
[CS1056] Line 27: Unexpected character '`'
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 27: ; expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1002] Line 27: ; expected
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 27: Unexpected character '`'
[CS1519] Line 27: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 27: Invalid token '>' in class, record, struct, or interface member declaration
[CS1031] Line 29: Type expected

**************************************************


public class Error
{
	/// <summary>A broad categorization of the error. Safe for programatic use.</summary>
	[JsonPropertyName("error_type")]
	public string error_type { get; set; }

	/// <summary>The particular error code. Safe for programmatic use.</summary>
	[JsonPropertyName("error_code")]
	public string error_code { get; set; }

	/// <summary>A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use.</summary>
	[JsonPropertyName("error_message")]
	public string error_message { get; set; }

	/// <summary>A user-friendly representation of the error code. `null` if the error is not related to user action.

This may change over time and is not safe for programmatic use.</summary>
	[JsonPropertyName("display_message")]
	public string display_message { get; set; }

	/// <summary>A unique ID identifying the request, to be used for troubleshooting purposes. This field will be omitted in errors provided by webhooks.</summary>
	[JsonPropertyName("request_id")]
	public string request_id { get; set; }

	/// <summary>In the Assets product, a request can pertain to more than one Item. If an error is returned for such a request, `causes` will return an array of errors containing a breakdown of these errors on the individual Item level, if any can be identified.

`causes` will only be provided for the `error_type` `ASSET_REPORT_ERROR`.</summary>
	[JsonPropertyName("causes")]
	public [] causes { get; set; }

	/// <summary>The HTTP status code associated with the error. This will only be returned in the response body when the error information is provided via a webhook.</summary>
	[JsonPropertyName("status")]
	public string status { get; set; }

	/// <summary>The URL of a Plaid documentation page with more information about the error</summary>
	[JsonPropertyName("documentation_url")]
	public string documentation_url { get; set; }

	/// <summary>Suggested steps for resolving the error</summary>
	[JsonPropertyName("suggested_action")]
	public string suggested_action { get; set; }

}


== Item.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 24: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 24: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 24: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 30: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 30: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 30: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 30: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1003] Line 30: Syntax error, ',' expected
[CS1002] Line 30: ; expected
[CS1003] Line 30: Syntax error, ',' expected
[CS1002] Line 30: ; expected
[CS1003] Line 30: Syntax error, '(' expected
[CS1003] Line 30: Syntax error, ',' expected
[CS1001] Line 30: Identifier expected
[CS1003] Line 30: Syntax error, ',' expected
[CS1001] Line 30: Identifier expected
[CS1003] Line 30: Syntax error, ',' expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1001] Line 31: Identifier expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1031] Line 32: Type expected
[CS1001] Line 32: Identifier expected
[CS1026] Line 32: ) expected
[CS1002] Line 32: ; expected
[CS1056] Line 37: Unexpected character '`'
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 37: Unexpected character '`'
[CS1519] Line 37: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 37: ; expected
[CS1003] Line 37: Syntax error, ',' expected
[CS1002] Line 37: ; expected
[CS1056] Line 39: Unexpected character '`'
[CS1002] Line 39: ; expected
[CS1519] Line 39: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 39: Unexpected character '`'
[CS1519] Line 39: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 39: ; expected
[CS1002] Line 39: ; expected
[CS1002] Line 39: ; expected
[CS1585] Line 41: Member modifier 'public' must precede the member type and name
[CS1031] Line 39: Type expected
[CS1003] Line 39: Syntax error, ',' expected
[CS1003] Line 39: Syntax error, ',' expected

**************************************************


public class Item
{
	/// <summary>The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.</summary>
	[JsonPropertyName("item_id")]
	public string item_id { get; set; }

	/// <summary>The Plaid Institution ID associated with the Item. Field is `null` for Items created via Same Day Micro-deposits.</summary>
	[JsonPropertyName("institution_id")]
	public string institution_id { get; set; }

	/// <summary>The URL registered to receive webhooks for the Item.</summary>
	[JsonPropertyName("webhook")]
	public string webhook { get; set; }

	/// <summary>We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.</summary>
	[JsonPropertyName("error")]
	public Error error { get; set; }

	/// <summary>A list of products available for the Item that have not yet been accessed.</summary>
	[JsonPropertyName("available_products")]
	public Products[] available_products { get; set; }

	/// <summary>A list of products that have been billed for the Item. Note - `billed_products` is populated in all environments but only requests in Production are billed.
</summary>
	[JsonPropertyName("billed_products")]
	public Products[] billed_products { get; set; }

	/// <summary>The RFC 3339 timestamp after which the consent provided by the end user will expire. Upon consent expiration, the item will enter the `ITEM_LOGIN_REQUIRED` error state. To circumvent the `ITEM_LOGIN_REQUIRED` error and maintain continuous consent, the end user can reauthenticate via Link’s update mode in advance of the consent expiration time.

Note - This is only relevant for certain OAuth-based institutions. For all other institutions, this field will be null.
</summary>
	[JsonPropertyName("consent_expiration_time")]
	public DateTime consent_expiration_time { get; set; }

	/// <summary>Indicates whether an Item requires user interaction to be updated, which can be the case for Items with some forms of two-factor authentication.

`background` - Item can be updated in the background

`user_present_required` - Item requires user interaction to be updated</summary>
	[JsonPropertyName("update_type")]
	public string update_type { get; set; }

}


== LinkTokenCreateResponse.cs
==================================================

public class LinkTokenCreateResponse
{
	/// <summary>A `link_token`, which can be supplied to Link in order to initialize it and receive a `public_token`, which can be exchanged for an `access_token`.</summary>
	[JsonPropertyName("link_token")]
	public string link_token { get; set; }

	/// <summary>The expiration date for the `link_token`, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format. A `link_token` created to generate a `public_token` that will be exchanged for a new `access_token` expires after 4 hours. A `link_token` created for an existing Item (such as when updating an existing `access_token` by launching Link in update mode) expires after 30 minutes.</summary>
	[JsonPropertyName("expiration")]
	public DateTime expiration { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== LinkTokenGetMetadataResponse.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 20: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 20: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 20: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class LinkTokenGetMetadataResponse
{
	/// <summary>The `products` specified in the `/link/token/create` call.</summary>
	[JsonPropertyName("initial_products")]
	public Products[] initial_products { get; set; }

	/// <summary>The `webhook` specified in the `/link/token/create` call.</summary>
	[JsonPropertyName("webhook")]
	public string webhook { get; set; }

	/// <summary>The `country_codes` specified in the `/link/token/create` call.</summary>
	[JsonPropertyName("country_codes")]
	public CountryCode[] country_codes { get; set; }

	/// <summary>The `language` specified in the `/link/token/create` call.</summary>
	[JsonPropertyName("language")]
	public string language { get; set; }

	/// <summary>The `account_filters` specified in the original call to `/link/token/create`.
</summary>
	[JsonPropertyName("account_filters")]
	public AccountFiltersResponse account_filters { get; set; }

	/// <summary>The `redirect_uri` specified in the `/link/token/create` call.</summary>
	[JsonPropertyName("redirect_uri")]
	public string redirect_uri { get; set; }

	/// <summary>The `client_name` specified in the `/link/token/create` call.</summary>
	[JsonPropertyName("client_name")]
	public string client_name { get; set; }

}


== LinkTokenGetResponse.cs
==================================================

public class LinkTokenGetResponse
{
	/// <summary>A `link_token`, which can be supplied to Link in order to initialize it and receive a `public_token`, which can be exchanged for an `access_token`.</summary>
	[JsonPropertyName("link_token")]
	public string link_token { get; set; }

	/// <summary>The creation timestamp for the `link_token`, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.</summary>
	[JsonPropertyName("created_at")]
	public DateTime created_at { get; set; }

	/// <summary>The expiration timestamp for the `link_token`, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.</summary>
	[JsonPropertyName("expiration")]
	public DateTime expiration { get; set; }

	/// <summary>An object specifying the arguments originally provided to the `/link/token/create` call.</summary>
	[JsonPropertyName("metadata")]
	public LinkTokenGetMetadataResponse metadata { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== LinkTokenCreateRequestAccountSubtypes.cs
==================================================

public class LinkTokenCreateRequestAccountSubtypes
{
	/// <summary>A filter to apply to `depository`-type accounts</summary>
	[JsonPropertyName("depository")]
	public string depository { get; set; }

	/// <summary>A filter to apply to `credit`-type accounts</summary>
	[JsonPropertyName("credit")]
	public string credit { get; set; }

	/// <summary>A filter to apply to `loan`-type accounts</summary>
	[JsonPropertyName("loan")]
	public string loan { get; set; }

	/// <summary>A filter to apply to `investment`-type accounts</summary>
	[JsonPropertyName("investment")]
	public string investment { get; set; }

}


== LinkTokenCreateRequestUpdate.cs
==================================================

public class LinkTokenCreateRequestUpdate
{
	/// <summary>If `true`, enables [update mode with Account Select](https://plaid.com/docs/link/update-mode/#using-update-mode-to-request-new-accounts).</summary>
	[JsonPropertyName("account_selection_enabled")]
	public bool account_selection_enabled { get; set; }

}


== LinkTokenCreateRequestUser.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token '’' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '’'
[CS1519] Line 17: Invalid token '’' in class, record, struct, or interface member declaration
[CS1002] Line 17: ; expected
[CS1044] Line 17: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1003] Line 19: Syntax error, '(' expected
[CS1001] Line 19: Identifier expected
[CS1056] Line 19: Unexpected character '`'
[CS1001] Line 19: Identifier expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1001] Line 19: Identifier expected
[CS1056] Line 19: Unexpected character '`'
[CS1003] Line 20: Syntax error, ',' expected
[CS1001] Line 20: Identifier expected
[CS1003] Line 20: Syntax error, ',' expected
[CS1003] Line 20: Syntax error, ',' expected
[CS1031] Line 21: Type expected
[CS1001] Line 21: Identifier expected
[CS1026] Line 21: ) expected
[CS1002] Line 21: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1519] Line 30: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1519] Line 30: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1519] Line 30: Invalid token '’' in class, record, struct, or interface member declaration
[CS1056] Line 30: Unexpected character '’'
[CS1519] Line 30: Invalid token '’' in class, record, struct, or interface member declaration
[CS1002] Line 30: ; expected
[CS1044] Line 30: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1002] Line 30: ; expected
[CS1003] Line 32: Syntax error, '(' expected
[CS1001] Line 32: Identifier expected
[CS1056] Line 32: Unexpected character '`'
[CS1001] Line 32: Identifier expected
[CS1003] Line 32: Syntax error, ',' expected
[CS1003] Line 32: Syntax error, ',' expected
[CS1001] Line 32: Identifier expected
[CS1056] Line 32: Unexpected character '`'
[CS1003] Line 32: Syntax error, ',' expected
[CS1001] Line 32: Identifier expected
[CS1003] Line 32: Syntax error, ',' expected
[CS1003] Line 32: Syntax error, ',' expected
[CS1031] Line 33: Type expected
[CS1001] Line 33: Identifier expected
[CS1026] Line 33: ) expected
[CS1002] Line 33: ; expected

**************************************************


public class LinkTokenCreateRequestUser
{
	/// <summary>A unique ID representing the end user. Typically this will be a user ID number from your application. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`. It is currently used as a means of searching logs for the given user in the Plaid Dashboard.</summary>
	[JsonPropertyName("client_user_id")]
	public string client_user_id { get; set; }

	/// <summary>The user's full legal name. This is an optional field used in the [returning user experience](https://plaid.com/docs/link/returning-user) to associate Items to the user.</summary>
	[JsonPropertyName("legal_name")]
	public string legal_name { get; set; }

	/// <summary>The user's phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format. This field is optional, but required to enable the [returning user experience](https://plaid.com/docs/link/returning-user).</summary>
	[JsonPropertyName("phone_number")]
	public string phone_number { get; set; }

	/// <summary>The date and time the phone number was verified in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDThh:mm:ssZ`). This field is optional, but required to enable any [returning user experience](https://plaid.com/docs/link/returning-user).

 Only pass a verification time for a phone number that you have verified. If you have performed verification but don’t have the time, you may supply a signal value of the start of the UNIX epoch.

 Example: `2020-01-01T00:00:00Z`
</summary>
	[JsonPropertyName("phone_number_verified_time")]
	public DateTime phone_number_verified_time { get; set; }

	/// <summary>The user's email address. This field is optional, but required to enable the [pre-authenticated returning user flow](https://plaid.com/docs/link/returning-user/#enabling-the-returning-user-experience).</summary>
	[JsonPropertyName("email_address")]
	public string email_address { get; set; }

	/// <summary>The date and time the email address was verified in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDThh:mm:ssZ`). This is an optional field used in the [returning user experience](https://plaid.com/docs/link/returning-user).

 Only pass a verification time for an email address that you have verified. If you have performed verification but don’t have the time, you may supply a signal value of the start of the UNIX epoch.

 Example: `2020-01-01T00:00:00Z`</summary>
	[JsonPropertyName("email_address_verified_time")]
	public DateTime email_address_verified_time { get; set; }

	/// <summary>To be provided in the format "ddd-dd-dddd". This field is optional and will support not-yet-implemented functionality for new products.</summary>
	[JsonPropertyName("ssn")]
	public string ssn { get; set; }

	/// <summary>To be provided in the format "yyyy-mm-dd". This field is optional and will support not-yet-implemented functionality for new products.</summary>
	[JsonPropertyName("date_of_birth")]
	public string date_of_birth { get; set; }

}


== LinkTokenCreateRequestAuth.cs
==================================================

public class LinkTokenCreateRequestAuth
{
	/// <summary>The optional Auth flow to use. Currently only used to enable Flexible Auth.</summary>
	[JsonPropertyName("flow_type")]
	public string flow_type { get; set; }

}


== LinkTokenCreateRequestDepositSwitch.cs
==================================================

public class LinkTokenCreateRequestDepositSwitch
{
	/// <summary>The `deposit_switch_id` provided by the `/deposit_switch/create` endpoint.</summary>
	[JsonPropertyName("deposit_switch_id")]
	public string deposit_switch_id { get; set; }

}


== LinkTokenCreateRequestPaymentInitiation.cs
==================================================

public class LinkTokenCreateRequestPaymentInitiation
{
	/// <summary>The `payment_id` provided by the `/payment_initiation/payment/create` endpoint.</summary>
	[JsonPropertyName("payment_id")]
	public string payment_id { get; set; }

}


== LinkTokenEUConfig.cs
==================================================

public class LinkTokenEUConfig
{
	/// <summary>If `true`, open Link without an initial UI. Defaults to `false`.</summary>
	[JsonPropertyName("headless")]
	public bool headless { get; set; }

}


== LinkTokenAccountFilters.cs
==================================================

public class LinkTokenAccountFilters
{
	/// <summary>A filter to apply to `depository`-type accounts</summary>
	[JsonPropertyName("depository")]
	public DepositoryFilter depository { get; set; }

	/// <summary>A filter to apply to `credit`-type accounts</summary>
	[JsonPropertyName("credit")]
	public CreditFilter credit { get; set; }

	/// <summary>A filter to apply to `loan`-type accounts</summary>
	[JsonPropertyName("loan")]
	public LoanFilter loan { get; set; }

	/// <summary>A filter to apply to `investment`-type accounts</summary>
	[JsonPropertyName("investment")]
	public InvestmentFilter investment { get; set; }

}


== LinkTokenCreateRequest.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token ':' in class, record, struct, or interface member declaration
[CS1056] Line 18: Unexpected character '`'
[CS1012] Line 18: Too many characters in character literal
[CS1056] Line 18: Unexpected character '`'
[CS1002] Line 18: ; expected
[CS1519] Line 19: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 19: Unexpected character '`'
[CS1012] Line 19: Too many characters in character literal
[CS1056] Line 19: Unexpected character '`'
[CS1002] Line 19: ; expected
[CS1519] Line 20: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 20: Unexpected character '`'
[CS1012] Line 20: Too many characters in character literal
[CS1056] Line 20: Unexpected character '`'
[CS1002] Line 20: ; expected
[CS1519] Line 21: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 21: Unexpected character '`'
[CS1012] Line 21: Too many characters in character literal
[CS1056] Line 21: Unexpected character '`'
[CS1002] Line 21: ; expected
[CS1519] Line 23: Invalid token 'using' in class, record, struct, or interface member declaration
[CS1513] Line 23: } expected
[CS8803] Line 23: Top-level statements must precede namespace and type declarations.
[CS1002] Line 23: ; expected
[CS0116] Line 23: A namespace cannot directly contain members such as fields, methods or statements
[CS1022] Line 23: Type or namespace definition, or end-of-file expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1044] Line 23: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1003] Line 23: Syntax error, ',' expected
[CS1002] Line 23: ; expected
[CS1003] Line 29: Syntax error, ',' expected
[CS1044] Line 29: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1003] Line 29: Syntax error, ',' expected
[CS1001] Line 29: Identifier expected
[CS1003] Line 29: Syntax error, ',' expected
[CS1001] Line 29: Identifier expected
[CS0650] Line 29: Bad array declarator: To declare a managed array the rank specifier precedes the variable's identifier. To declare a fixed size buffer field, use the fixed keyword before the field type.
[CS0270] Line 29: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 29: Syntax error, ',' expected
[CS0270] Line 29: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 29: Syntax error, ',' expected
[CS0270] Line 29: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 29: Syntax error, ',' expected
[CS0270] Line 29: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 29: Syntax error, ',' expected
[CS0270] Line 29: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 29: Syntax error, ',' expected
[CS0270] Line 29: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 29: Syntax error, ',' expected
[CS1002] Line 29: ; expected
[CS1022] Line 29: Type or namespace definition, or end-of-file expected
[CS0116] Line 31: A namespace cannot directly contain members such as fields, methods or statements
[CS1002] Line 31: ; expected
[CS0116] Line 31: A namespace cannot directly contain members such as fields, methods or statements
[CS1022] Line 31: Type or namespace definition, or end-of-file expected
[CS1003] Line 31: Syntax error, ',' expected
[CS1056] Line 31: Unexpected character '`'
[CS1056] Line 31: Unexpected character '`'
[CS1056] Line 31: Unexpected character '`'
[CS1056] Line 31: Unexpected character '`'
[CS1044] Line 31: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1003] Line 31: Syntax error, ',' expected
[CS1056] Line 31: Unexpected character '`'
[CS1056] Line 31: Unexpected character '`'
[CS1002] Line 33: ; expected
[CS1002] Line 33: ; expected
[CS1003] Line 33: Syntax error, ',' expected
[CS1003] Line 33: Syntax error, ',' expected
[CS1044] Line 33: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1003] Line 33: Syntax error, ',' expected
[CS1001] Line 33: Identifier expected
[CS1056] Line 33: Unexpected character '`'
[CS1056] Line 33: Unexpected character '`'
[CS1056] Line 33: Unexpected character '`'
[CS1002] Line 33: ; expected
[CS1001] Line 33: Identifier expected
[CS1012] Line 33: Too many characters in character literal
[CS1056] Line 33: Unexpected character '`'
[CS1022] Line 33: Type or namespace definition, or end-of-file expected
[CS1525] Line 33: Invalid expression term '<'
[CS1525] Line 33: Invalid expression term '/'
[CS1525] Line 33: Invalid expression term '['
[CS1002] Line 34: ; expected
[CS1056] Line 43: Unexpected character '`'
[CS0116] Line 43: A namespace cannot directly contain members such as fields, methods or statements
[CS1056] Line 43: Unexpected character '`'
[CS1022] Line 43: Type or namespace definition, or end-of-file expected
[CS1056] Line 43: Unexpected character '`'
[CS0116] Line 43: A namespace cannot directly contain members such as fields, methods or statements
[CS1056] Line 43: Unexpected character '`'
[CS1022] Line 43: Type or namespace definition, or end-of-file expected
[CS1056] Line 43: Unexpected character '`'
[CS0116] Line 43: A namespace cannot directly contain members such as fields, methods or statements
[CS1056] Line 43: Unexpected character '`'
[CS1022] Line 43: Type or namespace definition, or end-of-file expected
[CS1056] Line 43: Unexpected character '`'
[CS0116] Line 43: A namespace cannot directly contain members such as fields, methods or statements
[CS1056] Line 43: Unexpected character '`'
[CS1022] Line 43: Type or namespace definition, or end-of-file expected
[CS1056] Line 43: Unexpected character '`'
[CS0116] Line 43: A namespace cannot directly contain members such as fields, methods or statements
[CS1056] Line 43: Unexpected character '`'
[CS1022] Line 43: Type or namespace definition, or end-of-file expected
[CS1056] Line 43: Unexpected character '`'
[CS0116] Line 43: A namespace cannot directly contain members such as fields, methods or statements
[CS1056] Line 43: Unexpected character '`'
[CS1022] Line 43: Type or namespace definition, or end-of-file expected
[CS1056] Line 43: Unexpected character '`'
[CS0116] Line 43: A namespace cannot directly contain members such as fields, methods or statements
[CS1056] Line 43: Unexpected character '`'
[CS1022] Line 43: Type or namespace definition, or end-of-file expected
[CS1056] Line 43: Unexpected character '`'
[CS0116] Line 43: A namespace cannot directly contain members such as fields, methods or statements
[CS1056] Line 43: Unexpected character '`'
[CS1022] Line 43: Type or namespace definition, or end-of-file expected
[CS1056] Line 43: Unexpected character '`'
[CS0116] Line 43: A namespace cannot directly contain members such as fields, methods or statements
[CS1056] Line 43: Unexpected character '`'
[CS1022] Line 43: Type or namespace definition, or end-of-file expected
[CS1056] Line 43: Unexpected character '`'
[CS0116] Line 43: A namespace cannot directly contain members such as fields, methods or statements
[CS1056] Line 43: Unexpected character '`'
[CS1056] Line 45: Unexpected character '`'
[CS0116] Line 45: A namespace cannot directly contain members such as fields, methods or statements
[CS1056] Line 45: Unexpected character '`'
[CS1525] Line 45: Invalid expression term 'is'
[CS1002] Line 45: ; expected
[CS1044] Line 45: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1003] Line 45: Syntax error, ',' expected
[CS1003] Line 47: Syntax error, ',' expected
[CS1003] Line 47: Syntax error, ',' expected
[CS0650] Line 47: Bad array declarator: To declare a managed array the rank specifier precedes the variable's identifier. To declare a fixed size buffer field, use the fixed keyword before the field type.
[CS0270] Line 47: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 47: Syntax error, ',' expected
[CS0270] Line 47: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 47: Syntax error, ',' expected
[CS0270] Line 47: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 47: Syntax error, ',' expected
[CS0270] Line 47: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 47: Syntax error, ',' expected
[CS0270] Line 47: Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
[CS1003] Line 47: Syntax error, ',' expected
[CS1002] Line 47: ; expected
[CS1022] Line 47: Type or namespace definition, or end-of-file expected
[CS1044] Line 49: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1003] Line 49: Syntax error, ',' expected
[CS1044] Line 49: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1003] Line 49: Syntax error, ',' expected
[CS1056] Line 49: Unexpected character '`'
[CS1056] Line 49: Unexpected character '`'
[CS1044] Line 49: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1003] Line 49: Syntax error, ',' expected
[CS1056] Line 49: Unexpected character '`'
[CS1056] Line 49: Unexpected character '`'
[CS1044] Line 51: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1003] Line 51: Syntax error, ',' expected
[CS1003] Line 51: Syntax error, ',' expected
[CS1044] Line 51: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1003] Line 51: Syntax error, ',' expected
[CS1044] Line 51: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1003] Line 51: Syntax error, ',' expected
[CS1056] Line 51: Unexpected character '`'
[CS1056] Line 51: Unexpected character '`'
[CS1002] Line 51: ; expected
[CS1002] Line 77: ; expected
[CS1002] Line 77: ; expected
[CS1022] Line 77: Type or namespace definition, or end-of-file expected
[CS1003] Line 77: Syntax error, ',' expected
[CS1002] Line 78: ; expected
[CS1022] Line 110: Type or namespace definition, or end-of-file expected

**************************************************


public class LinkTokenCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The name of your application, as it should be displayed in Link. Maximum length of 30 characters.</summary>
	[JsonPropertyName("client_name")]
	public string client_name { get; set; }

	/// <summary>The language that Link should be displayed in.

Supported languages are:
- English (`'en'`)
- French (`'fr'`)
- Spanish (`'es'`)
- Dutch (`'nl'`)

When using a Link customization, the language configured here must match the setting in the customization, or the customization will not be applied.</summary>
	[JsonPropertyName("language")]
	public string language { get; set; }

	/// <summary>Specify an array of Plaid-supported country codes using the ISO-3166-1 alpha-2 country code standard. Institutions from all listed countries will be shown.  Supported country codes are: `US`, `CA`, `ES`, `FR`, `GB`, `IE`, `NL`.

If Link is launched with multiple country codes, only products that you are enabled for in all countries will be used by Link. Note that while all countries are enabled by default in Sandbox and Development, in Production only US and Canada are enabled by default. To gain access to European institutions in the Production environment, [file a product access Support ticket](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/request-product-access) via the Plaid dashboard. If you initialize with a European country code, your users will see the European consent panel during the Link flow.

If using a Link customization, make sure the country codes in the customization match those specified in `country_codes`. If both `country_codes` and a Link customization are used, the value in `country_codes` may override the value in the customization.

If using the Auth features Instant Match, Same-day Micro-deposits, or Automated Micro-deposits, `country_codes` must be set to `['US']`.</summary>
	[JsonPropertyName("country_codes")]
	public CountryCode[] country_codes { get; set; }

	/// <summary>An object specifying information about the end user who will be linking their account.</summary>
	[JsonPropertyName("user")]
	public LinkTokenCreateRequestUser user { get; set; }

	/// <summary>List of Plaid product(s) you wish to use. If launching Link in update mode, should be omitted; required otherwise. Valid products are:

`transactions`, `auth`, `identity`, `assets`, `investments`, `liabilities`, `payment_initiation`, `deposit_switch`, `income_verification`, `transfer`

`balance` is *not* a valid value, the Balance product does not require explicit initalization and will automatically be initialized when any other product is initialized.

Only institutions that support *all* requested products will be shown in Link; to maximize the number of institutions listed, it is recommended to initialize Link with the minimal product set required for your use case. Additional products can be added after Link initialization by calling the relevant endpoints. For details and exceptions, see [Choosing when to initialize products](https://plaid.com/docs/link/best-practices/#choosing-when-to-initialize-products).

Note that, unless you have opted to disable Instant Match support, institutions that support Instant Match will also be shown in Link if `auth` is specified as a product, even though these institutions do not contain `auth` in their product array.

In Production, you will be billed for each product that you specify when initializing Link. Note that a product cannot be removed from an Item once the Item has been initialized with that product. To stop billing on an Item for subscription-based products, such as Liabilities, Investments, and Transactions, remove the Item via `/item/remove`.</summary>
	[JsonPropertyName("products")]
	public Products[] products { get; set; }

	/// <summary>The destination URL to which any webhooks should be sent.</summary>
	[JsonPropertyName("webhook")]
	public string webhook { get; set; }

	/// <summary>The `access_token` associated with the Item to update, used when updating or modifying an existing `access_token`. Used when launching Link in update mode, when completing the Same-day (manual) Micro-deposit flow, or (optionally) when initializing Link as part of the Payment Initiation (UK and Europe) flow.</summary>
	[JsonPropertyName("access_token")]
	public string access_token { get; set; }

	/// <summary>The name of the Link customization from the Plaid Dashboard to be applied to Link. If not specified, the `default` customization will be used. When using a Link customization, the language in the customization must match the language selected via the `language` parameter, and the countries in the customization should match the country codes selected via `country_codes`.</summary>
	[JsonPropertyName("link_customization_name")]
	public string link_customization_name { get; set; }

	/// <summary>A URI indicating the destination where a user should be forwarded after completing the Link flow; used to support OAuth authentication flows when launching Link in the browser or via a webview. The `redirect_uri` should not contain any query parameters. When used in Production or Development, must be an https URI. To specify any subdomain, use `*` as a wildcard character, e.g. `https://*.example.com/oauth.html`. If `android_package_name` is specified, this field should be left blank.  Note that any redirect URI must also be added to the Allowed redirect URIs list in the [developer dashboard](https://dashboard.plaid.com/team/api).</summary>
	[JsonPropertyName("redirect_uri")]
	public string redirect_uri { get; set; }

	/// <summary>The name of your app's Android package. Required if using the `link_token` to initialize Link on Android. When creating a `link_token` for initializing Link on other platforms, this field must be left blank. Any package name specified here must also be added to the Allowed Android package names setting on the [developer dashboard](https://dashboard.plaid.com/team/api). </summary>
	[JsonPropertyName("android_package_name")]
	public string android_package_name { get; set; }

	/// <summary>By default, Link will provide limited account filtering: it will only display Institutions that are compatible with all products supplied in the `products` parameter of `/link/token/create`, and, if `auth` is specified in the `products` array, will also filter out accounts other than `checking` and `savings` accounts on the Account Select pane. You can further limit the accounts shown in Link by using `account_filters` to specify the account subtypes to be shown in Link. Only the specified subtypes will be shown. This filtering applies to both the Account Select view (if enabled) and the Institution Select view. Institutions that do not support the selected subtypes will be omitted from Link. To indicate that all subtypes should be shown, use the value `"all"`. If the `account_filters` filter is used, any account type for which a filter is not specified will be entirely omitted from Link. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#accounts-schema).

For institutions using OAuth, the filter will not affect the list of accounts shown by the bank in the OAuth window.
</summary>
	[JsonPropertyName("account_filters")]
	public LinkTokenAccountFilters account_filters { get; set; }

	/// <summary>Configuration parameters for EU flows</summary>
	[JsonPropertyName("eu_config")]
	public LinkTokenEUConfig eu_config { get; set; }

	/// <summary>Used for certain Europe-only configurations, as well as certain legacy use cases in other regions.</summary>
	[JsonPropertyName("institution_id")]
	public string institution_id { get; set; }

	/// <summary>Specifies options for initializing Link for use with the Payment Initiation (Europe) product. This field is required if `payment_initiation` is included in the `products` array.</summary>
	[JsonPropertyName("payment_initiation")]
	public LinkTokenCreateRequestPaymentInitiation payment_initiation { get; set; }

	/// <summary>Specifies options for initializing Link for use with the Deposit Switch (beta) product. This field is required if `deposit_switch` is included in the `products` array.</summary>
	[JsonPropertyName("deposit_switch")]
	public LinkTokenCreateRequestDepositSwitch deposit_switch { get; set; }

	/// <summary>Specifies options for initializing Link for use with the Income (beta) product. This field is required if `income_verification` is included in the `products` array.</summary>
	[JsonPropertyName("income_verification")]
	public LinkTokenCreateRequestIncomeVerification income_verification { get; set; }

	/// <summary>Specifies options for initializing Link for use with the Auth product. This field is currently only required if using the Flexible Auth product (currently in closed beta).</summary>
	[JsonPropertyName("auth")]
	public LinkTokenCreateRequestAuth auth { get; set; }

	/// <summary>Specifies options for initializing Link for [update mode](https://plaid.com/docs/link/update-mode).</summary>
	[JsonPropertyName("update")]
	public LinkTokenCreateRequestUpdate update { get; set; }

}


== LinkTokenGetRequest.cs
==================================================

public class LinkTokenGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>A `link_token` from a previous invocation of `/link/token/create`</summary>
	[JsonPropertyName("link_token")]
	public string link_token { get; set; }

}


== DepositSwitchTokenCreateResponse.cs
==================================================

public class DepositSwitchTokenCreateResponse
{
	/// <summary>Deposit switch token, used to initialize Link for the Deposit Switch product</summary>
	[JsonPropertyName("deposit_switch_token")]
	public string deposit_switch_token { get; set; }

	/// <summary>Expiration time of the token, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format</summary>
	[JsonPropertyName("deposit_switch_token_expiration_time")]
	public string deposit_switch_token_expiration_time { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== DepositSwitchTokenCreateRequest.cs
==================================================

public class DepositSwitchTokenCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The ID of the deposit switch</summary>
	[JsonPropertyName("deposit_switch_id")]
	public string deposit_switch_id { get; set; }

}


== ItemImportResponse.cs
==================================================

public class ItemImportResponse
{
	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== ItemImportRequestUserAuth.cs
==================================================

public class ItemImportRequestUserAuth
{
	/// <summary>Opaque user identifier</summary>
	[JsonPropertyName("user_id")]
	public string user_id { get; set; }

	/// <summary>Authorization token Plaid will use to aggregate this user’s accounts</summary>
	[JsonPropertyName("auth_token")]
	public string auth_token { get; set; }

}


== ItemImportRequestOptions.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 4: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class ItemImportRequestOptions
{
	/// <summary>Specifies a webhook URL to associate with an Item. Plaid fires a webhook if credentials fail.
</summary>
	[JsonPropertyName("webhook")]
	public string webhook { get; set; }

}


== ItemImportRequest.cs
==================================================

public class ItemImportRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>Array of product strings</summary>
	[JsonPropertyName("products")]
	public Products[] products { get; set; }

	/// <summary>Object of user ID and auth token pair, permitting Plaid to aggregate a user’s accounts</summary>
	[JsonPropertyName("user_auth")]
	public ItemImportRequestUserAuth user_auth { get; set; }

	/// <summary>An optional object to configure `/item/import` request.</summary>
	[JsonPropertyName("options")]
	public ItemImportRequestOptions options { get; set; }

}


== DepositSwitchCreateResponse.cs
==================================================

public class DepositSwitchCreateResponse
{
	/// <summary>ID of the deposit switch. This ID is persisted throughout the lifetime of the deposit switch.</summary>
	[JsonPropertyName("deposit_switch_id")]
	public string deposit_switch_id { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== DepositSwitchCreateRequestOptions.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 4: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class DepositSwitchCreateRequestOptions
{
	/// <summary>The URL registered to receive webhooks when the status of a deposit switch request has changed.
</summary>
	[JsonPropertyName("webhook")]
	public string webhook { get; set; }

	/// <summary>An array of access tokens corresponding to transaction items to use when attempting to match the user to their Payroll Provider. These tokens must be created by the same client id as the one creating the switch, and have access to the transactions product.</summary>
	[JsonPropertyName("transaction_item_access_tokens")]
	public AccessToken[] transaction_item_access_tokens { get; set; }

}


== DepositSwitchCreateRequest.cs
==================================================

public class DepositSwitchCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>Access token for the target Item, typically provided in the Import Item response. </summary>
	[JsonPropertyName("target_access_token")]
	public string target_access_token { get; set; }

	/// <summary>Plaid Account ID that specifies the target bank account. This account will become the recipient for a user's direct deposit.</summary>
	[JsonPropertyName("target_account_id")]
	public string target_account_id { get; set; }

	/// <summary>ISO-3166-1 alpha-2 country code standard.</summary>
	[JsonPropertyName("country_code")]
	public string country_code { get; set; }

	/// <summary>Options to configure the `/deposit_switch/create` request. If provided, cannot be `null`.</summary>
	[JsonPropertyName("options")]
	public DepositSwitchCreateRequestOptions options { get; set; }

}


== ProcessorApexProcessorTokenCreateRequest.cs
==================================================

public class ProcessorApexProcessorTokenCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>The `account_id` value obtained from the `onSuccess` callback in Link</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

}


== ProcessorStripeBankAccountTokenCreateResponse.cs
==================================================

public class ProcessorStripeBankAccountTokenCreateResponse
{
	/// <summary>A token that can be sent to Stripe for use in making API calls to Plaid</summary>
	[JsonPropertyName("stripe_bank_account_token")]
	public string stripe_bank_account_token { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== ProcessorStripeBankAccountTokenCreateRequest.cs
==================================================

public class ProcessorStripeBankAccountTokenCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>The `account_id` value obtained from the `onSuccess` callback in Link</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

}


== ProcessorTokenCreateResponse.cs
==================================================

public class ProcessorTokenCreateResponse
{
	/// <summary>The `processor_token` that can then be used by the Plaid partner to make API requests</summary>
	[JsonPropertyName("processor_token")]
	public string processor_token { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== ProcessorTokenCreateRequest.cs
==================================================

public class ProcessorTokenCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>The `account_id` value obtained from the `onSuccess` callback in Link</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The processor you are integrating with.</summary>
	[JsonPropertyName("processor")]
	public string processor { get; set; }

}


== InvestmentsTransactionsGetResponse.cs
==================================================

public class InvestmentsTransactionsGetResponse
{
	/// <summary>Metadata about the Item.</summary>
	[JsonPropertyName("item")]
	public Item item { get; set; }

	/// <summary>The accounts for which transaction history is being fetched.</summary>
	[JsonPropertyName("accounts")]
	public AccountBase[] accounts { get; set; }

	/// <summary>All securities for which there is a corresponding transaction being fetched.</summary>
	[JsonPropertyName("securities")]
	public Security[] securities { get; set; }

	/// <summary>The transactions being fetched</summary>
	[JsonPropertyName("investment_transactions")]
	public InvestmentTransaction[] investment_transactions { get; set; }

	/// <summary>The total number of transactions available within the date range specified. If `total_investment_transactions` is larger than the size of the `transactions` array, more transactions are available and can be fetched via manipulating the `offset` parameter.'</summary>
	[JsonPropertyName("total_investment_transactions")]
	public int total_investment_transactions { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== InvestmentsTransactionsGetRequestOptions.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 8: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 8: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 8: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class InvestmentsTransactionsGetRequestOptions
{
	/// <summary>An array of `account_ids` to retrieve for the Item.</summary>
	[JsonPropertyName("account_ids")]
	public string[] account_ids { get; set; }

	/// <summary>The number of transactions to fetch.
</summary>
	[JsonPropertyName("count")]
	public int count { get; set; }

	/// <summary>The number of transactions to skip when fetching transaction history</summary>
	[JsonPropertyName("offset")]
	public int offset { get; set; }

}


== InvestmentsTransactionsGetRequest.cs
==================================================

public class InvestmentsTransactionsGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>The earliest date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.</summary>
	[JsonPropertyName("start_date")]
	public string start_date { get; set; }

	/// <summary>The most recent date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.</summary>
	[JsonPropertyName("end_date")]
	public string end_date { get; set; }

	/// <summary>An optional object to filter `/investments/transactions/get` results. If provided, must be non-`null`.</summary>
	[JsonPropertyName("options")]
	public InvestmentsTransactionsGetRequestOptions options { get; set; }

}


== InvestmentsHoldingsGetResponse.cs
==================================================

public class InvestmentsHoldingsGetResponse
{
	/// <summary>The accounts associated with the Item</summary>
	[JsonPropertyName("accounts")]
	public AccountBase[] accounts { get; set; }

	/// <summary>The holdings belonging to investment accounts associated with the Item. Details of the securities in the holdings are provided in the `securities` field. </summary>
	[JsonPropertyName("holdings")]
	public Holding[] holdings { get; set; }

	/// <summary>Objects describing the securities held in the accounts associated with the Item. </summary>
	[JsonPropertyName("securities")]
	public Security[] securities { get; set; }

	/// <summary>Metadata about the Item.</summary>
	[JsonPropertyName("item")]
	public Item item { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== InvestmentHoldingsGetRequestOptions.cs
==================================================

public class InvestmentHoldingsGetRequestOptions
{
	/// <summary>An array of `account_id`s to retrieve for the Item. An error will be returned if a provided `account_id` is not associated with the Item.</summary>
	[JsonPropertyName("account_ids")]
	public string[] account_ids { get; set; }

}


== InvestmentsHoldingsGetRequest.cs
==================================================

public class InvestmentsHoldingsGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>An optional object to filter `/investments/holdings/get` results. If provided, must not be `null`.</summary>
	[JsonPropertyName("options")]
	public InvestmentHoldingsGetRequestOptions options { get; set; }

}


== AssetReportAuditCopyRemoveResponse.cs
==================================================

public class AssetReportAuditCopyRemoveResponse
{
	/// <summary>`true` if the Audit Copy was successfully removed.</summary>
	[JsonPropertyName("removed")]
	public bool removed { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== AssetReportAuditCopyRemoveRequest.cs
==================================================

public class AssetReportAuditCopyRemoveRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The `audit_copy_token` granting access to the Audit Copy you would like to revoke.</summary>
	[JsonPropertyName("audit_copy_token")]
	public string audit_copy_token { get; set; }

}


== AssetReportAuditCopyCreateResponse.cs
==================================================

public class AssetReportAuditCopyCreateResponse
{
	/// <summary>A token that can be shared with a third party auditor to allow them to obtain access to the Asset Report. This token should be stored securely.</summary>
	[JsonPropertyName("audit_copy_token")]
	public string audit_copy_token { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== AssetReportAuditCopyCreateRequest.cs
==================================================

public class AssetReportAuditCopyCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.</summary>
	[JsonPropertyName("asset_report_token")]
	public AssetReportToken asset_report_token { get; set; }

	/// <summary>The `auditor_id` of the third party with whom you would like to share the Asset Report.</summary>
	[JsonPropertyName("auditor_id")]
	public string auditor_id { get; set; }

}


== AssetReportPDFGetRequest.cs
==================================================

public class AssetReportPDFGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.</summary>
	[JsonPropertyName("asset_report_token")]
	public AssetReportToken asset_report_token { get; set; }

}


== AssetReportGetResponse.cs
==================================================

public class AssetReportGetResponse
{
	/// <summary>An object representing an Asset Report</summary>
	[JsonPropertyName("report")]
	public AssetReport report { get; set; }

	/// <summary>If the Asset Report generation was successful but identity information cannot be returned, this array will contain information about the errors causing identity information to be missing</summary>
	[JsonPropertyName("warnings")]
	public Warning[] warnings { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== AssetReportGetRequest.cs
==================================================

public class AssetReportGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.</summary>
	[JsonPropertyName("asset_report_token")]
	public AssetReportToken asset_report_token { get; set; }

	/// <summary>`true` if you would like to retrieve the Asset Report with Insights, `false` otherwise. This field defaults to `false` if omitted.</summary>
	[JsonPropertyName("include_insights")]
	public bool include_insights { get; set; }

}


== AssetReportFilterResponse.cs
==================================================

public class AssetReportFilterResponse
{
	/// <summary>A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.</summary>
	[JsonPropertyName("asset_report_token")]
	public AssetReportToken asset_report_token { get; set; }

	/// <summary>A unique ID identifying an Asset Report. Like all Plaid identifiers, this ID is case sensitive.</summary>
	[JsonPropertyName("asset_report_id")]
	public AssetReportId asset_report_id { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== AssetReportFilterRequest.cs
==================================================

public class AssetReportFilterRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.</summary>
	[JsonPropertyName("asset_report_token")]
	public AssetReportToken asset_report_token { get; set; }

	/// <summary>The accounts to exclude from the Asset Report, identified by `account_id`.</summary>
	[JsonPropertyName("account_ids_to_exclude")]
	public string[] account_ids_to_exclude { get; set; }

}


== AssetReportRemoveResponse.cs
==================================================

public class AssetReportRemoveResponse
{
	/// <summary>`true` if the Asset Report was successfully removed.</summary>
	[JsonPropertyName("removed")]
	public bool removed { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== AssetReportRemoveRequest.cs
==================================================

public class AssetReportRemoveRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.</summary>
	[JsonPropertyName("asset_report_token")]
	public AssetReportToken asset_report_token { get; set; }

}


== AssetReportRefreshResponse.cs
==================================================

public class AssetReportRefreshResponse
{
	/// <summary>A unique ID identifying an Asset Report. Like all Plaid identifiers, this ID is case sensitive.</summary>
	[JsonPropertyName("asset_report_id")]
	public AssetReportId asset_report_id { get; set; }

	/// <summary>A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.</summary>
	[JsonPropertyName("asset_report_token")]
	public AssetReportToken asset_report_token { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== AssetReportRefreshRequestOptions.cs
==================================================

public class AssetReportRefreshRequestOptions
{
	/// <summary>Client-generated identifier, which can be used by lenders to track loan applications.</summary>
	[JsonPropertyName("client_report_id")]
	public string client_report_id { get; set; }

	/// <summary>URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready.</summary>
	[JsonPropertyName("webhook")]
	public string webhook { get; set; }

	/// <summary>The user object allows you to provide additional information about the user to be appended to the Asset Report. All fields are optional. The `first_name`, `last_name`, and `ssn` fields are required if you would like the Report to be eligible for Fannie Mae’s Day 1 Certainty™ program.</summary>
	[JsonPropertyName("user")]
	public AssetReportUser user { get; set; }

}


== AssetReportRefreshRequest.cs
==================================================

public class AssetReportRefreshRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The `asset_report_token` returned by the original call to `/asset_report/create`</summary>
	[JsonPropertyName("asset_report_token")]
	public AssetReportRefreshAssetReportToken asset_report_token { get; set; }

	/// <summary>The maximum number of days of history to include in the Asset Report. Must be an integer. If not specified, the value from the original call to `/asset_report/create` will be used.</summary>
	[JsonPropertyName("days_requested")]
	public int days_requested { get; set; }

	/// <summary>An optional object to filter `/asset_report/refresh` results. If provided, cannot be `null`. If not specified, the `options` from the original call to `/asset_report/create` will be used.</summary>
	[JsonPropertyName("options")]
	public AssetReportRefreshRequestOptions options { get; set; }

}


== AssetReportCreateResponse.cs
==================================================

public class AssetReportCreateResponse
{
	/// <summary>A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.</summary>
	[JsonPropertyName("asset_report_token")]
	public AssetReportToken asset_report_token { get; set; }

	/// <summary>A unique ID identifying an Asset Report. Like all Plaid identifiers, this ID is case sensitive.</summary>
	[JsonPropertyName("asset_report_id")]
	public AssetReportId asset_report_id { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== AssetReportCreateRequestOptions.cs
==================================================

public class AssetReportCreateRequestOptions
{
	/// <summary>Client-generated identifier, which can be used by lenders to track loan applications.</summary>
	[JsonPropertyName("client_report_id")]
	public string client_report_id { get; set; }

	/// <summary>URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready.</summary>
	[JsonPropertyName("webhook")]
	public string webhook { get; set; }

	/// <summary>The user object allows you to provide additional information about the user to be appended to the Asset Report. All fields are optional. The `first_name`, `last_name`, and `ssn` fields are required if you would like the Report to be eligible for Fannie Mae’s Day 1 Certainty™ program.</summary>
	[JsonPropertyName("user")]
	public AssetReportUser user { get; set; }

}


== AssetReportCreateRequest.cs
==================================================

public class AssetReportCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>An array of access tokens corresponding to the Items that will be included in the report. The `assets` product must have been initialized for the Items during link; the Assets product cannot be added after initialization.</summary>
	[JsonPropertyName("access_tokens")]
	public AccessToken[] access_tokens { get; set; }

	/// <summary>The maximum integer number of days of history to include in the Asset Report. If using Fannie Mae Day 1 Certainty, `days_requested` must be at least 61 for new originations or at least 31 for refinancings.</summary>
	[JsonPropertyName("days_requested")]
	public int days_requested { get; set; }

	/// <summary>An optional object to filter `/asset_report/create` results. If provided, must be non-`null`. The optional `user` object is required for the report to be eligible for Fannie Mae's Day 1 Certainty program.</summary>
	[JsonPropertyName("options")]
	public AssetReportCreateRequestOptions options { get; set; }

}


== PaymentInitiationPaymentListResponse.cs
==================================================

public class PaymentInitiationPaymentListResponse
{
	/// <summary>An array of payments that have been created, associated with the given `client_id`.</summary>
	[JsonPropertyName("payments")]
	public PaymentInitiationPayment[] payments { get; set; }

	/// <summary>The value that, when used as the optional `cursor` parameter to `/payment_initiation/payment/list`, will return the next unreturned payment as its first payment.</summary>
	[JsonPropertyName("next_cursor")]
	public DateTime next_cursor { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== PaymentInitiationPaymentListRequest.cs
==================================================

public class PaymentInitiationPaymentListRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The maximum number of payments to return. If `count` is not specified, a maximum of 10 payments will be returned, beginning with the most recent payment before the cursor (if specified).</summary>
	[JsonPropertyName("count")]
	public int count { get; set; }

	/// <summary>A string in RFC 3339 format (i.e. "2019-12-06T22:35:49Z"). Only payments created before the cursor will be returned.</summary>
	[JsonPropertyName("cursor")]
	public DateTime cursor { get; set; }

}


== PaymentInitiationPaymentTokenCreateResponse.cs
==================================================

public class PaymentInitiationPaymentTokenCreateResponse
{
	/// <summary>A `payment_token` that can be provided to Link initialization to enter the payment initiation flow</summary>
	[JsonPropertyName("payment_token")]
	public string payment_token { get; set; }

	/// <summary>The date and time at which the token will expire, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format. A `payment_token` expires after 15 minutes.</summary>
	[JsonPropertyName("payment_token_expiration_time")]
	public DateTime payment_token_expiration_time { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== PaymentInitiationPaymentTokenCreateRequest.cs
==================================================

public class PaymentInitiationPaymentTokenCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The `payment_id` returned from `/payment_initiation/payment/create`.</summary>
	[JsonPropertyName("payment_id")]
	public string payment_id { get; set; }

}


== PaymentInitiationRefund.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1003] Line 13: Syntax error, ',' expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1003] Line 13: Syntax error, '[' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1001] Line 13: Identifier expected
[CS1056] Line 15: Unexpected character '`'
[CS1003] Line 15: Syntax error, ',' expected
[CS1001] Line 15: Identifier expected
[CS1056] Line 15: Unexpected character '`'
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1056] Line 17: Unexpected character '`'
[CS1003] Line 17: Syntax error, ',' expected
[CS1001] Line 17: Identifier expected
[CS1056] Line 17: Unexpected character '`'
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1056] Line 19: Unexpected character '`'
[CS1003] Line 19: Syntax error, ',' expected
[CS1001] Line 19: Identifier expected
[CS1056] Line 19: Unexpected character '`'
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1001] Line 19: Identifier expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1001] Line 19: Identifier expected
[CS1001] Line 19: Identifier expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1001] Line 19: Identifier expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1031] Line 20: Type expected
[CS1001] Line 20: Identifier expected
[CS1003] Line 20: Syntax error, ']' expected
[CS1514] Line 20: { expected
[CS1513] Line 20: } expected

**************************************************


public class PaymentInitiationRefund
{
	/// <summary>The ID of the refund. Like all Plaid identifiers, the `refund_id` is case sensitive.</summary>
	[JsonPropertyName("refund_id")]
	public string refund_id { get; set; }

	/// <summary>The amount and currency of a payment</summary>
	[JsonPropertyName("amount")]
	public PaymentAmount amount { get; set; }

	/// <summary>The status of the refund.

`PROCESSING`: The refund is currently being processed. The refund will automatically exit this state when processing is complete.

`INITIATED`: The refund has been successfully initiated.

`EXECUTED`: Indicates that the refund has been successfully executed.

`FAILED`: The refund has failed to be executed. This error is retryable once the root cause is resolved.</summary>
	[JsonPropertyName("status")]
	public string status { get; set; }

	/// <summary>The date and time of the last time the `status` was updated, in IS0 8601 format</summary>
	[JsonPropertyName("last_status_update")]
	public DateTime last_status_update { get; set; }

}


== PaymentInitiationPayment.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 13: Unexpected character '`'
[CS1519] Line 13: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 13: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1003] Line 13: Syntax error, '(' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1001] Line 13: Identifier expected
[CS1056] Line 15: Unexpected character '`'
[CS1003] Line 15: Syntax error, ',' expected
[CS1001] Line 15: Identifier expected
[CS1056] Line 15: Unexpected character '`'
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1001] Line 15: Identifier expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1001] Line 15: Identifier expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1001] Line 15: Identifier expected
[CS1001] Line 15: Identifier expected
[CS1056] Line 17: Unexpected character '`'
[CS1003] Line 17: Syntax error, ',' expected
[CS1001] Line 17: Identifier expected
[CS1056] Line 17: Unexpected character '`'
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1001] Line 17: Identifier expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1056] Line 19: Unexpected character '`'
[CS1003] Line 19: Syntax error, ',' expected
[CS1001] Line 19: Identifier expected
[CS1056] Line 19: Unexpected character '`'
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1003] Line 19: Syntax error, ',' expected
[CS1056] Line 21: Unexpected character '`'
[CS1003] Line 21: Syntax error, ',' expected
[CS1001] Line 21: Identifier expected
[CS1056] Line 21: Unexpected character '`'
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1003] Line 21: Syntax error, ',' expected
[CS1056] Line 23: Unexpected character '`'
[CS1003] Line 23: Syntax error, ',' expected
[CS1001] Line 23: Identifier expected
[CS1056] Line 23: Unexpected character '`'
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1001] Line 23: Identifier expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1003] Line 23: Syntax error, ',' expected
[CS1001] Line 23: Identifier expected
[CS1001] Line 23: Identifier expected
[CS1056] Line 25: Unexpected character '`'
[CS1003] Line 25: Syntax error, ',' expected
[CS1001] Line 25: Identifier expected
[CS1056] Line 25: Unexpected character '`'
[CS1003] Line 25: Syntax error, ',' expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1001] Line 25: Identifier expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1003] Line 25: Syntax error, ',' expected
[CS1001] Line 25: Identifier expected
[CS1001] Line 25: Identifier expected
[CS1056] Line 27: Unexpected character '`'
[CS1003] Line 27: Syntax error, ',' expected
[CS1001] Line 27: Identifier expected
[CS1056] Line 27: Unexpected character '`'
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1001] Line 27: Identifier expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1001] Line 27: Identifier expected
[CS1001] Line 27: Identifier expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1001] Line 27: Identifier expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1003] Line 27: Syntax error, ',' expected
[CS1031] Line 28: Type expected
[CS1001] Line 28: Identifier expected
[CS1026] Line 28: ) expected
[CS1002] Line 28: ; expected

**************************************************


public class PaymentInitiationPayment
{
	/// <summary>The ID of the payment. Like all Plaid identifiers, the `payment_id` is case sensitive.</summary>
	[JsonPropertyName("payment_id")]
	public string payment_id { get; set; }

	/// <summary>The amount and currency of a payment</summary>
	[JsonPropertyName("amount")]
	public PaymentAmount amount { get; set; }

	/// <summary>The status of the payment.

`PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.

`PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.

`PAYMENT_STATUS_INITIATED`: The payment has been successfully initiated and is considered complete.

`PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.

`PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.

`PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.

`PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.

`PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.</summary>
	[JsonPropertyName("status")]
	public string status { get; set; }

	/// <summary>The ID of the recipient</summary>
	[JsonPropertyName("recipient_id")]
	public string recipient_id { get; set; }

	/// <summary>A reference for the payment.</summary>
	[JsonPropertyName("reference")]
	public string reference { get; set; }

	/// <summary>The value of the reference sent to the bank after adjustment to pass bank validation rules.</summary>
	[JsonPropertyName("adjusted_reference")]
	public string adjusted_reference { get; set; }

	/// <summary>The date and time of the last time the `status` was updated, in IS0 8601 format</summary>
	[JsonPropertyName("last_status_update")]
	public DateTime last_status_update { get; set; }

	/// <summary>The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.</summary>
	[JsonPropertyName("schedule")]
	public ExternalPaymentScheduleGet schedule { get; set; }

	[JsonPropertyName("refund_details")]
	public ExternalPaymentRefundDetails refund_details { get; set; }

	[JsonPropertyName("bacs")]
	public SenderBACSNullable bacs { get; set; }

	/// <summary>The International Bank Account Number (IBAN) for the sender, if specified in the `/payment_initiation/payment/create` call.</summary>
	[JsonPropertyName("iban")]
	public string iban { get; set; }

	/// <summary>Initiated refunds associated with the payment.</summary>
	[JsonPropertyName("initiated_refunds")]
	public PaymentInitiationRefund[] initiated_refunds { get; set; }

	/// <summary>The EMI (E-Money Institution) account that this payment is associated with, if any. This EMI account is used as an intermediary account to enable Plaid to reconcile the settlement of funds for Payment Initiation requests.</summary>
	[JsonPropertyName("emi_account_id")]
	public string emi_account_id { get; set; }

}


== PaymentInitiationPaymentGetRequest.cs
==================================================

public class PaymentInitiationPaymentGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The `payment_id` returned from `/payment_initiation/payment/create`.</summary>
	[JsonPropertyName("payment_id")]
	public string payment_id { get; set; }

}


== ItemPublicTokenCreateResponse.cs
==================================================

public class ItemPublicTokenCreateResponse
{
	/// <summary>A `public_token` for the particular Item corresponding to the specified `access_token`</summary>
	[JsonPropertyName("public_token")]
	public string public_token { get; set; }

	[JsonPropertyName("expiration")]
	public DateTime expiration { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== ItemPublicTokenCreateRequest.cs
==================================================

public class ItemPublicTokenCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

}


== ItemPublicTokenExchangeResponse.cs
==================================================

public class ItemPublicTokenExchangeResponse
{
	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>The `item_id` value of the Item associated with the returned `access_token`</summary>
	[JsonPropertyName("item_id")]
	public string item_id { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== ItemPublicTokenExchangeRequest.cs
==================================================

public class ItemPublicTokenExchangeRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>Your `public_token`, obtained from the Link `onSuccess` callback or `/sandbox/item/public_token/create`.</summary>
	[JsonPropertyName("public_token")]
	public string public_token { get; set; }

}


== SandboxItemSetVerificationStatusResponse.cs
==================================================

public class SandboxItemSetVerificationStatusResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== SandboxItemSetVerificationStatusRequest.cs
==================================================

public class SandboxItemSetVerificationStatusRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>The `account_id` of the account whose verification status is to be modified</summary>
	[JsonPropertyName("account_id")]
	public string account_id { get; set; }

	/// <summary>The verification status to set the account to.</summary>
	[JsonPropertyName("verification_status")]
	public string verification_status { get; set; }

}


== SandboxItemResetLoginResponse.cs
==================================================

public class SandboxItemResetLoginResponse
{
	/// <summary>`true` if the call succeeded</summary>
	[JsonPropertyName("reset_login")]
	public bool reset_login { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== SandboxItemResetLoginRequest.cs
==================================================

public class SandboxItemResetLoginRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

}


== PaymentInitiationPaymentCreateResponse.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 9: Unexpected character '`'
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 9: Unexpected character '`'
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, '>' expected
[CS1003] Line 9: Syntax error, '(' expected
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1031] Line 10: Type expected
[CS1001] Line 10: Identifier expected
[CS1026] Line 10: ) expected
[CS1002] Line 10: ; expected

**************************************************


public class PaymentInitiationPaymentCreateResponse
{
	/// <summary>A unique ID identifying the payment</summary>
	[JsonPropertyName("payment_id")]
	public string payment_id { get; set; }

	/// <summary>For a payment returned by this endpoint, there is only one possible value:

`PAYMENT_STATUS_INPUT_NEEDED`: The initial phase of the payment</summary>
	[JsonPropertyName("status")]
	public string status { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== PaymentInitiationPaymentReverseRequest.cs
==================================================

public class PaymentInitiationPaymentReverseRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The ID of the payment to reverse</summary>
	[JsonPropertyName("payment_id")]
	public string payment_id { get; set; }

}


== PaymentInitiationPaymentCreateRequest.cs
==================================================

public class PaymentInitiationPaymentCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The ID of the recipient the payment is for.</summary>
	[JsonPropertyName("recipient_id")]
	public string recipient_id { get; set; }

	/// <summary>A reference for the payment. This must be an alphanumeric string with at most 18 characters and must not contain any special characters (since not all institutions support them).</summary>
	[JsonPropertyName("reference")]
	public string reference { get; set; }

	/// <summary>The amount and currency of a payment</summary>
	[JsonPropertyName("amount")]
	public PaymentAmount amount { get; set; }

	/// <summary>The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.</summary>
	[JsonPropertyName("schedule")]
	public ExternalPaymentScheduleRequest schedule { get; set; }

	/// <summary>Additional payment options</summary>
	[JsonPropertyName("options")]
	public ExternalPaymentOptions options { get; set; }

}


== PaymentInitiationRecipientListResponse.cs
==================================================

public class PaymentInitiationRecipientListResponse
{
	/// <summary>An array of payment recipients created for Payment Initiation</summary>
	[JsonPropertyName("recipients")]
	public PaymentInitiationRecipient[] recipients { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== PaymentInitiationRecipientListRequest.cs
==================================================

public class PaymentInitiationRecipientListRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

}


== PaymentInitiationRecipient.cs
==================================================

public class PaymentInitiationRecipient
{
	/// <summary>The ID of the recipient.</summary>
	[JsonPropertyName("recipient_id")]
	public string recipient_id { get; set; }

	/// <summary>The name of the recipient.</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	/// <summary>The optional address of the payment recipient. This object is not currently required to make payments from UK institutions and should not be populated, though may be necessary for future European expansion.</summary>
	[JsonPropertyName("address")]
	public PaymentInitiationAddress address { get; set; }

	/// <summary>The International Bank Account Number (IBAN) for the recipient.</summary>
	[JsonPropertyName("iban")]
	public string iban { get; set; }

	[JsonPropertyName("bacs")]
	public RecipientBACSNullable bacs { get; set; }

	/// <summary>The EMI (E-Money Institution) recipient that this recipient is associated with, if any. This EMI recipient is used as an intermediary account to enable Plaid to reconcile the settlement of funds for Payment Initiation requests.</summary>
	[JsonPropertyName("emi_recipient_id")]
	public string emi_recipient_id { get; set; }

}


== PaymentInitiationRecipientGetRequest.cs
==================================================

public class PaymentInitiationRecipientGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The ID of the recipient</summary>
	[JsonPropertyName("recipient_id")]
	public string recipient_id { get; set; }

}


== PaymentInitiationPaymentReverseResponse.cs
==================================================

********************* ERRORS *********************

[CS1056] Line 9: Unexpected character '`'
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 9: Unexpected character '`'
[CS1519] Line 9: Invalid token '`' in class, record, struct, or interface member declaration
[CS1003] Line 9: Syntax error, ',' expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1002] Line 9: ; expected
[CS1003] Line 9: Syntax error, '[' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1003] Line 9: Syntax error, ',' expected
[CS1001] Line 9: Identifier expected
[CS1001] Line 9: Identifier expected
[CS1056] Line 11: Unexpected character '`'
[CS1003] Line 11: Syntax error, ',' expected
[CS1001] Line 11: Identifier expected
[CS1056] Line 11: Unexpected character '`'
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1056] Line 13: Unexpected character '`'
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1056] Line 13: Unexpected character '`'
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1056] Line 15: Unexpected character '`'
[CS1003] Line 15: Syntax error, ',' expected
[CS1001] Line 15: Identifier expected
[CS1056] Line 15: Unexpected character '`'
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1001] Line 15: Identifier expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1001] Line 15: Identifier expected
[CS1001] Line 15: Identifier expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1001] Line 15: Identifier expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1003] Line 15: Syntax error, ',' expected
[CS1031] Line 16: Type expected
[CS1001] Line 16: Identifier expected
[CS1003] Line 16: Syntax error, ']' expected
[CS1514] Line 16: { expected
[CS1513] Line 16: } expected

**************************************************


public class PaymentInitiationPaymentReverseResponse
{
	/// <summary>A unique ID identifying the refund</summary>
	[JsonPropertyName("refund_id")]
	public string refund_id { get; set; }

	/// <summary>The status of the refund.

`PROCESSING`: The refund is currently being processed. The refund will automatically exit this state when processing is complete.

`INITIATED`: The refund has been successfully initiated.

`EXECUTED`: Indicates that the refund has been successfully executed.

`FAILED`: The refund has failed to be executed. This error is retryable once the root cause is resolved.</summary>
	[JsonPropertyName("status")]
	public string status { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== PaymentInitiationRecipientCreateResponse.cs
==================================================

public class PaymentInitiationRecipientCreateResponse
{
	/// <summary>A unique ID identifying the recipient</summary>
	[JsonPropertyName("recipient_id")]
	public string recipient_id { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== PaymentInitiationRecipientCreateRequest.cs
==================================================

public class PaymentInitiationRecipientCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The name of the recipient</summary>
	[JsonPropertyName("name")]
	public string name { get; set; }

	/// <summary>The International Bank Account Number (IBAN) for the recipient. If BACS data is not provided, an IBAN is required.</summary>
	[JsonPropertyName("iban")]
	public string iban { get; set; }

	[JsonPropertyName("bacs")]
	public RecipientBACSNullable bacs { get; set; }

	/// <summary>The optional address of the payment recipient. This object is not currently required to make payments from UK institutions and should not be populated, though may be necessary for future European expansion.</summary>
	[JsonPropertyName("address")]
	public PaymentInitiationAddress address { get; set; }

}


== LiabilitiesGetResponse.cs
==================================================

public class LiabilitiesGetResponse
{
	/// <summary>An array of accounts associated with the Item</summary>
	[JsonPropertyName("accounts")]
	public AccountBase[] accounts { get; set; }

	/// <summary>Metadata about the Item.</summary>
	[JsonPropertyName("item")]
	public Item item { get; set; }

	/// <summary>An object containing liability accounts</summary>
	[JsonPropertyName("liabilities")]
	public LiabilitiesObject liabilities { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== LiabilitiesGetRequestOptions.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1585] Line 7: Member modifier 'public' must precede the member type and name
[CS1031] Line 5: Type expected
[CS1003] Line 5: Syntax error, ',' expected
[CS1003] Line 5: Syntax error, ',' expected

**************************************************


public class LiabilitiesGetRequestOptions
{
	/// <summary>A list of accounts to retrieve for the Item.

An error will be returned if a provided `account_id` is not associated with the Item</summary>
	[JsonPropertyName("account_ids")]
	public string[] account_ids { get; set; }

}


== LiabilitiesGetRequest.cs
==================================================

public class LiabilitiesGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>An optional object to filter `/liabilities/get` results. If provided, `options` cannot be null.</summary>
	[JsonPropertyName("options")]
	public LiabilitiesGetRequestOptions options { get; set; }

}


== JWKPublicKey.cs
==================================================

public class JWKPublicKey
{
	/// <summary>The alg member identifies the cryptographic algorithm family used with the key.</summary>
	[JsonPropertyName("alg")]
	public string alg { get; set; }

	/// <summary>The crv member identifies the cryptographic curve used with the key.</summary>
	[JsonPropertyName("crv")]
	public string crv { get; set; }

	/// <summary>The kid (Key ID) member can be used to match a specific key. This can be used, for instance, to choose among a set of keys within the JWK during key rollover.</summary>
	[JsonPropertyName("kid")]
	public string kid { get; set; }

	/// <summary>The kty (key type) parameter identifies the cryptographic algorithm family used with the key, such as RSA or EC.</summary>
	[JsonPropertyName("kty")]
	public string kty { get; set; }

	/// <summary>The use (public key use) parameter identifies the intended use of the public key.</summary>
	[JsonPropertyName("use")]
	public string use { get; set; }

	/// <summary>The x member contains the x coordinate for the elliptic curve point.</summary>
	[JsonPropertyName("x")]
	public string x { get; set; }

	/// <summary>The y member contains the y coordinate for the elliptic curve point.</summary>
	[JsonPropertyName("y")]
	public string y { get; set; }

	/// <summary>The timestamp when the key was created, in Unix time.</summary>
	[JsonPropertyName("created_at")]
	public int created_at { get; set; }

	/// <summary>The timestamp when the key expired, in Unix time.</summary>
	[JsonPropertyName("expired_at")]
	public int expired_at { get; set; }

}


== WebhookVerificationKeyGetResponse.cs
==================================================

public class WebhookVerificationKeyGetResponse
{
	/// <summary>A JSON Web Key (JWK) that can be used in conjunction with [JWT libraries](https://jwt.io/#libraries-io) to verify Plaid webhooks</summary>
	[JsonPropertyName("key")]
	public JWKPublicKey key { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== WebhookVerificationKeyGetRequest.cs
==================================================

public class WebhookVerificationKeyGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The key ID ( `kid` ) from the JWT header.</summary>
	[JsonPropertyName("key_id")]
	public string key_id { get; set; }

}


== ItemAccessTokenInvalidateResponse.cs
==================================================

public class ItemAccessTokenInvalidateResponse
{
	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("new_access_token")]
	public AccessToken new_access_token { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== ItemAccessTokenInvalidateRequest.cs
==================================================

public class ItemAccessTokenInvalidateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

}


== ItemWebhookUpdateResponse.cs
==================================================

public class ItemWebhookUpdateResponse
{
	/// <summary>Metadata about the Item.</summary>
	[JsonPropertyName("item")]
	public Item item { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== ItemWebhookUpdateRequest.cs
==================================================

public class ItemWebhookUpdateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>The new webhook URL to associate with the Item.</summary>
	[JsonPropertyName("webhook")]
	public string webhook { get; set; }

}


== ProcessorBalanceGetResponse.cs
==================================================

public class ProcessorBalanceGetResponse
{
	/// <summary>A single account at a financial institution.</summary>
	[JsonPropertyName("account")]
	public AccountBase account { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== ProcessorBalanceGetRequestOptions.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 5: ; expected
[CS1003] Line 5: Syntax error, ',' expected
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS8124] Line 5: Tuple must contain at least two elements.
[CS1519] Line 5: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1003] Line 5: Syntax error, ',' expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1003] Line 5: Syntax error, ',' expected
[CS1002] Line 5: ; expected
[CS1003] Line 7: Syntax error, '(' expected
[CS1001] Line 7: Identifier expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS8124] Line 7: Tuple must contain at least two elements.
[CS1001] Line 7: Identifier expected
[CS1001] Line 7: Identifier expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1056] Line 7: Unexpected character '`'
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1001] Line 7: Identifier expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1001] Line 7: Identifier expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1003] Line 7: Syntax error, ',' expected
[CS1031] Line 8: Type expected
[CS1001] Line 8: Identifier expected
[CS1026] Line 8: ) expected
[CS1002] Line 8: ; expected

**************************************************


public class ProcessorBalanceGetRequestOptions
{
	/// <summary>Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the oldest acceptable balance when making a request to `/accounts/balance/get`.

If the balance that is pulled for `ins_128026` (Capital One) is older than the given timestamp, an `INVALID_REQUEST` error with the code of `LAST_UPDATED_DATETIME_OUT_OF_RANGE` will be returned with the most recent timestamp for the requested account contained in the response.

This field is only used when the institution is `ins_128026` (Capital One), in which case a value must be provided or an `INVALID_REQUEST` error with the code of `INVALID_FIELD` will be returned. For all other institutions, this field is ignored.</summary>
	[JsonPropertyName("min_last_updated_datetime")]
	public MinLastUpdatedDatetime min_last_updated_datetime { get; set; }

}


== ProcessorBalanceGetRequest.cs
==================================================

public class ProcessorBalanceGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`</summary>
	[JsonPropertyName("processor_token")]
	public ProcessorToken processor_token { get; set; }

	/// <summary>An optional object to filter `/processor/balance/get` results.</summary>
	[JsonPropertyName("options")]
	public ProcessorBalanceGetRequestOptions options { get; set; }

}


== ProcessorIdentityGetResponse.cs
==================================================

public class ProcessorIdentityGetResponse
{
	[JsonPropertyName("account")]
	public AccountIdentity account { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== ProcessorIdentityGetRequest.cs
==================================================

public class ProcessorIdentityGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`</summary>
	[JsonPropertyName("processor_token")]
	public ProcessorToken processor_token { get; set; }

}


== ProcessorNumber.cs
==================================================

public class ProcessorNumber
{
	[JsonPropertyName("ach")]
	public NumbersACHNullable ach { get; set; }

	[JsonPropertyName("eft")]
	public NumbersEFTNullable eft { get; set; }

	[JsonPropertyName("international")]
	public NumbersInternationalNullable international { get; set; }

	[JsonPropertyName("bacs")]
	public NumbersBACSNullable bacs { get; set; }

}


== ProcessorBankTransferCreateResponse.cs
==================================================

public class ProcessorBankTransferCreateResponse
{
	/// <summary>Represents a bank transfer within the Bank Transfers API.</summary>
	[JsonPropertyName("bank_transfer")]
	public BankTransfer bank_transfer { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== ProcessorBankTransferCreateRequest.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 13: ; expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1002] Line 13: ; expected
[CS1003] Line 13: Syntax error, '(' expected
[CS1001] Line 13: Identifier expected
[CS1031] Line 13: Type expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1031] Line 14: Type expected
[CS1001] Line 14: Identifier expected
[CS1026] Line 14: ) expected
[CS1002] Line 14: ; expected
[CS1056] Line 43: Unexpected character '`'
[CS1519] Line 43: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 43: Unexpected character '`'
[CS1002] Line 43: ; expected
[CS1519] Line 45: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 45: Unexpected character '`'
[CS1519] Line 45: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 45: ; expected
[CS1519] Line 47: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 47: Unexpected character '`'
[CS1519] Line 47: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 47: Unexpected character '`'
[CS1002] Line 47: ; expected
[CS1003] Line 47: Syntax error, ',' expected
[CS1002] Line 47: ; expected
[CS1002] Line 47: ; expected
[CS1002] Line 47: ; expected
[CS1002] Line 47: ; expected
[CS1519] Line 49: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 49: Unexpected character '`'
[CS1519] Line 49: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 49: Unexpected character '`'
[CS1002] Line 49: ; expected
[CS1519] Line 51: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 51: Unexpected character '`'
[CS1519] Line 51: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 51: Unexpected character '`'
[CS1002] Line 51: ; expected
[CS1056] Line 53: Unexpected character '`'
[CS1056] Line 53: Unexpected character '`'
[CS1002] Line 53: ; expected
[CS1002] Line 53: ; expected
[CS1519] Line 55: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 55: Unexpected character '`'
[CS1519] Line 55: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 55: Unexpected character '`'
[CS1519] Line 57: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 57: Unexpected character '`'
[CS1519] Line 57: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 57: Unexpected character '`'
[CS1002] Line 57: ; expected
[CS1519] Line 59: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 59: Unexpected character '`'
[CS1519] Line 59: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 59: Unexpected character '`'
[CS1002] Line 59: ; expected
[CS1519] Line 61: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 61: Unexpected character '`'
[CS1519] Line 61: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 61: Unexpected character '`'
[CS1519] Line 61: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 61: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 61: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 61: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 63: Unexpected character '`'
[CS1056] Line 63: Unexpected character '`'
[CS1002] Line 63: ; expected
[CS1519] Line 63: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 63: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 63: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 63: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 65: Unexpected character '`'
[CS1056] Line 65: Unexpected character '`'
[CS1002] Line 65: ; expected
[CS1002] Line 65: ; expected
[CS1003] Line 65: Syntax error, ',' expected
[CS1002] Line 65: ; expected
[CS1003] Line 65: Syntax error, ',' expected
[CS1002] Line 65: ; expected
[CS1002] Line 65: ; expected
[CS1003] Line 65: Syntax error, ',' expected
[CS1002] Line 65: ; expected
[CS1002] Line 65: ; expected
[CS1002] Line 65: ; expected
[CS1519] Line 65: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 65: Invalid token ',' in class, record, struct, or interface member declaration
[CS1056] Line 67: Unexpected character '`'
[CS1056] Line 67: Unexpected character '`'
[CS1002] Line 67: ; expected
[CS1519] Line 67: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 67: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 67: ; expected
[CS1519] Line 69: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 69: Unexpected character '`'
[CS1519] Line 69: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 69: Unexpected character '`'
[CS1519] Line 69: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 69: Invalid token '-' in class, record, struct, or interface member declaration
[CS1056] Line 71: Unexpected character '`'
[CS1056] Line 71: Unexpected character '`'
[CS1002] Line 71: ; expected
[CS1519] Line 71: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 71: Invalid token '-' in class, record, struct, or interface member declaration
[CS1003] Line 71: Syntax error, ',' expected
[CS1002] Line 71: ; expected
[CS1002] Line 71: ; expected
[CS1056] Line 71: Unexpected character '’'
[CS1002] Line 71: ; expected
[CS1002] Line 71: ; expected
[CS1002] Line 71: ; expected
[CS1519] Line 71: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1519] Line 71: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 71: ; expected
[CS1001] Line 71: Identifier expected
[CS1003] Line 71: Syntax error, ',' expected
[CS1003] Line 71: Syntax error, '>' expected
[CS1003] Line 71: Syntax error, '(' expected
[CS1001] Line 71: Identifier expected
[CS1003] Line 71: Syntax error, ',' expected
[CS1003] Line 71: Syntax error, ',' expected
[CS1031] Line 72: Type expected
[CS1001] Line 72: Identifier expected
[CS1026] Line 72: ) expected
[CS1002] Line 72: ; expected
[CS1519] Line 84: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 84: ; expected
[CS1002] Line 84: ; expected
[CS1003] Line 84: Syntax error, ',' expected
[CS1003] Line 84: Syntax error, ',' expected
[CS1001] Line 84: Identifier expected
[CS1002] Line 84: ; expected
[CS1519] Line 85: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 85: ; expected
[CS1002] Line 85: ; expected
[CS1003] Line 85: Syntax error, ',' expected
[CS1002] Line 86: ; expected
[CS1003] Line 86: Syntax error, ',' expected
[CS1002] Line 86: ; expected
[CS1519] Line 86: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 86: Invalid token '/' in class, record, struct, or interface member declaration
[CS1003] Line 86: Syntax error, ',' expected
[CS1002] Line 87: ; expected
[CS1002] Line 87: ; expected
[CS1003] Line 87: Syntax error, ',' expected
[CS1002] Line 87: ; expected
[CS1519] Line 88: Invalid token '-' in class, record, struct, or interface member declaration
[CS1519] Line 88: Invalid token '-' in class, record, struct, or interface member declaration
[CS1002] Line 88: ; expected
[CS1003] Line 88: Syntax error, ',' expected
[CS1002] Line 88: ; expected
[CS1585] Line 91: Member modifier 'public' must precede the member type and name
[CS1031] Line 89: Type expected
[CS1003] Line 89: Syntax error, ',' expected
[CS1003] Line 89: Syntax error, ',' expected

**************************************************


public class ProcessorBankTransferCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>A random key provided by the client, per unique bank transfer. Maximum of 50 characters.

The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a bank transfer fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single bank transfer is created.</summary>
	[JsonPropertyName("idempotency_key")]
	public BankTransferIdempotencyKey idempotency_key { get; set; }

	/// <summary>The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`</summary>
	[JsonPropertyName("processor_token")]
	public ProcessorToken processor_token { get; set; }

	/// <summary>The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.</summary>
	[JsonPropertyName("type")]
	public BankTransferType type { get; set; }

	/// <summary>The network or rails used for the transfer. Valid options are `ach`, `same-day-ach`, or `wire`.</summary>
	[JsonPropertyName("network")]
	public BankTransferNetwork network { get; set; }

	/// <summary>The amount of the bank transfer (decimal string with two digits of precision e.g. “10.00”).</summary>
	[JsonPropertyName("amount")]
	public BankTransferAmount amount { get; set; }

	/// <summary>The currency of the transfer amount – should be set to "USD".</summary>
	[JsonPropertyName("iso_currency_code")]
	public string iso_currency_code { get; set; }

	/// <summary>The transfer description. Maximum of 10 characters.</summary>
	[JsonPropertyName("description")]
	public string description { get; set; }

	/// <summary>Specifies the use case of the transfer.  Required for transfers on an ACH network.

`"arc"` - Accounts Receivable Entry

`"cbr`" - Cross Border Entry

`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts

`"cie"` - Customer Initiated Entry

`"cor"` - Automated Notification of Change

`"ctx"` - Corporate Trade Exchange

`"iat"` - International

`"mte"` - Machine Transfer Entry

`"pbr"` - Cross Border Entry

`"pop"` - Point-of-Purchase Entry

`"pos"` - Point-of-Sale Entry

`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment

`"rck"` - Re-presented Check Entry

`"tel"` - Telephone-Initiated Entry

`"web"` - Internet-Initiated Entry - debits from a consumer’s account where their authorization is obtained over the Internet</summary>
	[JsonPropertyName("ach_class")]
	public ACHClass ach_class { get; set; }

	/// <summary>The legal name and other information for the account holder.</summary>
	[JsonPropertyName("user")]
	public BankTransferUser user { get; set; }

	/// <summary>An arbitrary string provided by the client for storage with the bank transfer. May be up to 100 characters.</summary>
	[JsonPropertyName("custom_tag")]
	public string custom_tag { get; set; }

	/// <summary>The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
- The JSON values must be Strings (no nested JSON objects allowed)
- Only ASCII characters may be used
- Maximum of 50 key/value pairs
- Maximum key length of 40 characters
- Maximum value length of 500 characters
</summary>
	[JsonPropertyName("metadata")]
	public BankTransferMetadata metadata { get; set; }

	/// <summary>Plaid’s unique identifier for the origination account for this transfer. If you have more than one origination account, this value must be specified.</summary>
	[JsonPropertyName("origination_account_id")]
	public string origination_account_id { get; set; }

}


== ProcessorAuthGetResponse.cs
==================================================

public class ProcessorAuthGetResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

	/// <summary>An object containing identifying numbers used for making electronic transfers to and from the `account`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by the `account` for which auth data has been requested, a null value will be returned.</summary>
	[JsonPropertyName("numbers")]
	public ProcessorNumber numbers { get; set; }

	/// <summary>A single account at a financial institution.</summary>
	[JsonPropertyName("account")]
	public AccountBase account { get; set; }

}


== ProcessorAuthGetRequest.cs
==================================================

public class ProcessorAuthGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`</summary>
	[JsonPropertyName("processor_token")]
	public ProcessorToken processor_token { get; set; }

}


== IdentityGetResponse.cs
==================================================

public class IdentityGetResponse
{
	/// <summary>The accounts for which Identity data has been requested</summary>
	[JsonPropertyName("accounts")]
	public AccountIdentity[] accounts { get; set; }

	/// <summary>Metadata about the Item.</summary>
	[JsonPropertyName("item")]
	public Item item { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== IdentityGetRequestOptions.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 4: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token ':' in class, record, struct, or interface member declaration
[CS1002] Line 4: ; expected
[CS1002] Line 4: ; expected
[CS1519] Line 4: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1056] Line 4: Unexpected character '`'
[CS1002] Line 4: ; expected
[CS1519] Line 4: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 4: Unexpected character '`'
[CS1519] Line 4: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 4: ; expected
[CS1002] Line 4: ; expected
[CS1001] Line 4: Identifier expected
[CS1519] Line 4: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class IdentityGetRequestOptions
{
	/// <summary>A list of `account_ids` to retrieve for the Item.
Note: An error will be returned if a provided `account_id` is not associated with the Item.</summary>
	[JsonPropertyName("account_ids")]
	public string[] account_ids { get; set; }

}


== IdentityGetRequest.cs
==================================================

public class IdentityGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>An optional object to filter `/identity/get` results.</summary>
	[JsonPropertyName("options")]
	public IdentityGetRequestOptions options { get; set; }

}


== AccountsBalanceGetRequestOptions.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 5: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token ':' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1001] Line 5: Identifier expected
[CS1519] Line 5: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '>' in class, record, struct, or interface member declaration
[CS1002] Line 11: ; expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1002] Line 11: ; expected
[CS1519] Line 11: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token 'for' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS8124] Line 11: Tuple must contain at least two elements.
[CS1519] Line 11: Invalid token 'is' in class, record, struct, or interface member declaration
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1519] Line 11: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token ',' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 11: Unexpected character '`'
[CS1519] Line 11: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1002] Line 11: ; expected
[CS1002] Line 11: ; expected
[CS1003] Line 11: Syntax error, ',' expected
[CS1002] Line 11: ; expected
[CS1003] Line 13: Syntax error, '(' expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1056] Line 13: Unexpected character '`'
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1056] Line 13: Unexpected character '`'
[CS1003] Line 13: Syntax error, ',' expected
[CS8124] Line 13: Tuple must contain at least two elements.
[CS1001] Line 13: Identifier expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1056] Line 13: Unexpected character '`'
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1056] Line 13: Unexpected character '`'
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1056] Line 13: Unexpected character '`'
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1056] Line 13: Unexpected character '`'
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1001] Line 13: Identifier expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1003] Line 13: Syntax error, ',' expected
[CS1031] Line 14: Type expected
[CS1001] Line 14: Identifier expected
[CS1026] Line 14: ) expected
[CS1002] Line 14: ; expected

**************************************************


public class AccountsBalanceGetRequestOptions
{
	/// <summary>A list of `account_ids` to retrieve for the Item. The default value is `null`.

Note: An error will be returned if a provided `account_id` is not associated with the Item.</summary>
	[JsonPropertyName("account_ids")]
	public string[] account_ids { get; set; }

	/// <summary>Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the oldest acceptable balance when making a request to `/accounts/balance/get`.

If the balance that is pulled for `ins_128026` (Capital One) is older than the given timestamp, an `INVALID_REQUEST` error with the code of `LAST_UPDATED_DATETIME_OUT_OF_RANGE` will be returned with the most recent timestamp for the requested account contained in the response.

This field is only used when the institution is `ins_128026` (Capital One), in which case a value must be provided or an `INVALID_REQUEST` error with the code of `INVALID_FIELD` will be returned. For all other institutions, this field is ignored.</summary>
	[JsonPropertyName("min_last_updated_datetime")]
	public MinLastUpdatedDatetime min_last_updated_datetime { get; set; }

}


== AccountsBalanceGetRequest.cs
==================================================

public class AccountsBalanceGetRequest
{
	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>An optional object to filter `/accounts/balance/get` results.</summary>
	[JsonPropertyName("options")]
	public AccountsBalanceGetRequestOptions options { get; set; }

}


== SandboxItemFireWebhookResponse.cs
==================================================

public class SandboxItemFireWebhookResponse
{
	/// <summary>Value is `true`  if the test` webhook_code`  was successfully fired.</summary>
	[JsonPropertyName("webhook_fired")]
	public bool webhook_fired { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== SandboxItemFireWebhookRequest.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 17: Invalid token '*' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class SandboxItemFireWebhookRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>The following values for `webhook_code` are supported:

* `DEFAULT_UPDATE`</summary>
	[JsonPropertyName("webhook_code")]
	public string webhook_code { get; set; }

}


== SandboxPublicTokenCreateResponse.cs
==================================================

public class SandboxPublicTokenCreateResponse
{
	/// <summary>A public token that can be exchanged for an access token using `/item/public_token/exchange`</summary>
	[JsonPropertyName("public_token")]
	public string public_token { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== SandboxPublicTokenCreateRequestOptionsTransactions.cs
==================================================

public class SandboxPublicTokenCreateRequestOptionsTransactions
{
	/// <summary>The earliest date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.</summary>
	[JsonPropertyName("start_date")]
	public string start_date { get; set; }

	/// <summary>The most recent date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.</summary>
	[JsonPropertyName("end_date")]
	public string end_date { get; set; }

}


== SandboxPublicTokenCreateRequestOptions.cs
==================================================

public class SandboxPublicTokenCreateRequestOptions
{
	/// <summary>Specify a webhook to associate with the new Item.</summary>
	[JsonPropertyName("webhook")]
	public string webhook { get; set; }

	/// <summary>Test username to use for the creation of the Sandbox Item. Default value is `user_good`.</summary>
	[JsonPropertyName("override_username")]
	public SandboxOverrideUsername override_username { get; set; }

	/// <summary>Test password to use for the creation of the Sandbox Item. Default value is `pass_good`.</summary>
	[JsonPropertyName("override_password")]
	public SandboxOverridePassword override_password { get; set; }

	/// <summary>SandboxPublicTokenCreateRequestOptionsTransactions is an optional set of parameters corresponding to transactions options.</summary>
	[JsonPropertyName("transactions")]
	public SandboxPublicTokenCreateRequestOptionsTransactions transactions { get; set; }

}


== SandboxPublicTokenCreateRequest.cs
==================================================

public class SandboxPublicTokenCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The ID of the institution the Item will be associated with</summary>
	[JsonPropertyName("institution_id")]
	public string institution_id { get; set; }

	/// <summary>The products to initially pull for the Item. May be any products that the specified `institution_id`  supports. This array may not be empty.</summary>
	[JsonPropertyName("initial_products")]
	public Products[] initial_products { get; set; }

	/// <summary>An optional set of options to be used when configuring the Item. If specified, must not be `null`.</summary>
	[JsonPropertyName("options")]
	public SandboxPublicTokenCreateRequestOptions options { get; set; }

}


== SandboxProcessorTokenCreateResponse.cs
==================================================

public class SandboxProcessorTokenCreateResponse
{
	/// <summary>A processor token that can be used to call the `/processor/` endpoints.</summary>
	[JsonPropertyName("processor_token")]
	public string processor_token { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== SandboxProcessorTokenCreateRequestOptions.cs
==================================================

public class SandboxProcessorTokenCreateRequestOptions
{
	/// <summary>Test username to use for the creation of the Sandbox Item. Default value is `user_good`.</summary>
	[JsonPropertyName("override_username")]
	public SandboxOverrideUsername override_username { get; set; }

	/// <summary>Test password to use for the creation of the Sandbox Item. Default value is `pass_good`.</summary>
	[JsonPropertyName("override_password")]
	public SandboxOverridePassword override_password { get; set; }

}


== SandboxProcessorTokenCreateRequest.cs
==================================================

public class SandboxProcessorTokenCreateRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The ID of the institution the Item will be associated with</summary>
	[JsonPropertyName("institution_id")]
	public string institution_id { get; set; }

	/// <summary>An optional set of options to be used when configuring the Item. If specified, must not be `null`.</summary>
	[JsonPropertyName("options")]
	public SandboxProcessorTokenCreateRequestOptions options { get; set; }

}


== CategoriesGetResponse.cs
==================================================

public class CategoriesGetResponse
{
	/// <summary>An array of all of the transaction categories used by Plaid.</summary>
	[JsonPropertyName("categories")]
	public Category[] categories { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== CategoriesGetRequest.cs
==================================================

public class CategoriesGetRequest
{
}


== AccountsGetResponse.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 4: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 4: Unexpected character '`'
[CS1519] Line 4: Invalid token '`' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '/' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 4: Unexpected character '`'
[CS1519] Line 4: Invalid token '`' in class, record, struct, or interface member declaration
[CS1044] Line 4: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 4: ; expected
[CS1002] Line 4: ; expected
[CS1003] Line 4: Syntax error, ',' expected
[CS1002] Line 4: ; expected
[CS1002] Line 4: ; expected
[CS1001] Line 4: Identifier expected
[CS1519] Line 4: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class AccountsGetResponse
{
	/// <summary>An array of financial institution accounts associated with the Item.
If `/accounts/balance/get` was called, each account will include real-time balance information.</summary>
	[JsonPropertyName("accounts")]
	public AccountBase[] accounts { get; set; }

	/// <summary>Metadata about the Item.</summary>
	[JsonPropertyName("item")]
	public Item item { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== AccountsGetRequestOptions.cs
==================================================

public class AccountsGetRequestOptions
{
	/// <summary>An array of `account_ids` to retrieve for the Account.</summary>
	[JsonPropertyName("account_ids")]
	public string[] account_ids { get; set; }

}


== AccountsGetRequest.cs
==================================================

public class AccountsGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>An optional object to filter `/accounts/get` results.</summary>
	[JsonPropertyName("options")]
	public AccountsGetRequestOptions options { get; set; }

}


== ItemRemoveResponse.cs
==================================================

public class ItemRemoveResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== ItemRemoveRequest.cs
==================================================

public class ItemRemoveRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

}


== InstitutionsGetByIdResponse.cs
==================================================

public class InstitutionsGetByIdResponse
{
	/// <summary>Details relating to a specific financial institution</summary>
	[JsonPropertyName("institution")]
	public Institution institution { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== InstitutionsGetByIdRequestOptions.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token 'using' in class, record, struct, or interface member declaration
[CS1513] Line 5: } expected
[CS8803] Line 5: Top-level statements must precede namespace and type declarations.
[CS1044] Line 5: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 5: ; expected
[CS1003] Line 5: Syntax error, ',' expected
[CS1001] Line 5: Identifier expected
[CS1003] Line 5: Syntax error, ',' expected
[CS1044] Line 5: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1003] Line 5: Syntax error, ',' expected
[CS1002] Line 5: ; expected
[CS1022] Line 21: Type or namespace definition, or end-of-file expected

**************************************************


public class InstitutionsGetByIdRequestOptions
{
	/// <summary>When `true`, return an institution's logo, brand color, and URL. When available, the bank's logo is returned as a base64 encoded 152x152 PNG, the brand color is in hexadecimal format. The default value is `false`.

Note that Plaid does not own any of the logos shared by the API and that by accessing or using these logos, you agree that you are doing so at your own risk and will, if necessary, obtain all required permissions from the appropriate rights holders and adhere to any applicable usage guidelines. Plaid disclaims all express or implied warranties with respect to the logos.</summary>
	[JsonPropertyName("include_optional_metadata")]
	public bool include_optional_metadata { get; set; }

	/// <summary>If `true`, the response will include status information about the institution. Default value is `false`.</summary>
	[JsonPropertyName("include_status")]
	public bool include_status { get; set; }

	/// <summary>When `true`, returns metadata related to the Auth product indicating which auth methods are supported.</summary>
	[JsonPropertyName("include_auth_metadata")]
	public bool include_auth_metadata { get; set; }

	/// <summary>When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.</summary>
	[JsonPropertyName("include_payment_initiation_metadata")]
	public bool include_payment_initiation_metadata { get; set; }

}


== InstitutionsGetByIdRequest.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 16: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 16: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 16: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class InstitutionsGetByIdRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The ID of the institution to get details about</summary>
	[JsonPropertyName("institution_id")]
	public string institution_id { get; set; }

	/// <summary>Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard.
</summary>
	[JsonPropertyName("country_codes")]
	public CountryCode[] country_codes { get; set; }

	/// <summary>Specifies optional parameters for `/institutions/get_by_id`. If provided, must not be `null`.</summary>
	[JsonPropertyName("options")]
	public InstitutionsGetByIdRequestOptions options { get; set; }

}


== InstitutionsSearchResponse.cs
==================================================

public class InstitutionsSearchResponse
{
	/// <summary>An array of institutions matching the search criteria</summary>
	[JsonPropertyName("institutions")]
	public Institution[] institutions { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== InstitutionsSearchPaymentInitiationOptions.cs
==================================================

public class InstitutionsSearchPaymentInitiationOptions
{
	/// <summary>A unique ID identifying the payment</summary>
	[JsonPropertyName("payment_id")]
	public string payment_id { get; set; }

}


== InstitutionsSearchRequestOptions.cs
==================================================

public class InstitutionsSearchRequestOptions
{
	/// <summary>Limit results to institutions with or without OAuth login flows. This is primarily relevant to institutions with European country codes</summary>
	[JsonPropertyName("oauth")]
	public bool oauth { get; set; }

	/// <summary>When true, return the institution's homepage URL, logo and primary brand color.</summary>
	[JsonPropertyName("include_optional_metadata")]
	public bool include_optional_metadata { get; set; }

	/// <summary>When `true`, returns metadata related to the Auth product indicating which auth methods are supported.</summary>
	[JsonPropertyName("include_auth_metadata")]
	public bool include_auth_metadata { get; set; }

	/// <summary>When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.</summary>
	[JsonPropertyName("include_payment_initiation_metadata")]
	public bool include_payment_initiation_metadata { get; set; }

	/// <summary>Additional options that will be used to filter institutions by various Payment Initiation configurations.</summary>
	[JsonPropertyName("payment_initiation")]
	public InstitutionsSearchPaymentInitiationOptions payment_initiation { get; set; }

}


== InstitutionsSearchRequest.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 20: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 20: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 20: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class InstitutionsSearchRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The search query. Institutions with names matching the query are returned</summary>
	[JsonPropertyName("query")]
	public string query { get; set; }

	/// <summary>Filter the Institutions based on whether they support all products listed in `products`. Provide `null` to get institutions regardless of supported products. Note that when `auth` is specified as a product, if you are enabled for Instant Match or Automated Micro-deposits, institutions that support those products will be returned even if `auth` is not present in their product array.</summary>
	[JsonPropertyName("products")]
	public Products[] products { get; set; }

	/// <summary>Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard.
</summary>
	[JsonPropertyName("country_codes")]
	public CountryCode[] country_codes { get; set; }

	/// <summary>An optional object to filter `/institutions/search` results.</summary>
	[JsonPropertyName("options")]
	public InstitutionsSearchRequestOptions options { get; set; }

}


== InstitutionsGetResponse.cs
==================================================

public class InstitutionsGetResponse
{
	/// <summary>A list of Plaid Institution</summary>
	[JsonPropertyName("institutions")]
	public Institution[] institutions { get; set; }

	/// <summary>The total number of institutions available via this endpoint</summary>
	[JsonPropertyName("total")]
	public int total { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== InstitutionsGetRequestOptions.cs
==================================================

********************* ERRORS *********************

[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1044] Line 17: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1513] Line 17: } expected
[CS8803] Line 17: Top-level statements must precede namespace and type declarations.
[CS1044] Line 17: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1002] Line 17: ; expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1001] Line 17: Identifier expected
[CS1003] Line 17: Syntax error, ',' expected
[CS1044] Line 17: Cannot use more than one type in a for, using, fixed, or declaration statement
[CS1003] Line 17: Syntax error, ',' expected
[CS1002] Line 17: ; expected
[CS1022] Line 29: Type or namespace definition, or end-of-file expected

**************************************************


public class InstitutionsGetRequestOptions
{
	/// <summary>Filter the Institutions based on which products they support. </summary>
	[JsonPropertyName("products")]
	public Products[] products { get; set; }

	/// <summary>Specify an array of routing numbers to filter institutions. The response will only return institutions that match all of the routing numbers in the array.</summary>
	[JsonPropertyName("routing_numbers")]
	public string[] routing_numbers { get; set; }

	/// <summary>Limit results to institutions with or without OAuth login flows. This is primarily relevant to institutions with European country codes.</summary>
	[JsonPropertyName("oauth")]
	public bool oauth { get; set; }

	/// <summary>When `true`, return the institution's homepage URL, logo and primary brand color.

Note that Plaid does not own any of the logos shared by the API, and that by accessing or using these logos, you agree that you are doing so at your own risk and will, if necessary, obtain all required permissions from the appropriate rights holders and adhere to any applicable usage guidelines. Plaid disclaims all express or implied warranties with respect to the logos.</summary>
	[JsonPropertyName("include_optional_metadata")]
	public bool include_optional_metadata { get; set; }

	/// <summary>When `true`, returns metadata related to the Auth product indicating which auth methods are supported.</summary>
	[JsonPropertyName("include_auth_metadata")]
	public bool include_auth_metadata { get; set; }

	/// <summary>When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.</summary>
	[JsonPropertyName("include_payment_initiation_metadata")]
	public bool include_payment_initiation_metadata { get; set; }

}


== InstitutionsGetRequest.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 20: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 20: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 20: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class InstitutionsGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The total number of Institutions to return.</summary>
	[JsonPropertyName("count")]
	public int count { get; set; }

	/// <summary>The number of Institutions to skip.</summary>
	[JsonPropertyName("offset")]
	public int offset { get; set; }

	/// <summary>Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard.
</summary>
	[JsonPropertyName("country_codes")]
	public CountryCode[] country_codes { get; set; }

	/// <summary>An optional object to filter `/institutions/get` results.</summary>
	[JsonPropertyName("options")]
	public InstitutionsGetRequestOptions options { get; set; }

}


== TransactionsRecurringGetResponse.cs
==================================================

public class TransactionsRecurringGetResponse
{
	/// <summary>An array of depository transaction streams.</summary>
	[JsonPropertyName("inflow_streams")]
	public TransactionStream[] inflow_streams { get; set; }

	/// <summary>An array of expense transaction streams.</summary>
	[JsonPropertyName("outflow_streams")]
	public TransactionStream[] outflow_streams { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== TransactionsRecurringGetRequest.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 17: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token ':' in class, record, struct, or interface member declaration
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1002] Line 17: ; expected
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 17: Unexpected character '`'
[CS1519] Line 17: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 17: ; expected
[CS1002] Line 17: ; expected
[CS1001] Line 17: Identifier expected
[CS1519] Line 17: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 17: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class TransactionsRecurringGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>A list of `account_ids` to retrieve for the Item

Note: An error will be returned if a provided `account_id` is not associated with the Item.</summary>
	[JsonPropertyName("account_ids")]
	public string[] account_ids { get; set; }

}


== TransactionsRefreshResponse.cs
==================================================

public class TransactionsRefreshResponse
{
	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== TransactionsRefreshRequest.cs
==================================================

public class TransactionsRefreshRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

}


== TransactionsGetResponse.cs
==================================================

public class TransactionsGetResponse
{
	/// <summary>An array containing the `accounts` associated with the Item for which transactions are being returned. Each transaction can be mapped to its corresponding account via the `account_id` field.</summary>
	[JsonPropertyName("accounts")]
	public AccountBase[] accounts { get; set; }

	/// <summary>An array containing transactions from the account. Transactions are returned in reverse chronological order, with the most recent at the beginning of the array. The maximum number of transactions returned is determined by the `count` parameter.</summary>
	[JsonPropertyName("transactions")]
	public Transaction[] transactions { get; set; }

	/// <summary>The total number of transactions available within the date range specified. If `total_transactions` is larger than the size of the `transactions` array, more transactions are available and can be fetched via manipulating the `offset` parameter.</summary>
	[JsonPropertyName("total_transactions")]
	public int total_transactions { get; set; }

	/// <summary>Metadata about the Item.</summary>
	[JsonPropertyName("item")]
	public Item item { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== TransactionsGetRequestOptions.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 5: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token ':' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1002] Line 5: ; expected
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 5: Unexpected character '`'
[CS1519] Line 5: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 5: ; expected
[CS1002] Line 5: ; expected
[CS1001] Line 5: Identifier expected
[CS1519] Line 5: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 5: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class TransactionsGetRequestOptions
{
	/// <summary>A list of `account_ids` to retrieve for the Item

Note: An error will be returned if a provided `account_id` is not associated with the Item.</summary>
	[JsonPropertyName("account_ids")]
	public string[] account_ids { get; set; }

	/// <summary>The number of transactions to fetch.</summary>
	[JsonPropertyName("count")]
	public int count { get; set; }

	/// <summary>The number of transactions to skip. The default value is 0.</summary>
	[JsonPropertyName("offset")]
	public int offset { get; set; }

	/// <summary>Include the raw unparsed transaction description from the financial institution. This field is disabled by default. If you need this information in addition to the parsed data provided, contact your Plaid Account Manager.</summary>
	[JsonPropertyName("include_original_description")]
	public bool include_original_description { get; set; }

	/// <summary>Include the `personal_finance_category` object in the response. This feature is currently in beta – to request access, contact transactions-feedback@plaid.com.</summary>
	[JsonPropertyName("include_personal_finance_category_beta")]
	public bool include_personal_finance_category_beta { get; set; }

}


== TransactionsGetRequest.cs
==================================================

public class TransactionsGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>An optional object to be used with the request. If specified, `options` must not be `null`.</summary>
	[JsonPropertyName("options")]
	public TransactionsGetRequestOptions options { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The earliest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.</summary>
	[JsonPropertyName("start_date")]
	public string start_date { get; set; }

	/// <summary>The latest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.</summary>
	[JsonPropertyName("end_date")]
	public string end_date { get; set; }

}


== AuthGetNumbers.cs
==================================================

public class AuthGetNumbers
{
	/// <summary>An array of ACH numbers identifying accounts.</summary>
	[JsonPropertyName("ach")]
	public NumbersACH[] ach { get; set; }

	/// <summary>An array of EFT numbers identifying accounts.</summary>
	[JsonPropertyName("eft")]
	public NumbersEFT[] eft { get; set; }

	/// <summary>An array of IBAN numbers identifying accounts.</summary>
	[JsonPropertyName("international")]
	public NumbersInternational[] international { get; set; }

	/// <summary>An array of BACS numbers identifying accounts.</summary>
	[JsonPropertyName("bacs")]
	public NumbersBACS[] bacs { get; set; }

}


== AuthGetResponse.cs
==================================================

public class AuthGetResponse
{
	/// <summary>The `accounts` for which numbers are being retrieved.</summary>
	[JsonPropertyName("accounts")]
	public AccountBase[] accounts { get; set; }

	/// <summary>An object containing identifying numbers used for making electronic transfers to and from the `accounts`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by any `accounts` for which data has been requested, the array for that type will be empty.</summary>
	[JsonPropertyName("numbers")]
	public AuthGetNumbers numbers { get; set; }

	/// <summary>Metadata about the Item.</summary>
	[JsonPropertyName("item")]
	public Item item { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== AuthGetRequestOptions.cs
==================================================

********************* ERRORS *********************

[CS1519] Line 4: Invalid token ':' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token ':' in class, record, struct, or interface member declaration
[CS1002] Line 4: ; expected
[CS1002] Line 4: ; expected
[CS1519] Line 4: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token 'if' in class, record, struct, or interface member declaration
[CS1056] Line 4: Unexpected character '`'
[CS1002] Line 4: ; expected
[CS1519] Line 4: Invalid token '`' in class, record, struct, or interface member declaration
[CS1056] Line 4: Unexpected character '`'
[CS1519] Line 4: Invalid token '`' in class, record, struct, or interface member declaration
[CS1002] Line 4: ; expected
[CS1002] Line 4: ; expected
[CS1001] Line 4: Identifier expected
[CS1519] Line 4: Invalid token '<' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration
[CS1519] Line 4: Invalid token '>' in class, record, struct, or interface member declaration

**************************************************


public class AuthGetRequestOptions
{
	/// <summary>A list of `account_ids` to retrieve for the Item.
Note: An error will be returned if a provided `account_id` is not associated with the Item.</summary>
	[JsonPropertyName("account_ids")]
	public string[] account_ids { get; set; }

}


== AuthGetRequest.cs
==================================================

public class AuthGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

	/// <summary>An optional object to filter `/auth/get` results.</summary>
	[JsonPropertyName("options")]
	public AuthGetRequestOptions options { get; set; }

}


== ItemGetResponse.cs
==================================================

public class ItemGetResponse
{
	/// <summary>Metadata about the Item.</summary>
	[JsonPropertyName("item")]
	public Item item { get; set; }

	[JsonPropertyName("status")]
	public ItemStatusNullable status { get; set; }

	/// <summary>A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.</summary>
	[JsonPropertyName("request_id")]
	public RequestID request_id { get; set; }

}


== ItemGetRequest.cs
==================================================

public class ItemGetRequest
{
	/// <summary>Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.</summary>
	[JsonPropertyName("client_id")]
	public APIClientID client_id { get; set; }

	/// <summary>Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.</summary>
	[JsonPropertyName("secret")]
	public APISecret secret { get; set; }

	/// <summary>The access token associated with the Item data is being requested for.</summary>
	[JsonPropertyName("access_token")]
	public AccessToken access_token { get; set; }

}


== Response.cs
==================================================

namespace Tekcari.Genapi
{
	[System.Diagnostics.DebuggerDisplay("{" + nameof(Format) + "(),nq}")]
	/// <summary>
	/// Represents response from API server.
	/// </summary>
	public readonly struct Response
	{
		/// <summary>
		/// Initializes a new instance of the <see cref="Response"/> struct.
		/// </summary>
		/// <param name="statusCode">The status code.</param>
		/// <param name="message">The message.</param>
		public Response(int statusCode, string message = default)
			: this(IsGood(statusCode), statusCode, message)
		{
		}

		/// <summary>
		/// Initializes a new instance of the <see cref="Response"/> struct.
		/// </summary>
		/// <param name="success">if set to <c>true</c> [success].</param>
		/// <param name="statusCode">The status code.</param>
		/// <param name="message">The message.</param>
		public Response(bool success, int statusCode, string message)
		{
			Message = message;
			Succeeded = success;
			StatusCode = statusCode;
		}

		/// <summary>
		/// Gets the HTTP status code.
		/// </summary>
		/// <value>The HTTP status code.</value>
		public int StatusCode { get; }

		/// <summary>
		/// Gets the error message.
		/// </summary>
		/// <value>The message.</value>
		public string Message { get; }

		/// <summary>
		/// Gets a value indicating whether the corresponding request is succeeded.
		/// </summary>
		/// <value><c>true</c> if succeeded; otherwise, <c>false</c>.</value>
		public bool Succeeded { get; }

		/// <summary>
		/// Gets a value indicating whether the corresponding request is failed.
		/// </summary>
		/// <value><c>true</c> if failed; otherwise, <c>false</c>.</value>
		public bool Failed
		{
			get => Succeeded == false;
		}

		/// <summary>
		/// Convert the value of this instance to a <see cref="System.String"/>.
		/// </summary>
		/// <returns>
		/// A <see cref="System.String" /> that represents this instance.
		/// </returns>
		public override string ToString() => Message;

		internal string Format() => $"({StatusCode}): {Message}".Trim(' ', ':');

		#region operators

		public static implicit operator bool(Response x) => x.Succeeded;

		#endregion operators
	}

	[System.Diagnostics.DebuggerDisplay("{" + nameof(Format) + "(),nq}")]
	/// <summary>
	/// Represents response data from API server.
	/// </summary>
	/// <typeparam name="T"></typeparam>
	public readonly struct Response<T>
	{
		/// <summary>
		/// Initializes a new instance of the <see cref="Response{T}"/> struct.
		/// </summary>
		/// <param name="data">The data.</param>
		/// <param name="statusCode">The status code.</param>
		/// <param name="message">The message.</param>
		public Response(T data, int statusCode = 200, string message = default)
			: this(data, Response.IsGood(statusCode), statusCode, message) { }

		/// <summary>
		/// Initializes a new instance of the <see cref="Response{T}"/> struct.
		/// </summary>
		/// <param name="data">The data.</param>
		/// <param name="success">if set to <c>true</c> [success].</param>
		/// <param name="status">The status.</param>
		/// <param name="message">The message.</param>
		public Response(T data, bool success, int status, string message)
		{
			Data = data;
			Succeeded = success;
			StatusCode = status;
			Message = message;
		}

		/// <summary>
		/// Gets the data.
		/// </summary>
		/// <value>The data.</value>
		public T Data { get; }

		/// <summary>
		/// Gets the HTTP status code.
		/// </summary>
		/// <value>The HTTP status code.</value>
		public int StatusCode { get; }

		/// <summary>
		/// Gets the error message.
		/// </summary>
		/// <value>The message.</value>
		public string Message { get; }

		/// <summary>
		/// Gets a value indicating whether the corresponding request is succeeded.
		/// </summary>
		/// <value><c>true</c> if succeeded; otherwise, <c>false</c>.</value>
		public bool Succeeded { get; }

		/// <summary>
		/// Gets a value indicating whether the corresponding request is failed.
		/// </summary>
		/// <value><c>true</c> if failed; otherwise, <c>false</c>.</value>
		public bool Failed
		{
			get => Succeeded == false;
		}

		/// <summary>
		/// Convert the value of this instance to a <see cref="System.String"/>.
		/// </summary>
		/// <returns>
		/// A <see cref="System.String" /> that represents this instance.
		/// </returns>
		public override string ToString() => Message;

		internal string Format() => $"({StatusCode}): {Message}".Trim(' ', ':');

		#region operators

		public static implicit operator T(Response<T> x) => x.Data;

		public static explicit operator bool(Response<T> x) => x.Succeeded;

		public static implicit operator Response(Response<T> x) => new Response(x.Succeeded, x.StatusCode, x.Message);

		#endregion operators
	}
}


